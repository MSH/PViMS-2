<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PViMS.API</name>
    </assembly>
    <members>
        <member name="M:PVIMS.API.Auth.JwtFactory.ToUnixEpochDate(System.DateTime)">
            <returns>Date converted to seconds since Unix epoch (Jan 1, 1970, midnight UTC).</returns>
        </member>
        <member name="P:PVIMS.API.Auth.JwtIssuerOptions.Issuer">
            <summary>
            4.1.1.  "iss" (Issuer) Claim - The "iss" (issuer) claim identifies the principal that issued the JWT.
            </summary>
        </member>
        <member name="P:PVIMS.API.Auth.JwtIssuerOptions.Subject">
            <summary>
            4.1.2.  "sub" (Subject) Claim - The "sub" (subject) claim identifies the principal that is the subject of the JWT.
            </summary>
        </member>
        <member name="P:PVIMS.API.Auth.JwtIssuerOptions.Audience">
            <summary>
            4.1.3.  "aud" (Audience) Claim - The "aud" (audience) claim identifies the recipients that the JWT is intended for.
            </summary>
        </member>
        <member name="P:PVIMS.API.Auth.JwtIssuerOptions.Expiration">
            <summary>
            4.1.4.  "exp" (Expiration Time) Claim - The "exp" (expiration time) claim identifies the expiration time on or after which the JWT MUST NOT be accepted for processing.
            </summary>
        </member>
        <member name="P:PVIMS.API.Auth.JwtIssuerOptions.NotBefore">
            <summary>
            4.1.5.  "nbf" (Not Before) Claim - The "nbf" (not before) claim identifies the time before which the JWT MUST NOT be accepted for processing.
            </summary>
        </member>
        <member name="P:PVIMS.API.Auth.JwtIssuerOptions.IssuedAt">
            <summary>
            4.1.6.  "iat" (Issued At) Claim - The "iat" (issued at) claim identifies the time at which the JWT was issued.
            </summary>
        </member>
        <member name="P:PVIMS.API.Auth.JwtIssuerOptions.ValidFor">
            <summary>
            Set the timespan the token will be valid for (default is 150 min)
            </summary>
        </member>
        <member name="P:PVIMS.API.Auth.JwtIssuerOptions.JtiGenerator">
            <summary>
            "jti" (JWT ID) Claim (default ID is a GUID)
            </summary>
        </member>
        <member name="P:PVIMS.API.Auth.JwtIssuerOptions.SigningCredentials">
            <summary>
            The signing key to use when generating tokens.
            </summary>
        </member>
        <member name="M:PVIMS.API.Controllers.AccountController.Ping">
            <summary>
            Ping service to check if API endpoint is available
            </summary>
        </member>
        <member name="M:PVIMS.API.Controllers.AccountController.Login(PVIMS.API.Models.LoginRequestDto)">
            <summary>
            Authentication provider
            </summary>
        </member>
        <member name="M:PVIMS.API.Controllers.AccountController.RefreshToken(PVIMS.API.Models.Account.ExchangeRefreshTokenRequest)">
            <summary>
            Refresh user token
            </summary>
            <remarks>Expired access tokens are valid. Refresh token can only be used once in order to obtain a new access token.</remarks>
            <param name="request">Exchange refresh token request model</param>
            <response code="200">Success</response>
            <response code="400">Bad Request</response>
        </member>
        <member name="M:PVIMS.API.Controllers.AccountController.GetNotifications">
            <summary>
            Get all notifications using a valid media type 
            </summary>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of NotificationDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.AccountController.PrepareNotificationsForClinician(System.DateTime)">
            <summary>
            Get notification messages for clinician
            </summary>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.AccountController.PrepareNotificationsForAnalyst(System.DateTime)">
            <summary>
            Get notification messages for analyst
            </summary>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.AccountController.CreateNotificationForActiveReports(System.DateTime)">
            <summary>
             Prepare notification for active reports
            </summary>
            <param name="compDate">The paramterised date to check against</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.AccountController.CreateNotificationForSpontaneousReports(System.DateTime)">
            <summary>
             Prepare notification for spontaneous reports
            </summary>
            <param name="compDate">The paramterised date to check against</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.AccountController.CreateNotificationForActiveCausality(System.DateTime)">
            <summary>
             Prepare notification for active causality reports
            </summary>
            <param name="compDate">The paramterised date to check against</param>
            <returns></returns>
        </member>
        <member name="T:PVIMS.API.Controllers.AnalysisTermsController">
            <summary>
            Analysis by meddra term
            </summary>
        </member>
        <member name="M:PVIMS.API.Controllers.AnalysisTermsController.GetAnalyserTermsByIdentifier(System.Guid,PVIMS.API.Models.Parameters.AnalyserTermSetResourceParameters)">
            <summary>
            Get a list of adverse drug reactions relevant over the analysis period
            </summary>
            <param name="workFlowGuid">The unique identifier of the work flow that report instances are associated to</param>
            <param name="analyserTermSetResourceParameters">
            Specify paging and filtering information (including requested page number and page size)
            </param>
            <returns>An ActionResult of type AnalyserTermDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.AnalysisTermsController.GetAnalyserTermByDetail(System.Guid,System.Int32,PVIMS.API.Models.Parameters.AnalyserTermSetResourceParameters)">
            <summary>
            Get a single meddra term for analysis using it's unique id and valid media type 
            </summary>
            <param name="workFlowGuid">The unique identifier of the work flow that report instances are associated to</param>
            <param name="id">The unique id of the meddra term</param>
            <param name="analyserTermSetResourceParameters">
            Specify paging and filtering information (including requested page number and page size)
            </param>
            <returns>An ActionResult of type AnalyserTermDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.AnalysisTermsController.GetAnalyserTermPatients(System.Guid,System.Int32,PVIMS.API.Models.Parameters.AnalyserTermSetResourceParameters)">
            <summary>
            Get a list of patients that contributed to the analysis
            </summary>
            <param name="workFlowGuid">The unique identifier of the work flow that report instances are associated to</param>
            <param name="id">The unique id of the meddra term</param>
            <param name="analyserTermSetResourceParameters">
            Specify paging and filtering information (including requested page number and page size)
            </param>
            <returns>An ActionResult of type AnalyserPatientDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.AnalysisTermsController.GetMeddraTermAsync``1(System.Int64)">
            <summary>
            Get single meddra term from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="id">Resource id to search by</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.AnalysisTermsController.GetAnalyserTermSets``1(PVIMS.API.Models.Parameters.AnalyserTermSetResourceParameters)">
            <summary>
            Get results from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier, detail or expanded Dto</typeparam>
            <param name="analyserTermSetResourceParameters">Standard parameters for representing resource</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.AnalysisTermsController.GetAnalyserResultSets``1(System.Int32,PVIMS.API.Models.Parameters.AnalyserTermSetResourceParameters)">
            <summary>
            Get results from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier, detail or expanded Dto</typeparam>
            <param name="termId">The unique id of the MedDRA term that we are getting results for</param>
            <param name="analyserTermSetResourceParameters">Standard parameters for representing resource</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.AnalysisTermsController.GetAnalyserPatientSets``1(System.Int32,PVIMS.API.Models.Parameters.AnalyserTermSetResourceParameters)">
            <summary>
            Get patient results from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier, detail or expanded Dto</typeparam>
            <param name="termId">The unique id of the MedDRA term that we are getting results for</param>
            <param name="analyserTermSetResourceParameters">Standard parameters for representing resource</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.AnalysisTermsController.CreateLinksForAnalyserTermSets(PVIMS.API.Models.LinkedResourceBaseDto,System.Guid,PVIMS.API.Models.Parameters.AnalyserTermSetResourceParameters,System.Boolean,System.Boolean)">
            <summary>
            Prepare HATEOAS links for a identifier based collection resource
            </summary>
            <param name="wrapper">The linked dto wrapper that will host each link</param>
            <param name="workFlowGuid">The unique identifier of the work flow that we are generating analysis for</param>
            <param name="analyserTermSetResourceParameters">Standard parameters for representing resource</param>
            <param name="hasNext">Are there additional pages</param>
            <param name="hasPrevious">Are there previous pages</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.AnalysisTermsController.CreateLinksForAnalyserPatients(PVIMS.API.Models.LinkedResourceBaseDto,System.Guid,System.Int32,PVIMS.API.Models.Parameters.AnalyserTermSetResourceParameters,System.Boolean,System.Boolean)">
            <summary>
            Prepare HATEOAS links for a identifier based collection resource
            </summary>
            <param name="wrapper">The linked dto wrapper that will host each link</param>
            <param name="workFlowGuid">The unique identifier of the work flow that we are generating analysis for</param>
            <param name="termId">The unique id of the meddra term</param>
            <param name="analyserTermSetResourceParameters">Standard parameters for representing resource</param>
            <param name="hasNext">Are there additional pages</param>
            <param name="hasPrevious">Are there previous pages</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.AnalysisTermsController.CustomResultMap(PVIMS.API.Models.AnalyserTermDetailDto,PVIMS.API.Models.Parameters.AnalyserTermSetResourceParameters)">
            <summary>
             Map additional dto detail elements not handled through automapper
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <param name="analyserTermSetResourceParameters">Standard parameters for representing resource</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.AnalysisTermsController.CreateLinksForMeddraTerm``1(``0)">
            <summary>
             Prepare HATEOAS links for a single resource
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.AppointmentsController.GetAppointmentsForSearch(PVIMS.API.Models.Parameters.AppointmentResourceParameters)">
            <summary>
            Get all appointments using a valid media type 
            </summary>
            <param name="appointmentResourceParameters">
            Specify paging and filtering information (including requested page number and page size)
            </param>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of AppointmentSearchDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.AppointmentsController.GetAppointmentByIdentifier(System.Int64,System.Int64)">
            <summary>
            Get a single appointment using it's unique id and valid media type 
            </summary>
            <param name="patientId">The unique identifier for the Patient</param>
            <param name="id">The unique identifier for the Appointment</param>
            <returns>An ActionResult of type AppointmentIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.AppointmentsController.GetAppointmentByDetail(System.Int64,System.Int64)">
            <summary>
            Get a single appointment using it's unique id and valid media type 
            </summary>
            <param name="patientId">The unique identifier for the Patient</param>
            <param name="id">The unique identifier for the Appointment</param>
            <returns>An ActionResult of type AppointmentDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.AppointmentsController.GetOutstandingVisitReport(PVIMS.API.Models.Parameters.OutstandingVisitResourceParameters)">
            <summary>
            Get a list of outstanding visits
            </summary>
            <param name="outstandingVisitResourceParameters">
            Specify paging and filtering information (including requested page number and page size)
            </param>
            <returns>An ActionResult of type OutstandingVisitReportDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.AppointmentsController.CreateAppointment(System.Int64,PVIMS.API.Models.AppointmentForCreationDto)">
            <summary>
            Create a new appointment for a patient
            </summary>
            <param name="patientId">The unique identifier of the patient</param>
            <param name="appointmentForCreation">The appointment payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.AppointmentsController.UpdateAppointment(System.Int64,System.Int64,PVIMS.API.Models.AppointmentForUpdateDto)">
            <summary>
            Update an existing appointment
            </summary>
            <param name="patientId">The unique id of the patient</param>
            <param name="id">The unique id of the appointment</param>
            <param name="appointmentForUpdate">The appointment payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.AppointmentsController.UpdateAppointmentAsDNA(System.Int64,System.Int64)">
            <summary>
            Update an existing appointment as did not arrive
            </summary>
            <param name="patientId">The unique id of the patient</param>
            <param name="id">The unique id of the appointment</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.AppointmentsController.ArchiveAppointment(System.Int64,System.Int64,PVIMS.API.Models.ArchiveDto)">
            <summary>
            Archive an existing appointment
            </summary>
            <param name="patientId">The unique identifier of the patient</param>
            <param name="id">The unique id of the appointment</param>
            <param name="appointmentForDelete">The deletion payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.AppointmentsController.GetAppointments``1(PVIMS.API.Models.Parameters.AppointmentResourceParameters)">
            <summary>
            Get appointments from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier, detail or expanded Dto</typeparam>
            <param name="appointmentResourceParameters">Standard parameters for representing resource</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.AppointmentsController.GetAppointmentAsync``1(System.Int64,System.Int64)">
            <summary>
            Get single appointment from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="patientId">unique identifier of the patient </param>
            <param name="id">Resource guid to search by</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.AppointmentsController.GetOutstandingVisitResults``1(PVIMS.API.Models.Parameters.OutstandingVisitResourceParameters)">
            <summary>
            Get patients from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier, detail or expanded Dto</typeparam>
            <param name="outstandingVisitResourceParameters">Standard parameters for representing resource</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.AppointmentsController.GetAppointmentAsync(System.Int64)">
            <summary>
            Get single appointment from repository using primary key and auto map to Dto
            </summary>
            <param name="appointmentId">Primary key of the appointment</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.AppointmentsController.CreateLinksForAppointments(PVIMS.API.Models.LinkedResourceBaseDto,PVIMS.API.Models.Parameters.AppointmentResourceParameters,System.Boolean,System.Boolean)">
            <summary>
            Prepare HATEOAS links for a identifier based collection resource
            </summary>
            <param name="wrapper">The linked dto wrapper that will host each link</param>
            <param name="appointmentResourceParameters">Standard parameters for representing resource</param>
            <param name="hasNext">Are there additional pages</param>
            <param name="hasPrevious">Are there previous pages</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.AppointmentsController.CreateLinksForAppointment``1(System.Int64,``0)">
            <summary>
             Prepare HATEOAS links for a single resource
            </summary>
            <param name="patientId">The unique identifier of the patient</param>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.AppointmentsController.CustomAppointmentMap(PVIMS.API.Models.OutstandingVisitReportDto)">
            <summary>
             Map additional dto detail elements not handled through automapper
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.AppointmentsController.CreateLinksForOutstandingVisitReport(PVIMS.API.Models.LinkedResourceBaseDto,PVIMS.API.Models.Parameters.OutstandingVisitResourceParameters,System.Boolean,System.Boolean)">
            <summary>
            Prepare HATEOAS links for a identifier based collection resource
            </summary>
            <param name="wrapper">The linked dto wrapper that will host each link</param>
            <param name="outstandingVisitResourceParameters">Standard parameters for representing resource</param>
            <param name="hasNext">Are there additional pages</param>
            <param name="hasPrevious">Are there previous pages</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.AuditLogsController.GetAuditLogsByIdentifier(PVIMS.API.Models.Parameters.AuditLogResourceParameters)">
            <summary>
            Get all auditLogs using a valid media type 
            </summary>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of AuditLogIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.AuditLogsController.GetAuditLogsByDetail(PVIMS.API.Models.Parameters.AuditLogResourceParameters)">
            <summary>
            Get all auditLogs using a valid media type 
            </summary>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of AuditLogDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.AuditLogsController.DownloadPatientDataset(PVIMS.API.Models.Parameters.AuditLogResourceParameters)">
            <summary>
            Download a patient dataset for associated audit logs
            </summary>
            <param name="auditLogResourceParameters">
            Specify paging and filtering information (including requested page number and page size)
            </param>
            <returns>An ActionResult</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.AuditLogsController.GetAuditLogByIdentifier(System.Int32)">
            <summary>
            Get a single auditLog unique ID and valid media type 
            </summary>
            <param name="id">The unique identifier for the auditLog</param>
            <returns>An ActionResult of type AuditLogIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.AuditLogsController.DownloadAuditLog(System.Int32)">
            <summary>
            Download the log for an audit trail
            </summary>
            <param name="id">The unique identifier for the auditLog</param>
            <returns>An ActionResult of type AuditLogIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.AuditLogsController.GetAuditLogs``1(PVIMS.API.Models.Parameters.AuditLogResourceParameters)">
            <summary>
            Get auditLogs from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="auditLogResourceParameters">Standard parameters for representing resource</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.AuditLogsController.GetPatientsFromAuditLogs(PVIMS.API.Models.Parameters.AuditLogResourceParameters)">
            <summary>
            Get patients from auditLogs
            </summary>
            <param name="auditLogResourceParameters">Standard parameters for representing resource</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.AuditLogsController.GetAuditLogsForExtract``1(PVIMS.API.Models.Parameters.AuditLogResourceParameters)">
            <summary>
            Get auditLogs from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="auditLogResourceParameters">Standard parameters for representing resource</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.AuditLogsController.GetAuditLogAsync``1(System.Int32)">
            <summary>
            Get single auditLog from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier, detail or expanded Dto</typeparam>
            <param name="id">Resource id to search by</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.AuditLogsController.CreateLinksForAuditLogs(PVIMS.API.Models.LinkedResourceBaseDto,PVIMS.API.Models.Parameters.AuditLogResourceParameters,System.Boolean,System.Boolean)">
            <summary>
            Prepare HATEOAS links for a identifier based collection resource
            </summary>
            <param name="wrapper">The linked dto wrapper that will host each link</param>
            <param name="auditLogResourceParameters">Standard parameters for representing resource</param>
            <param name="hasNext">Are there additional pages</param>
            <param name="hasPrevious">Are there previous pages</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.AuditLogsController.CreateLinksForAuditLog``1(``0)">
            <summary>
             Prepare HATEOAS links for a single resource
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.CareEventsController.GetCareEventsByIdentifier(PVIMS.API.Models.Parameters.IdResourceParameters)">
            <summary>
            Get all care events using a valid media type 
            </summary>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of CareEventIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.CareEventsController.GetCareEventByIdentifier(System.Int64)">
            <summary>
            Get a single care event using it's unique id and valid media type 
            </summary>
            <param name="id">The unique identifier for the care event</param>
            <returns>An ActionResult of type CareEventIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.CareEventsController.CreateCareEvent(PVIMS.API.Models.CareEventForUpdateDto)">
            <summary>
            Create a new care event
            </summary>
            <param name="careEventForUpdate">The care event payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.CareEventsController.UpdateCareEvent(System.Int64,PVIMS.API.Models.CareEventForUpdateDto)">
            <summary>
            Update an existing care event
            </summary>
            <param name="id">The unique id of the care event</param>
            <param name="careEventForUpdate">The care event payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.CareEventsController.DeleteCareEvent(System.Int64)">
            <summary>
            Delete an existing care event
            </summary>
            <param name="id">The unique id of the care event</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.CareEventsController.GetCareEvents``1(PVIMS.API.Models.Parameters.IdResourceParameters)">
            <summary>
            Get care events from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="careEventResourceParameters">Standard parameters for representing resource</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.CareEventsController.GetCareEventAsync``1(System.Int64)">
            <summary>
            Get single care event from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="id">Resource id to search by</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.CareEventsController.CreateLinksForCareEvent``1(``0)">
            <summary>
             Prepare HATEOAS links for a single resource
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.CohortGroupEnrolmentsController.GetCohortGroupEnrolmentsByDetail(System.Int32,PVIMS.API.Models.Parameters.CohortGroupEnrolmentResourceParameters)">
            <summary>
            Get all enrolments for a specific cohort group using a valid media type 
            </summary>
            <param name="cohortGroupId">The unique identifier of the cohort group that is being queried</param>
            <param name="cohortGroupEnrolmentResourceParameters">
            Specify paging and filtering information (including requested page number and page size)
            </param>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of EnrolmentDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.CohortGroupEnrolmentsController.GetPatientEnrolmentByIdentifier(System.Int64,System.Int64)">
            <summary>
            Get a single cohortGroupEnrolment using it's unique id and valid media type 
            </summary>
            <param name="patientId">The unique identifier for the Patient</param>
            <param name="id">The unique identifier for the CohortGroupEnrolment</param>
            <returns>An ActionResult of type EnrolmentDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.CohortGroupEnrolmentsController.CreatePatientEnrolment(System.Int64,PVIMS.API.Models.EnrolmentForCreationDto)">
            <summary>
            Create a new enrolment into a cohort for a patient
            </summary>
            <param name="patientId">The unique identifier of the patient</param>
            <param name="enrolmentForCreationDto">The enrolment payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.CohortGroupEnrolmentsController.UpdatePatientDeenrolment(System.Int64,System.Int64,PVIMS.API.Models.DeenrolmentForUpdateDto)">
            <summary>
            De-enrol a patient from a cohort
            </summary>
            <param name="patientId">The unique identifier of the patient</param>
            <param name="cohortGroupEnrolmentId">The unique identifier of the cohort group enrolment</param>
            <param name="deenrolmentForUpdateDto">The de-enrolment payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.CohortGroupEnrolmentsController.ArchivePatientEnrolment(System.Int64,System.Int64,PVIMS.API.Models.ArchiveDto)">
            <summary>
            Archive a patient enrolment
            </summary>
            <param name="patientId">The unique identifier of the patient</param>
            <param name="cohortGroupEnrolmentId">The unique identifier of the cohort group enrolment</param>
            <param name="enrolmentForDelete">The deletion payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.CohortGroupEnrolmentsController.GetCohortGroupEnrolments``1(System.Int32,PVIMS.API.Models.Parameters.CohortGroupEnrolmentResourceParameters)">
            <summary>
            Get cohort group enrolments from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="cohortGroupId">The unique identifier of the cohort group</param>
            <param name="cohortGroupEnrolmentResourceParameters">Standard parameters for representing resource</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.CohortGroupEnrolmentsController.GetCohortGroupEnrolmentAsync``1(System.Int64,System.Int64)">
            <summary>
            Get single cohortGroupEnrolment from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="patientId">unique identifier of the patient </param>
            <param name="id">Resource guid to search by</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.CohortGroupEnrolmentsController.GetEnrolmentAsync(System.Int64)">
            <summary>
            Get single appointment from repository using primary key and auto map to Dto
            </summary>
            <param name="enrolmentId">Primary key of the enrolment</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.CohortGroupEnrolmentsController.CreateLinksForCohortGroupEnrolment``1(``0)">
            <summary>
             Prepare HATEOAS links for a single resource
            </summary>
            <param name="patientId">The unique identifier of the patient</param>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.CohortGroupEnrolmentsController.CreateLinksForEnrolment``1(System.Int64,``0)">
            <summary>
             Prepare HATEOAS links for a single resource
            </summary>
            <param name="patientId">The unique identifier of the patient</param>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.CohortGroupEnrolmentsController.CustomCohortGroupEnrolmentMap(PVIMS.API.Models.EnrolmentDetailDto)">
            <summary>
             Map additional dto detail elements not handled through automapper
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.CohortGroupsController.GetCohortGroupsByIdentifier(PVIMS.API.Models.Parameters.CohortGroupResourceParameters)">
            <summary>
            Get all cohort groups using a valid media type 
            </summary>
            <param name="cohortGroupResourceParameters">
            Specify paging and filtering information (including requested page number and page size)
            </param>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of CohortGroupIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.CohortGroupsController.GetCohortGroupsByDetail(PVIMS.API.Models.Parameters.CohortGroupResourceParameters)">
            <summary>
            Get all cohort groups using a valid media type 
            </summary>
            <param name="cohortGroupResourceParameters">
            Specify paging and filtering information (including requested page number and page size)
            </param>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of CohortGroupDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.CohortGroupsController.GetCohortGroupByIdentifier(System.Int32)">
            <summary>
            Get a single cohort group unique ID and valid media type 
            </summary>
            <param name="id">The unique identifier for the cohort group</param>
            <returns>An ActionResult of type CohortGroupIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.CohortGroupsController.GetCohortGroupByDetail(System.Int32)">
            <summary>
            Get a single facility using it's unique ID and valid media type 
            </summary>
            <param name="id">The unique identifier for the cohort group</param>
            <returns>An ActionResult of type CohortGroupDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.CohortGroupsController.CreateCohortGroup(PVIMS.API.Models.CohortGroupForUpdateDto)">
            <summary>
            Create a new cohort group
            </summary>
            <param name="cohortGroupForUpdate">The cohort group payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.CohortGroupsController.UpdateCohortGroup(System.Int64,PVIMS.API.Models.CohortGroupForUpdateDto)">
            <summary>
            Update an existing cohort group
            </summary>
            <param name="id">The unique id of the cohort group</param>
            <param name="cohortGroupForUpdate">The cohort group payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.CohortGroupsController.DeleteCohortGroup(System.Int64)">
            <summary>
            Delete an existing cohort group
            </summary>
            <param name="id">The unique id of the cohort group</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.CohortGroupsController.GetCohortGroupAsync``1(System.Int32)">
            <summary>
            Get single cohort group from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier, detail or expanded Dto</typeparam>
            <param name="id">Resource id to search by</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.CohortGroupsController.GetCohortGroups``1(PVIMS.API.Models.Parameters.CohortGroupResourceParameters)">
            <summary>
            Get cohort groups from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="cohortGroupResourceParameters">Standard parameters for representing resource</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.CohortGroupsController.CreateLinksForCohortGroup``1(``0)">
            <summary>
             Prepare HATEOAS links for a single resource
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.CohortGroupsController.CreateLinksForCohortGroups(PVIMS.API.Models.LinkedResourceBaseDto,PVIMS.API.Models.Parameters.CohortGroupResourceParameters,System.Boolean,System.Boolean)">
            <summary>
            Prepare HATEOAS links for a identifier based collection resource
            </summary>
            <param name="wrapper">The linked dto wrapper that will host each link</param>
            <param name="cohortGroupResourceParameters">Standard parameters for representing resource</param>
            <param name="hasNext">Are there additional pages</param>
            <param name="hasPrevious">Are there previous pages</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ConceptsController.GetConceptsByIdentifier(PVIMS.API.Models.Parameters.ConceptResourceParameters)">
            <summary>
            Get all concepts using a valid media type 
            </summary>
            <param name="conceptResourceParameters">
            Specify paging and filtering information (including requested page number and page size)
            </param>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of ConceptIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ConceptsController.GetConceptsByDetail(PVIMS.API.Models.Parameters.ConceptResourceParameters)">
            <summary>
            Get all concepts using a valid media type 
            </summary>
            <param name="conceptResourceParameters">
            Specify paging and filtering information (including requested page number and page size)
            </param>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of ConceptDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ConceptsController.GetProductsByIdentifier(PVIMS.API.Models.Parameters.ProductResourceParameters)">
            <summary>
            Get all products using a valid media type 
            </summary>
            <param name="productResourceParameters">
            Specify paging and filtering information (including requested page number and page size)
            </param>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of ProductIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ConceptsController.GetProductsByDetail(PVIMS.API.Models.Parameters.ProductResourceParameters)">
            <summary>
            Get all products using a valid media type 
            </summary>
            <param name="productResourceParameters">
            Specify paging and filtering information (including requested page number and page size)
            </param>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of ProductDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ConceptsController.GetMedicationFormsByIdentifier(PVIMS.API.Models.Parameters.MedicationFormResourceParameters)">
            <summary>
            Get all medication forms using a valid media type 
            </summary>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of MedicationFormIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ConceptsController.GetConceptByIdentifier(System.Int64)">
            <summary>
            Get a single concept using it's unique code and valid media type 
            </summary>
            <param name="id">The unique identifier for the concept</param>
            <returns>An ActionResult of type ConceptIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ConceptsController.GetProductByIdentifier(System.Int64)">
            <summary>
            Get a single product using it's unique code and valid media type 
            </summary>
            <param name="id">The unique identifier for the product</param>
            <returns>An ActionResult of type ProductIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ConceptsController.GetProductByDetail(System.Int64)">
            <summary>
            Get a single product using it's unique code and valid media type 
            </summary>
            <param name="id">The unique identifier for the product</param>
            <returns>An ActionResult of type ProgramDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ConceptsController.CreateConcept(PVIMS.API.Models.ConceptForUpdateDto)">
            <summary>
            Create a new concept
            </summary>
            <param name="conceptForUpdate">The concept payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ConceptsController.UpdateConcept(System.Int64,PVIMS.API.Models.ConceptForUpdateDto)">
            <summary>
            Update an existing concept
            </summary>
            <param name="id">The unique id of the concept</param>
            <param name="conceptForUpdate">The concept payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ConceptsController.DeleteConcept(System.Int64)">
            <summary>
            Delete an existing concept
            </summary>
            <param name="id">The unique id of the concept</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ConceptsController.CreateProduct(PVIMS.API.Models.ProductForUpdateDto)">
            <summary>
            Create a new product
            </summary>
            <param name="productForUpdate">The product payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ConceptsController.UpdateProduct(System.Int64,PVIMS.API.Models.ProductForUpdateDto)">
            <summary>
            Update an existing product
            </summary>
            <param name="id">The unique id of the product</param>
            <param name="productForUpdate">The product payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ConceptsController.DeleteProduct(System.Int64)">
            <summary>
            Delete an existing product
            </summary>
            <param name="id">The unique id of the product</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ConceptsController.GetProductAsync``1(System.Int64)">
            <summary>
            Get single product from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="id">Resource id to search by</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ConceptsController.GetConceptAsync``1(System.Int64)">
            <summary>
            Get single concept from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="id">Resource id to search by</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ConceptsController.GetConcepts``1(PVIMS.API.Models.Parameters.ConceptResourceParameters)">
            <summary>
            Get concepts from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="conceptResourceParameters">Standard parameters for representing resource</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ConceptsController.GetProducts``1(PVIMS.API.Models.Parameters.ProductResourceParameters)">
            <summary>
            Get products from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="productResourceParameters">Standard parameters for representing resource</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ConceptsController.GetMedicationForms``1(PVIMS.API.Models.Parameters.MedicationFormResourceParameters)">
            <summary>
            Get medication forms from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="medicationFormResourceParameters">Standard parameters for representing resource</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ConceptsController.CreateLinksForConcepts(PVIMS.API.Models.LinkedResourceBaseDto,PVIMS.API.Models.Parameters.ConceptResourceParameters,System.Boolean,System.Boolean)">
            <summary>
            Prepare HATEOAS links for a identifier based collection resource
            </summary>
            <param name="wrapper">The linked dto wrapper that will host each link</param>
            <param name="conceptResourceParameters">Standard parameters for representing resource</param>
            <param name="hasNext">Are there additional pages</param>
            <param name="hasPrevious">Are there previous pages</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ConceptsController.CreateLinksForProducts(PVIMS.API.Models.LinkedResourceBaseDto,PVIMS.API.Models.Parameters.ProductResourceParameters,System.Boolean,System.Boolean)">
            <summary>
            Prepare HATEOAS links for a identifier based collection resource
            </summary>
            <param name="wrapper">The linked dto wrapper that will host each link</param>
            <param name="productResourceParameters">Standard parameters for representing resource</param>
            <param name="hasNext">Are there additional pages</param>
            <param name="hasPrevious">Are there previous pages</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ConceptsController.CreateLinksForProduct``1(``0)">
            <summary>
             Prepare HATEOAS links for a single resource
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ConceptsController.CreateLinksForConcept``1(``0)">
            <summary>
             Prepare HATEOAS links for a single resource
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ConditionsController.GetConditionsByIdentifier(PVIMS.API.Models.Parameters.ConditionResourceParameters)">
            <summary>
            Get all conditions using a valid media type 
            </summary>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of ConditionIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ConditionsController.GetConditionsByDetail(PVIMS.API.Models.Parameters.ConditionResourceParameters)">
            <summary>
            Get all conditions using a valid media type 
            </summary>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of ConditionDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ConditionsController.GetConditionByIdentifier(System.Int32)">
            <summary>
            Get a single condition unique ID and valid media type 
            </summary>
            <param name="id">The unique identifier for the condition</param>
            <returns>An ActionResult of type ConditionIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ConditionsController.GetConditionByDetail(System.Int32)">
            <summary>
            Get a single condition unique ID and valid media type 
            </summary>
            <param name="id">The unique identifier for the condition</param>
            <returns>An ActionResult of type ConditionDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ConditionsController.CreateCondition(PVIMS.API.Models.ConditionForUpdateDto)">
            <summary>
            Create a new condition
            </summary>
            <param name="conditionForUpdate">The condition payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ConditionsController.UpdateCondition(System.Int32,PVIMS.API.Models.ConditionForUpdateDto)">
            <summary>
            Update an existing condition
            </summary>
            <param name="id">The unique id of the condition</param>
            <param name="conditionForUpdate">The condition payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ConditionsController.DeleteCondition(System.Int32)">
            <summary>
            Delete an existing condition group
            </summary>
            <param name="id">The unique id of the condition group</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ConditionsController.GetConditions``1(PVIMS.API.Models.Parameters.ConditionResourceParameters)">
            <summary>
            Get conditions from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="conditionResourceParameters">Standard parameters for representing resource</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ConditionsController.GetConditionAsync``1(System.Int32)">
            <summary>
            Get single condition from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier, detail or expanded Dto</typeparam>
            <param name="id">Resource id to search by</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ConditionsController.CreateLinksForConditions(PVIMS.API.Models.LinkedResourceBaseDto,PVIMS.API.Models.Parameters.ConditionResourceParameters,System.Boolean,System.Boolean)">
            <summary>
            Prepare HATEOAS links for a identifier based collection resource
            </summary>
            <param name="wrapper">The linked dto wrapper that will host each link</param>
            <param name="conditionResourceParameters">Standard parameters for representing resource</param>
            <param name="hasNext">Are there additional pages</param>
            <param name="hasPrevious">Are there previous pages</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ConditionsController.CreateLinksForCondition``1(``0)">
            <summary>
             Prepare HATEOAS links for a single resource
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ConditionsController.CustomConditionMap(PVIMS.API.Models.ConditionDetailDto)">
            <summary>
             Map additional dto detail elements not handled through automapper
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ConditionsController.AddOrUpdateConditionLabTests(PVIMS.API.Models.ConditionForUpdateDto,PVIMS.Core.Entities.Condition)">
            <summary>
             Handle the updating of lab tests for an existing condition
            </summary>
            <param name="conditionForUpdate">The payload containing the list of lab tests</param>
            <param name="conditionFromRepo">The condition entity that is being updated</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ConditionsController.AddOrUpdateConditionMedications(PVIMS.API.Models.ConditionForUpdateDto,PVIMS.Core.Entities.Condition)">
            <summary>
             Handle the updating of medications for an existing condition
            </summary>
            <param name="conditionForUpdate">The payload containing the list of lab tests</param>
            <param name="conditionFromRepo">The condition entity that is being updated</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ConditionsController.AddOrUpdateConditionMeddras(PVIMS.API.Models.ConditionForUpdateDto,PVIMS.Core.Entities.Condition)">
            <summary>
             Handle the updating of terminology for an existing condition
            </summary>
            <param name="conditionForUpdate">The payload containing the list of lab tests</param>
            <param name="conditionFromRepo">The condition entity that is being updated</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ConfigsController.GetConfigsByIdentifier(PVIMS.API.Models.Parameters.ConfigResourceParameters)">
            <summary>
            Get all configurations using a valid media type 
            </summary>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of ConfigIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ConfigsController.GetConfigByIdentifier(System.Int64)">
            <summary>
            Get a single configuration using it's unique id and valid media type 
            </summary>
            <param name="id">The unique identifier for the lab result</param>
            <returns>An ActionResult of type ConfigIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ConfigsController.UpdateConfig(System.Int64,PVIMS.API.Models.ConfigForUpdateDto)">
            <summary>
            Update an existing configuration
            </summary>
            <param name="id">The unique id of the config</param>
            <param name="configForUpdate">The config payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ConfigsController.SeedDatabase">
            <summary>
            Seed source database
            </summary>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ConfigsController.GetConfigs``1(PVIMS.API.Models.Parameters.ConfigResourceParameters)">
            <summary>
            Get lab results from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="configResourceParameters">Standard parameters for representing resource</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ConfigsController.GetConfigAsync``1(System.Int64)">
            <summary>
            Get single lab result from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="id">Resource id to search by</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ConfigsController.CreateLinksForConfig``1(``0)">
            <summary>
             Prepare HATEOAS links for a single resource
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ContactsController.GetContactsByDetail(PVIMS.API.Models.Parameters.ContactResourceParameters)">
            <summary>
            Get all contact details using a valid media type 
            </summary>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of ContactDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ContactsController.GetContactByIdentifier(System.Int64)">
            <summary>
            Get a single contact detail using it's unique id and valid media type 
            </summary>
            <param name="id">The unique identifier for the lab test</param>
            <returns>An ActionResult of type ContactIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ContactsController.GetContactByDetail(System.Int64)">
            <summary>
            Get a single contact detail using it's unique id and valid media type 
            </summary>
            <param name="id">The unique identifier for the lab test</param>
            <returns>An ActionResult of type ContactDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ContactsController.UpdateContactDetail(System.Int64,PVIMS.API.Models.ContactForUpdateDto)">
            <summary>
            Update an existing contact detail
            </summary>
            <param name="id">The unique id of the contact detail</param>
            <param name="contactForUpdateDto">The contact payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ContactsController.GetContactDetails``1(PVIMS.API.Models.Parameters.ContactResourceParameters)">
            <summary>
            Get contact details from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="contactResourceParameters">Standard parameters for representing resource</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ContactsController.GetContactDetailAsync``1(System.Int64)">
            <summary>
            Get single contact detail from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="id">Resource id to search by</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ContactsController.CreateLinksForContactDetail``1(``0)">
            <summary>
             Prepare HATEOAS links for a single resource
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="T:PVIMS.API.Controllers.CustomAttributesController">
            <summary>
            A representation of all custom attributes.
            A custom attribute is configured to represent core entity additional values
            </summary>
        </member>
        <member name="M:PVIMS.API.Controllers.CustomAttributesController.GetCustomAttributesByIdentifier(PVIMS.API.Models.Parameters.CustomAttributeResourceParameters)">
            <summary>
            Get all custom attributes using a valid media type 
            </summary>
            <param name="customAttributeResourceParameters">
            Specify paging and filtering information (including requested page number and page size)
            </param>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of CustomAttributeIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.CustomAttributesController.GetCustomAttributesByDetail(PVIMS.API.Models.Parameters.CustomAttributeResourceParameters)">
            <summary>
            Get all custom attributes using a valid media type 
            </summary>
            <param name="customAttributeResourceParameters">
            Specify paging and filtering information (including requested page number and page size)
            </param>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of CustomAttributeDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.CustomAttributesController.GetCustomAttributeByIdentifier(System.Int64)">
            <summary>
            Get a single custom attribute using it's unique ID and valid media type 
            </summary>
            <param name="id">The unique identifier for the custom attribute</param>
            <returns>An ActionResult of type CustomAttributeIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.CustomAttributesController.GetCustomAttributeByDetail(System.Int64)">
            <summary>
            Get a single custom attribute using it's unique ID and valid media type 
            </summary>
            <param name="id">The unique identifier for the custom attribute</param>
            <returns>An ActionResult of type CustomAttributeDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.CustomAttributesController.GetCustomAttributes``1(PVIMS.API.Models.Parameters.CustomAttributeResourceParameters)">
            <summary>
            Get custom attributes from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="customAttributeResourceParameters">Standard parameters for representing resource</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.CustomAttributesController.GetCustomAttributeAsync``1(System.Int64)">
            <summary>
            Get single custom attribute from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="id">Resource guid to search by</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.CustomAttributesController.CreateLinksForCustomAttributes(PVIMS.API.Models.LinkedResourceBaseDto,PVIMS.API.Models.Parameters.CustomAttributeResourceParameters,System.Boolean,System.Boolean)">
            <summary>
            Prepare HATEOAS links for a identifier based collection resource
            </summary>
            <param name="wrapper">The linked dto wrapper that will host each link</param>
            <param name="customAttributeResourceParameters">Standard parameters for representing resource</param>
            <param name="hasNext">Are there additional pages</param>
            <param name="hasPrevious">Are there previous pages</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.CustomAttributesController.CreateLinksForCustomAttribute``1(``0)">
            <summary>
             Prepare HATEOAS links for a single resource
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.CustomAttributesController.CreateCustomAttributeResourceUri(System.Int64)">
            <summary>
            Create a Uri for a single representation
            </summary>
        </member>
        <member name="M:PVIMS.API.Controllers.CustomAttributesController.CreateCustomAttributesResourceUri(PVIMS.API.Models.Parameters.CustomAttributeResourceParameters,PVIMS.API.Helpers.ResourceUriType)">
            <summary>
            Create a Uri for a collection based representation
            </summary>
        </member>
        <member name="M:PVIMS.API.Controllers.CustomAttributesController.CreateSelectionValues(PVIMS.API.Models.CustomAttributeDetailDto)">
            <summary>
            Prepare the list of selection reference values for look up
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.DatasetElementsController.GetDatasetElementsByIdentifier(PVIMS.API.Models.Parameters.DatasetElementResourceParameters)">
            <summary>
            Get all dataset elements using a valid media type 
            </summary>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of DatasetElementIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.DatasetElementsController.GetDatasetElementsByDetail(PVIMS.API.Models.Parameters.DatasetElementResourceParameters)">
            <summary>
            Get all dataset elements using a valid media type 
            </summary>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of DatasetElementDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.DatasetElementsController.GetGroupValues(System.Int64)">
            <summary>
            Get group values for a dataset element
            </summary>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of GroupValueDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.DatasetElementsController.GetDatasetElementByIdentifier(System.Int64)">
            <summary>
            Get a single dataset element using it's unique id and valid media type 
            </summary>
            <param name="id">The unique identifier for the dataset element</param>
            <returns>An ActionResult of type DatasetElementIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.DatasetElementsController.GetDatasetElementByDetail(System.Int64)">
            <summary>
            Get a single dataset element using it's unique id and valid media type 
            </summary>
            <param name="id">The unique detail for the dataset element</param>
            <returns>An ActionResult of type DatasetElementDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.DatasetElementsController.GetDatasetElementByExpanded(System.Int64)">
            <summary>
            Get a single dataset element using it's unique id and valid media type 
            </summary>
            <param name="id">The unique detail for the dataset element</param>
            <returns>An ActionResult of type DatasetElementExpandedDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.DatasetElementsController.CreateDatasetElement(PVIMS.API.Models.DatasetElementForUpdateDto)">
            <summary>
            Create a new dataset element
            </summary>
            <param name="datasetElementForUpdate">The dataset element payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.DatasetElementsController.UpdateDatasetElement(System.Int64,PVIMS.API.Models.DatasetElementForUpdateDto)">
            <summary>
            Update an existing dataset element
            </summary>
            <param name="id">The unique id of the dataset element</param>
            <param name="datasetElementForUpdate">The dataset element payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.DatasetElementsController.DeleteDatasetElement(System.Int64)">
            <summary>
            Delete an existing dataset element
            </summary>
            <param name="id">The unique id of the dataset element</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.DatasetElementsController.GetDatasetElements``1(PVIMS.API.Models.Parameters.DatasetElementResourceParameters)">
            <summary>
            Get dataset elements from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="datasetElementResourceParameters">Standard parameters for representing resource</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.DatasetElementsController.GetDatasetElementAsync``1(System.Int64)">
            <summary>
            Get single dataset element from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="id">Resource id to search by</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.DatasetElementsController.CreateLinksForDatasetElement``1(``0)">
            <summary>
             Prepare HATEOAS links for a single resource
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.DatasetElementsController.CustomElementMap(PVIMS.API.Models.DatasetElementExpandedDto)">
            <summary>
             Map additional dto detail elements not handled through automapper
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.DatasetsController.GetDatasetsByIdentifier(PVIMS.API.Models.Parameters.IdResourceParameters)">
            <summary>
            Get all datasets using a valid media type 
            </summary>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of DatasetIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.DatasetsController.GetDatasetsByDetail(PVIMS.API.Models.Parameters.IdResourceParameters)">
            <summary>
            Get all datasets using a valid media type 
            </summary>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of DatasetDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.DatasetsController.GetDatasetCategoriesByDetail(System.Int64,PVIMS.API.Models.Parameters.IdResourceParameters)">
            <summary>
            Get all dataset categories using a valid media type 
            </summary>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of DatasetCategoryDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.DatasetsController.GetDatasetCategoryElementsByDetail(System.Int64,System.Int64,PVIMS.API.Models.Parameters.IdResourceParameters)">
            <summary>
            Get all dataset category elements using a valid media type 
            </summary>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of DatasetCategoryElementDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.DatasetsController.GetDatasetByIdentifier(System.Int64)">
            <summary>
            Get a single dataset using it's unique id and valid media type 
            </summary>
            <param name="id">The unique identifier for the dataset</param>
            <returns>An ActionResult of type DatasetIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.DatasetsController.GetDatasetByDetail(System.Int64)">
            <summary>
            Get a single dataset using it's unique id and valid media type 
            </summary>
            <param name="id">The unique identifier for the dataset</param>
            <returns>An ActionResult of type DatasetDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.DatasetsController.GetSpontaneousDataset">
            <summary>
            Get a single dataset using it's unique id and valid media type 
            </summary>
            <returns>An ActionResult of type DatasetForSpontaneousDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.DatasetsController.GetDatasetCategoryByIdentifier(System.Int64,System.Int64)">
            <summary>
            Get a single dataset category using it's unique id and valid media type 
            </summary>
            <param name="datasetId">The unique identifier for the dataset</param>
            <param name="id">The unique identifier for the dataset category</param>
            <returns>An ActionResult of type DatasetCategoryIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.DatasetsController.GetDatasetCategoryElementByIdentifier(System.Int64,System.Int64,System.Int64)">
            <summary>
            Get a single dataset category element using it's unique id and valid media type 
            </summary>
            <param name="datasetId">The unique identifier for the dataset</param>
            <param name="datasetCategoryId">The unique identifier for the dataset</param>
            <param name="id">The unique identifier for the dataset category</param>
            <returns>An ActionResult of type DatasetCategoryElementIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.DatasetsController.GetDatasetInstanceByIdentifier(System.Int64,System.Int64)">
            <summary>
            Get a single dataset instance using it's unique id and valid media type 
            </summary>
            <param name="datasetId">The unique identifier for the dataset</param>
            <param name="id">The unique identifier for the instance</param>
            <returns>An ActionResult of type DatasetInstanceIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.DatasetsController.GetDatasetInstanceByDetail(System.Int64,System.Int64)">
            <summary>
            Get a single dataset instance using it's unique id and valid media type 
            </summary>
            <param name="datasetId">The unique identifier for the dataset</param>
            <param name="id">The unique identifier for the instance</param>
            <returns>An ActionResult of type DatasetInstanceDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.DatasetsController.CreateDataset(PVIMS.API.Models.DatasetForUpdateDto)">
            <summary>
            Create a new dataset
            </summary>
            <param name="datasetForUpdate">The dataset payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.DatasetsController.CreateDatasetCategory(System.Int64,PVIMS.API.Models.DatasetCategoryForUpdateDto)">
            <summary>
            Create a new dataset category
            </summary>
            <param name="datasetId">The unique identifier for the dataset</param>
            <param name="datasetCategoryForUpdate">The dataset category payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.DatasetsController.CreateDatasetCategoryElement(System.Int64,System.Int64,PVIMS.API.Models.DatasetCategoryElementForUpdateDto)">
            <summary>
            Create a new dataset category element
            </summary>
            <param name="datasetId">The unique identifier for the dataset</param>
            <param name="datasetCategoryId">The unique identifier for the dataset category</param>
            <param name="datasetCategoryElementForUpdate">The dataset category element payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.DatasetsController.UpdateDataset(System.Int64,PVIMS.API.Models.DatasetForUpdateDto)">
            <summary>
            Update an existing dataset
            </summary>
            <param name="id">The unique id of the dataset</param>
            <param name="datasetForUpdate">The dataset payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.DatasetsController.UpdateDatasetCategory(System.Int64,System.Int64,PVIMS.API.Models.DatasetCategoryForUpdateDto)">
            <summary>
            Update an existing dataset category
            </summary>
            <param name="datasetId">The unique identifier for the dataset</param>
            <param name="id">The unique id of the dataset</param>
            <param name="datasetCategoryForUpdate">The dataset category payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.DatasetsController.UpdateDatasetCategoryElement(System.Int64,System.Int64,System.Int64,PVIMS.API.Models.DatasetCategoryElementForUpdateDto)">
            <summary>
            Update an existing dataset category element
            </summary>
            <param name="datasetId">The unique identifier for the dataset</param>
            <param name="datasetCategoryId">The unique identifier for the dataset</param>
            <param name="id">The unique identifier for the dataset category</param>
            <param name="datasetCategoryElementForUpdate">The dataset category element payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.DatasetsController.DeleteDataset(System.Int64)">
            <summary>
            Delete an existing dataset
            </summary>
            <param name="id">The unique id of the dataset</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.DatasetsController.DeleteDatasetCategory(System.Int64,System.Int64)">
            <summary>
            Delete an existing dataset category
            </summary>
            <param name="datasetId">The unique identifier for the dataset</param>
            <param name="id">The unique id of the dataset category</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.DatasetsController.DeleteDatasetCategoryElement(System.Int64,System.Int64,System.Int64)">
            <summary>
            Delete an existing dataset category element
            </summary>
            <param name="datasetId">The unique identifier for the dataset</param>
            <param name="datasetCategoryId">The unique identifier for the dataset</param>
            <param name="id">The unique identifier for the dataset category</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.DatasetsController.CreateDatasetInstance(System.Int64,System.Object[])">
            <summary>
            Create a new dataset instance
            </summary>
            <param name="datasetId">The unique identifier of the dataset that the instance is being created for</param>
            <param name="elementValues">The dataset instance payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.DatasetsController.GetDatasets``1(PVIMS.API.Models.Parameters.IdResourceParameters)">
            <summary>
            Get datasets from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="datasetResourceParameters">Standard parameters for representing resource</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.DatasetsController.GetDatasetCategories``1(System.Int64,PVIMS.API.Models.Parameters.IdResourceParameters)">
            <summary>
            Get dataset categories from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="datasetId">Unique id of the dataset being queried for categories</param>
            <param name="datasetCategoryResourceParameters">Standard parameters for representing resource</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.DatasetsController.GetDatasetCategoryElements``1(System.Int64,System.Int64,PVIMS.API.Models.Parameters.IdResourceParameters)">
            <summary>
            Get dataset category elements from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="datasetId">Unique id of the dataset being queried for categories</param>
            <param name="id">Unique id of the dataset category being queried for elements</param>
            <param name="datasetCategoryElementResourceParameters">Standard parameters for representing resource</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.DatasetsController.GetDatasetAsync``1(System.Int64)">
            <summary>
            Get single dataset from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="id">Resource id to search by</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.DatasetsController.GetSpontaneousDatasetAsync``1">
            <summary>
            Get spontaneous dataset from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.DatasetsController.GetDatasetInstanceAsync``1(System.Int64,System.Int64)">
            <summary>
            Get single dataset instance from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="datasetId">Parent resource id to search by</param>
            <param name="id">Resource id to search by</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.DatasetsController.GetDatasetCategoryAsync``1(System.Int64,System.Int64)">
            <summary>
            Get single dataset category from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="datasetId">Unique id of the dataset being queried for categories</param>
            <param name="id">Resource id to search by</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.DatasetsController.GetDatasetCategoryElementAsync``1(System.Int64,System.Int64,System.Int64)">
            <summary>
            Get single dataset category element from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="datasetId">Unique id of the dataset being queried for categories</param>
            <param name="datasetCategoryId">Unique id of the dataset being queried for categories</param>
            <param name="id">Resource id to search by</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.DatasetsController.CreateLinksForDataset``1(``0)">
            <summary>
             Prepare HATEOAS links for a single resource
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.DatasetsController.CreateLinksForDatasetInstance``1(System.Int64,``0)">
            <summary>
             Prepare HATEOAS links for a single resource
            </summary>
            <param name="datasetId">Unique id of the dataset being queried for instances</param>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.DatasetsController.CreateLinksForDatasetCategory``1(System.Int64,``0)">
            <summary>
             Prepare HATEOAS links for a single resource
            </summary>
            <param name="datasetId">Unique id of the dataset being queried for categories</param>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.DatasetsController.CreateLinksForDatasetCategoryElement``1(System.Int64,System.Int64,``0)">
            <summary>
             Prepare HATEOAS links for a single resource
            </summary>
            <param name="datasetId">Unique id of the dataset being queried for categories</param>
            <param name="datasetCategoryId">Unique id of the dataset category being queried for elements</param>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.DatasetsController.GetNextCategoryOrder(PVIMS.Core.Entities.Dataset)">
            <summary>
             Get the next category order number
            </summary>
            <param name="dataset">The dataset that is being queried to determine the order number for the category</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.DatasetsController.GetNextFieldOrder(PVIMS.Core.Entities.DatasetCategory)">
            <summary>
             Get the next element order number
            </summary>
            <param name="datasetCategory">The dataset category that is being queried to determine the order number for the element</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.DatasetsController.CustomDatasetInstanceMap(PVIMS.API.Models.DatasetInstanceDetailDto)">
            <summary>
             Map additional dto detail elements not handled through automapper
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.DatasetsController.CustomDatasetMap(PVIMS.API.Models.DatasetForSpontaneousDto)">
            <summary>
             Map additional dto detail elements not handled through automapper
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.EncountersController.GetEncountersByDetail(PVIMS.API.Models.Parameters.EncounterResourceParameters)">
            <summary>
            Get all encounters using a valid media type 
            </summary>
            <param name="encounterResourceParameters">
            Specify paging and filtering information (including requested page number and page size)
            </param>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of EncounterDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.EncountersController.GetEncounterByIdentifier(System.Int64,System.Int64)">
            <summary>
            Get a single Encounter using it's unique id and valid media type 
            </summary>
            <param name="patientId">The unique identifier for the Patient</param>
            <param name="id">The unique identifier for the Encounter</param>
            <returns>An ActionResult of type EncounterIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.EncountersController.GetEncounterByDetail(System.Int64,System.Int64)">
            <summary>
            Get a single Encounter using it's unique id and valid media type 
            </summary>
            <param name="patientId">The unique identifier for the Patient</param>
            <param name="id">The unique identifier for the Encounter</param>
            <returns>An ActionResult of type EncounterDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.EncountersController.GetEncounterByExpanded(System.Int64,System.Int64)">
            <summary>
            Get a single Encounter using it's unique code and valid media type 
            </summary>
            <param name="patientId">The unique identifier for the Patient</param>
            <param name="id">The unique identifier for the Encounter</param>
            <returns>An ActionResult of type EncounterExpandedDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.EncountersController.CreateEncounter(System.Int64,PVIMS.API.Models.EncounterForCreationDto)">
            <summary>
            Create a new encounter record
            </summary>
            <param name="patientId">The unique identifier of the patient</param>
            <param name="encounterForCreation">The encounter payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.EncountersController.UpdateEncounter(System.Int64,System.Int64,PVIMS.API.Models.EncounterForUpdateDto)">
            <summary>
            Update an existing encounter
            </summary>
            <param name="patientId">The unique id of the patient</param>
            <param name="id">The unique id of the encounter</param>
            <param name="encounterForUpdate">The encounter payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.EncountersController.ArchiveEncounter(System.Int64,System.Int64,PVIMS.API.Models.ArchiveDto)">
            <summary>
            Archive an existing encounter
            </summary>
            <param name="patientId">The unique identifier of the patient</param>
            <param name="id">The unique id of the encounter</param>
            <param name="encounterForDelete">The deletion payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.EncountersController.GetEncounterAsync``1(System.Int64,System.Int64)">
            <summary>
            Get single Encounter from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="patientId">unique identifier of the patient </param>
            <param name="id">Resource guid to search by</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.EncountersController.GetEncounters``1(PVIMS.API.Models.Parameters.EncounterResourceParameters)">
            <summary>
            Get encounters from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier, detail or expanded Dto</typeparam>
            <param name="encounterResourceParameters">Standard parameters for representing resource</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.EncountersController.CustomEncounterMap(PVIMS.API.Models.EncounterDetailDto)">
            <summary>
             Map additional dto detail elements not handled through automapper
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.EncountersController.CustomEncounterMap(PVIMS.API.Models.EncounterExpandedDto)">
            <summary>
             Map additional dto detail elements not handled through automapper
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.EncountersController.CreateLinksForEncounters(PVIMS.API.Models.LinkedResourceBaseDto,PVIMS.API.Models.Parameters.EncounterResourceParameters,System.Boolean,System.Boolean)">
            <summary>
            Prepare HATEOAS links for a identifier based collection resource
            </summary>
            <param name="wrapper">The linked dto wrapper that will host each link</param>
            <param name="encounterResourceParameters">Standard parameters for representing resource</param>
            <param name="hasNext">Are there additional pages</param>
            <param name="hasPrevious">Are there previous pages</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.EncountersController.CreateLinksForEncounter``1(System.Int64,``0)">
            <summary>
             Prepare HATEOAS links for a single resource
            </summary>
            <param name="patientId">The unique identifier of the patient</param>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.EncountersController.PrepareEncounterDetail(PVIMS.API.Models.EncounterForCreationDto)">
            <summary>
            Prepare the model for adding a new encounter
            </summary>
        </member>
        <member name="M:PVIMS.API.Controllers.EncountersController.ShouldElementBeDisplayed(PVIMS.Core.Entities.Encounter,PVIMS.Core.Entities.DatasetCategoryElement)">
            <summary>
            Determine if this element should be displayed
            </summary>
        </member>
        <member name="M:PVIMS.API.Controllers.EncountersController.ShouldCategoryBeDisplayed(PVIMS.Core.Entities.Encounter,PVIMS.Core.Entities.DatasetCategory)">
            <summary>
            Determine if the category should be displayed
            </summary>
        </member>
        <member name="M:PVIMS.API.Controllers.EncountersController.IsElementChronic(PVIMS.Core.Entities.Encounter,PVIMS.Core.Entities.DatasetCategoryElement)">
            <summary>
            Determine if this element is chronic in nature
            </summary>
        </member>
        <member name="M:PVIMS.API.Controllers.EncounterTypesController.GetEncounterTypesByIdentifier(PVIMS.API.Models.Parameters.IdResourceParameters)">
            <summary>
            Get all encounter types using a valid media type 
            </summary>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of EncounterTypeIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.EncounterTypesController.GetEncounterTypesByDetail(PVIMS.API.Models.Parameters.IdResourceParameters)">
            <summary>
            Get all encounter types using a valid media type 
            </summary>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of EncounterTypeDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.EncounterTypesController.GetEncounterTypeByIdentifier(System.Int64)">
            <summary>
            Get a single encounterType using it's unique id and valid media type 
            </summary>
            <param name="id">The unique identifier for the encounterType</param>
            <returns>An ActionResult of type EncounterTypeIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.EncounterTypesController.GetEncounterTypeByDetail(System.Int64)">
            <summary>
            Get a single encounterType using it's unique id and valid media type 
            </summary>
            <param name="id">The unique identifier for the encounterType</param>
            <returns>An ActionResult of type EncounterTypeDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.EncounterTypesController.CreateEncounterType(PVIMS.API.Models.EncounterTypeForUpdateDto)">
            <summary>
            Create a new encounter type
            </summary>
            <param name="encounterTypeForUpdate">The encounter type payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.EncounterTypesController.UpdateEncounterType(System.Int64,PVIMS.API.Models.EncounterTypeForUpdateDto)">
            <summary>
            Update an existing encounterType
            </summary>
            <param name="id">The unique id of the encounterType</param>
            <param name="encounterTypeForUpdate">The encounterType payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.EncounterTypesController.DeleteEncounterType(System.Int64)">
            <summary>
            Delete an existing encounterType
            </summary>
            <param name="id">The unique id of the encounterType</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.EncounterTypesController.GetEncounterTypes``1(PVIMS.API.Models.Parameters.IdResourceParameters)">
            <summary>
            Get encounterTypes from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="encounterTypeResourceParameters">Standard parameters for representing resource</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.EncounterTypesController.GetEncounterTypeAsync``1(System.Int64)">
            <summary>
            Get single encounterType from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="id">Resource id to search by</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.EncounterTypesController.CreateLinksForEncounterType``1(``0)">
            <summary>
             Prepare HATEOAS links for a single resource
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.EncounterTypesController.CustomTypeMap(PVIMS.API.Models.EncounterTypeDetailDto)">
            <summary>
             Map additional dto detail elements not handled through automapper
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.FacilitiesController.GetFacilitiesByIdentifier(PVIMS.API.Models.Parameters.FacilityResourceParameters)">
            <summary>
            Get all facilities using a valid media type 
            </summary>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of FacilityIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.FacilitiesController.GetFacilitiesByDetail(PVIMS.API.Models.Parameters.FacilityResourceParameters)">
            <summary>
            Get all facilities using a valid media type 
            </summary>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of FacilityDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.FacilitiesController.GetFacilityByIdentifier(System.Int64)">
            <summary>
            Get a single facility using it's unique id and valid media type 
            </summary>
            <param name="id">The unique identifier for the Facility</param>
            <returns>An ActionResult of type FacilityIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.FacilitiesController.GetFacilityByDetail(System.Int64)">
            <summary>
            Get a single facility using it's unique id and valid media type 
            </summary>
            <param name="id">The unique identifier for the Facility</param>
            <returns>An ActionResult of type FacilityDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.FacilitiesController.GetFacilityTypesByIdentifier(PVIMS.API.Models.Parameters.FacilityTypeResourceParameters)">
            <summary>
            Get all form types using a valid media type 
            </summary>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of FacilityTypeIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.FacilitiesController.CreateFacility(PVIMS.API.Models.FacilityForUpdateDto)">
            <summary>
            Create a new facility
            </summary>
            <param name="facilityForUpdate">The facility payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.FacilitiesController.UpdateFacility(System.Int64,PVIMS.API.Models.FacilityForUpdateDto)">
            <summary>
            Update an existing facility
            </summary>
            <param name="id">The unique id of the medication</param>
            <param name="facilityForUpdate">The facility payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.FacilitiesController.DeleteFacility(System.Int64)">
            <summary>
            Delete an existing facility
            </summary>
            <param name="id">The unique id of the facility</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.FacilitiesController.GetFacilities``1(PVIMS.API.Models.Parameters.FacilityResourceParameters)">
            <summary>
            Get facilities from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="facilityResourceParameters">Standard parameters for representing resource</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.FacilitiesController.GetFacilityAsync``1(System.Int64)">
            <summary>
            Get single facility from repository and auto map to Dto
            </summary>
            <param name="id">Resource id to search by</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.FacilitiesController.GetFacilityTypes``1(PVIMS.API.Models.Parameters.FacilityTypeResourceParameters)">
            <summary>
            Get facility types from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="facilityTypeResourceParameters">Standard parameters for representing resource</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.FacilitiesController.CreateLinksForFacilities(PVIMS.API.Models.LinkedResourceBaseDto,PVIMS.API.Models.Parameters.FacilityResourceParameters,System.Boolean,System.Boolean)">
            <summary>
            Prepare HATEOAS links for a identifier based collection resource
            </summary>
            <param name="wrapper">The linked dto wrapper that will host each link</param>
            <param name="facilityResourceParameters">Standard parameters for representing resource</param>
            <param name="hasNext">Are there additional pages</param>
            <param name="hasPrevious">Are there previous pages</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.FacilitiesController.CreateLinksForFacility``1(``0)">
            <summary>
             Prepare HATEOAS links for a single resource
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.HolidaysController.GetHolidaysByIdentifier(PVIMS.API.Models.Parameters.HolidayResourceParameters)">
            <summary>
            Get all holidays using a valid media type 
            </summary>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of HolidayIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.HolidaysController.GetHolidayByIdentifier(System.Int64)">
            <summary>
            Get a single holiday using it's unique id and valid media type 
            </summary>
            <param name="id">The unique identifier for the lab test</param>
            <returns>An ActionResult of type HolidayIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.HolidaysController.CreateHoliday(PVIMS.API.Models.HolidayForUpdateDto)">
            <summary>
            Create a new holiday
            </summary>
            <param name="holidayForUpdate">The holiday payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.HolidaysController.UpdateHoliday(System.Int64,PVIMS.API.Models.HolidayForUpdateDto)">
            <summary>
            Update an existing holiday
            </summary>
            <param name="id">The unique id of the holiday</param>
            <param name="holidayForUpdate">The holiday payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.HolidaysController.DeleteHoliday(System.Int64)">
            <summary>
            Delete an existing holiday
            </summary>
            <param name="id">The unique id of the holiday</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.HolidaysController.GetHolidays``1(PVIMS.API.Models.Parameters.HolidayResourceParameters)">
            <summary>
            Get holidays from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="holidayResourceParameters">Standard parameters for representing resource</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.HolidaysController.GetHolidayAsync``1(System.Int64)">
            <summary>
            Get single lab test from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="id">Resource id to search by</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.HolidaysController.CreateLinksForHoliday``1(``0)">
            <summary>
             Prepare HATEOAS links for a single resource
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.LabResultsController.GetLabResultsByIdentifier(PVIMS.API.Models.Parameters.LabResultResourceParameters)">
            <summary>
            Get all lab results using a valid media type 
            </summary>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of LabResultIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.LabResultsController.GetLabResultByIdentifier(System.Int64)">
            <summary>
            Get a single lab result using it's unique id and valid media type 
            </summary>
            <param name="id">The unique identifier for the lab result</param>
            <returns>An ActionResult of type LabResultIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.LabResultsController.CreateLabResult(PVIMS.API.Models.LabResultForUpdateDto)">
            <summary>
            Create a new lab result
            </summary>
            <param name="labResultForUpdate">The lab result payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.LabResultsController.UpdateLabResult(System.Int64,PVIMS.API.Models.LabResultForUpdateDto)">
            <summary>
            Update an existing lab result
            </summary>
            <param name="id">The unique id of the lab result</param>
            <param name="labResultForUpdate">The lab result payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.LabResultsController.DeleteLabResult(System.Int64)">
            <summary>
            Delete an existing lab result
            </summary>
            <param name="id">The unique id of the lab result</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.LabResultsController.GetLabResults``1(PVIMS.API.Models.Parameters.LabResultResourceParameters)">
            <summary>
            Get lab results from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="labResultResourceParameters">Standard parameters for representing resource</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.LabResultsController.GetLabResultAsync``1(System.Int64)">
            <summary>
            Get single lab result from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="id">Resource id to search by</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.LabResultsController.CreateLinksForLabResult``1(``0)">
            <summary>
             Prepare HATEOAS links for a single resource
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.LabTestsController.GetLabTestsByIdentifier(PVIMS.API.Models.Parameters.LabTestResourceParameters)">
            <summary>
            Get all lab tests using a valid media type 
            </summary>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of LabTestIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.LabTestsController.GetLabTestByIdentifier(System.Int64)">
            <summary>
            Get a single lab test using it's unique id and valid media type 
            </summary>
            <param name="id">The unique identifier for the lab test</param>
            <returns>An ActionResult of type LabTestIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.LabTestsController.CreateLabTest(PVIMS.API.Models.LabTestForUpdateDto)">
            <summary>
            Create a new lab test
            </summary>
            <param name="labTestForUpdate">The lab test payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.LabTestsController.UpdateLabTest(System.Int64,PVIMS.API.Models.LabTestForUpdateDto)">
            <summary>
            Update an existing lab test
            </summary>
            <param name="id">The unique id of the lab test</param>
            <param name="labTestForUpdate">The lab test payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.LabTestsController.DeleteLabTest(System.Int64)">
            <summary>
            Delete an existing lab test
            </summary>
            <param name="id">The unique id of the lab test</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.LabTestsController.GetLabTests``1(PVIMS.API.Models.Parameters.LabTestResourceParameters)">
            <summary>
            Get lab tests from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="labTestResourceParameters">Standard parameters for representing resource</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.LabTestsController.GetLabTestAsync``1(System.Int64)">
            <summary>
            Get single lab test from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="id">Resource id to search by</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.LabTestsController.CreateLinksForLabTest``1(``0)">
            <summary>
             Prepare HATEOAS links for a single resource
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.LabTestUnitsController.GetLabTestUnitsByIdentifier(PVIMS.API.Models.Parameters.LabTestUnitResourceParameters)">
            <summary>
            Get all lab test units using a valid media type 
            </summary>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of LabTestUnitIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.LabTestUnitsController.GetLabTestUnitByIdentifier(System.Int64)">
            <summary>
            Get a single lab test using it's unique id and valid media type 
            </summary>
            <param name="id">The unique identifier for the lab test</param>
            <returns>An ActionResult of type LabTestUnitIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.LabTestUnitsController.CreateLabTestUnit(PVIMS.API.Models.LabTestUnitForUpdateDto)">
            <summary>
            Create a new lab test
            </summary>
            <param name="labTestUnitForUpdate">The lab test payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.LabTestUnitsController.UpdateLabTestUnit(System.Int64,PVIMS.API.Models.LabTestUnitForUpdateDto)">
            <summary>
            Update an existing lab test
            </summary>
            <param name="id">The unique id of the lab test</param>
            <param name="labTestUnitForUpdate">The lab test payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.LabTestUnitsController.DeleteLabTestUnit(System.Int64)">
            <summary>
            Delete an existing lab test
            </summary>
            <param name="id">The unique id of the lab test</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.LabTestUnitsController.GetLabTestUnits``1(PVIMS.API.Models.Parameters.LabTestUnitResourceParameters)">
            <summary>
            Get lab tests from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="labTestUnitResourceParameters">Standard parameters for representing resource</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.LabTestUnitsController.GetLabTestUnitAsync``1(System.Int64)">
            <summary>
            Get single lab test from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="id">Resource id to search by</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.LabTestUnitsController.CreateLinksForLabTestUnit``1(``0)">
            <summary>
             Prepare HATEOAS links for a single resource
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MeddraTermsController.GetMeddraTermByIdentifier(System.Int64)">
            <summary>
            Get a single meddra term using it's unique code and valid media type 
            </summary>
            <param name="id">The unique identifier for the meddra term</param>
            <returns>An ActionResult of type MeddraTermIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MeddraTermsController.GetMeddraTermByDetail(System.Int64)">
            <summary>
            Get a single meddra term using it's unique code and valid media type 
            </summary>
            <param name="id">The unique identifier for the meddra term</param>
            <returns>An ActionResult of type MeddraTermDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MeddraTermsController.GetMeddraTermsByIdentifier(PVIMS.API.Models.Parameters.MeddraTermResourceParameters)">
            <summary>
            Get all meddra terms using a valid media type 
            </summary>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of MeddraTermIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MeddraTermsController.GetCommonMeddraTerms(PVIMS.API.Models.Parameters.MeddraTermResourceParameters)">
            <summary>
            Get all common meddra terms using a valid media type 
            </summary>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of MeddraTermIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MeddraTermsController.GetMeddraTermsByDetail(PVIMS.API.Models.Parameters.MeddraTermResourceParameters)">
            <summary>
            Get all meddra terms using a valid media type 
            </summary>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of MeddraTermDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MeddraTermsController.Import(PVIMS.API.Models.MeddraFileForImportDto)">
            <summary>
            Import a new meddra file
            </summary>
            <param name="meddraFileForImportDto">The attachment payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MeddraTermsController.GetMeddraTermAsync``1(System.Int64)">
            <summary>
            Get single meddra term from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="id">Resource id to search by</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MeddraTermsController.GetMeddraTerms``1(PVIMS.API.Models.Parameters.MeddraTermResourceParameters)">
            <summary>
            Get meddra terms from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="meddraTermResourceParameters">Standard parameters for representing resource</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MeddraTermsController.GetCommonMeddraTerms``1(PVIMS.API.Models.Parameters.MeddraTermResourceParameters)">
            <summary>
            Get common meddra terms from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="meddraTermResourceParameters">Standard parameters for representing resource</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MeddraTermsController.CreateLinksForMeddraTerm``1(``0)">
            <summary>
             Prepare HATEOAS links for a single resource
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaController.GetMetaSummary">
            <summary>
            Get a summary of meta data used for reporting
            </summary>
            <returns>An ActionResult of type MetaSummaryDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaController.GetMetaTablesByIdentifier(PVIMS.API.Models.Parameters.MetaResourceParameters)">
            <summary>
            Get all meta tables using a valid media type 
            </summary>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of MetaTableIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaController.GetMetaTablesByDetail(PVIMS.API.Models.Parameters.MetaResourceParameters)">
            <summary>
            Get all meta tables using a valid media type 
            </summary>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of MetaTableDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaController.GetMetaColumnsByDetail(PVIMS.API.Models.Parameters.MetaResourceParameters)">
            <summary>
            Get all meta columns using a valid media type 
            </summary>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of MetaColumnDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaController.GetMetaDependenciesByDetail(PVIMS.API.Models.Parameters.MetaResourceParameters)">
            <summary>
            Get all meta dependencies using a valid media type 
            </summary>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of MetaDependencyDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaController.RefreshMeta">
            <summary>
            Refresh meta data
            </summary>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaController.GetMetaTables``1(PVIMS.API.Models.Parameters.MetaResourceParameters)">
            <summary>
            Get meta tables from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="metaResourceParameters">Standard parameters for representing resource</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaController.GetMetaColumns``1(PVIMS.API.Models.Parameters.MetaResourceParameters)">
            <summary>
            Get meta columns from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="metaResourceParameters">Standard parameters for representing resource</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaController.GetMetaDependencies``1(PVIMS.API.Models.Parameters.MetaResourceParameters)">
            <summary>
            Get meta dependencies from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="metaResourceParameters">Standard parameters for representing resource</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaController.CreateLinksForTables(PVIMS.API.Models.LinkedResourceBaseDto,PVIMS.API.Models.Parameters.MetaResourceParameters,System.Boolean,System.Boolean)">
            <summary>
            Prepare HATEOAS links for a identifier based collection resource
            </summary>
            <param name="wrapper">The linked dto wrapper that will host each link</param>
            <param name="metaResourceParameters">Standard parameters for representing resource</param>
            <param name="hasNext">Are there additional pages</param>
            <param name="hasPrevious">Are there previous pages</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaFormsController.GetMetaFormsByDetail(PVIMS.API.Models.Parameters.MetaFormResourceParameters)">
            <summary>
            Get all meta forms using a valid media type 
            </summary>
            <param name="metaFormResourceParameters">
            Specify paging and filtering information (including requested page number and page size)
            </param>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of MetaFormDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaFormsController.CreateForm(PVIMS.API.Models.FormForCreationDto)">
            <summary>
            Handle form upload and creation
            </summary>
            <param name="formForCreation">The form payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaFormsController.GetMetaForms``1(PVIMS.API.Models.Parameters.MetaFormResourceParameters)">
            <summary>
            Get meta forms from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="metaFormResourceParameters">Standard parameters for representing resource</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaPagesController.GetMetaPagesByDetail(PVIMS.API.Models.Parameters.IdResourceParameters)">
            <summary>
            Get all meta pages using a valid media type 
            </summary>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of MetaPageDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaPagesController.GetMetaPageByIdentifier(System.Int64)">
            <summary>
            Get a single meta page using it's unique id and valid media type 
            </summary>
            <param name="id">The unique identifier for the meta page</param>
            <returns>An ActionResult of type MetaPageIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaPagesController.GetMetaPageByDetail(System.Int64)">
            <summary>
            Get a single meta page using it's unique id and valid media type 
            </summary>
            <param name="id">The unique identifier for the meta page</param>
            <returns>An ActionResult of type MetaPageDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaPagesController.GetMetaPageByExpanded(System.Int64)">
            <summary>
            Get a single meta page using it's unique id and valid media type 
            </summary>
            <param name="id">The unique identifier for the meta page</param>
            <returns>An ActionResult of type MetaPageExpandedDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaPagesController.GetMetaWidgetByIdentifier(System.Int64,System.Int64)">
            <summary>
            Get a single meta page widget using it's unique id and valid media type 
            </summary>
            <param name="metaPageId">The unique identifier for the meta page that owns the widget</param>
            <param name="id">The unique identifier for the widget</param>
            <returns>An ActionResult of type MetaPageIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaPagesController.GetMetaWidgetByDetail(System.Int64,System.Int64)">
            <summary>
            Get a single meta page widget using it's unique id and valid media type 
            </summary>
            <param name="metaPageId">The unique identifier for the meta page that owns the widget</param>
            <param name="id">The unique identifier for the widget</param>
            <returns>An ActionResult of type MetaWidgetDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaPagesController.CreateMetaPage(PVIMS.API.Models.MetaPageForUpdateDto)">
            <summary>
            Create a new meta page
            </summary>
            <param name="metaPageForUpdate">The meta page payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaPagesController.UpdateMetaPage(System.Int64,PVIMS.API.Models.MetaPageForUpdateDto)">
            <summary>
            Update an existing meta page
            </summary>
            <param name="id">The unique id of the meta page</param>
            <param name="metaPageForUpdate">The meta page payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaPagesController.DeleteMetaPage(System.Int64)">
            <summary>
            Delete an existing meta page
            </summary>
            <param name="id">The unique id of the meta page</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaPagesController.CreateMetaWidget(System.Int64,PVIMS.API.Models.MetaWidgetForCreationDto)">
            <summary>
            Create a new meta widget
            </summary>
            <param name="metaPageId">The unique identifier of the meta page</param>
            <param name="metaWidgetForCreation">The meta widget payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaPagesController.UpdateMetaWidget(System.Int64,System.Int64,PVIMS.API.Models.MetaWidgetForUpdateDto)">
            <summary>
            Update an existing meta widget
            </summary>
            <param name="metaPageId">The unique identifier of the meta page</param>
            <param name="id">The unique id of the meta widget</param>
            <param name="metaWidgetForUpdate">The meta widget payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaPagesController.MoveMetaWidget(System.Int64,System.Int64,PVIMS.API.Models.MetaWidgetForMoveDto)">
            <summary>
            Move a meta widget to a new page
            </summary>
            <param name="metaPageId">The unique identifier of the meta page</param>
            <param name="id">The unique id of the meta page</param>
            <param name="metaWidgetForMove">The move meta widget payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaPagesController.DeleteMetaWidget(System.Int64,System.Int64)">
            <summary>
            Delete an existing meta widget
            </summary>
            <param name="metaPageId">The unique identifier of the meta page</param>
            <param name="id">The unique id of the meta page</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaPagesController.GetMetaPages``1(PVIMS.API.Models.Parameters.IdResourceParameters)">
            <summary>
            Get meta tables from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="metaResourceParameters">Standard parameters for representing resource</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaPagesController.GetMetaPageAsync``1(System.Int64)">
            <summary>
            Get single meta page from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="id">Resource id to search by</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaPagesController.GetMetaWidgetAsync``1(System.Int64,System.Int64)">
            <summary>
            Get single meta widget from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="metaPageId">Parent id to search by</param>
            <param name="id">Resource id to search by</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaPagesController.CreateLinksForMetaPage``1(``0)">
            <summary>
             Prepare HATEOAS links for a single resource
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaPagesController.CreateLinksForMetaWidget``1(System.Int64,``0)">
            <summary>
             Prepare HATEOAS links for a single resource
            </summary>
            <param name="metaPageId">The unique identifier for the meta page that owns the widget</param>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaPagesController.CustomPageMap(PVIMS.API.Models.MetaPageExpandedDto)">
            <summary>
             Map additional dto detail elements not handled through automapper
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaPagesController.CustomWidgetMap(PVIMS.API.Models.MetaWidgetDetailDto)">
            <summary>
             Map additional dto detail elements not handled through automapper
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaPagesController.GetBaseTemplate(PVIMS.Core.ValueTypes.MetaWidgetTypes,System.Int64)">
            <summary>
             Prepare base content for widget
            </summary>
            <param name="metaPageId">The unique identifier of the meta page</param>
            <param name="widgetTypeE">The type of widget to prepare content for</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaPagesController.GetContentFromWidget(PVIMS.Core.ValueTypes.MetaWidgetTypes,PVIMS.API.Models.MetaWidgetForUpdateDto)">
            <summary>
             Prepare new content for widget
            </summary>
            <param name="widgetTypeE">The type of widget to prepare content for</param>
            <param name="metaWidgetForUpdate">The meta widget payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaReportsController.GetMetaReportsByIdentifier(PVIMS.API.Models.Parameters.IdResourceParameters)">
            <summary>
            Get all meta reports using a valid media type 
            </summary>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of MetaReportIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaReportsController.GetMetaReportsByDetail(PVIMS.API.Models.Parameters.IdResourceParameters)">
            <summary>
            Get all meta reports using a valid media type 
            </summary>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of MetaReportDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaReportsController.GetMetaReportByIdentifier(System.Int64)">
            <summary>
            Get a single meta report using it's unique id and valid media type 
            </summary>
            <param name="id">The unique identifier for the meta report</param>
            <returns>An ActionResult of type MetaReportIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaReportsController.GetMetaReportByDetail(System.Int64)">
            <summary>
            Get a single meta report using it's unique id and valid media type 
            </summary>
            <param name="id">The unique identifier for the meta report</param>
            <returns>An ActionResult of type MetaReportDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaReportsController.GetMetaReportByExpanded(System.Int64)">
            <summary>
            Get a single meta report using it's unique id and valid media type 
            </summary>
            <param name="id">The unique identifier for the meta report</param>
            <returns>An ActionResult of type MetaReportExpandedDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaReportsController.CreateMetaReport(PVIMS.API.Models.MetaReportForUpdateDto)">
            <summary>
            Create a new meta report
            </summary>
            <param name="metaReportForUpdate">The meta report payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaReportsController.UpdateMetaReport(System.Int64,PVIMS.API.Models.MetaReportForUpdateDto)">
            <summary>
            Update an existing meta report
            </summary>
            <param name="id">The unique id of the meta report</param>
            <param name="metaReportForUpdate">The meta report payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaReportsController.DeleteMetaReport(System.Int64)">
            <summary>
            Delete an existing meta report
            </summary>
            <param name="id">The unique id of the meta report</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaReportsController.UpdateMetaReportAttributes(System.Int64,System.Int64,PVIMS.API.Models.MetaReportForAttributeUpdateDto)">
            <summary>
            Update an existing meta report attributes
            </summary>
            <param name="id">The unique id of the meta report</param>
            <param name="metaReportForAttributeUpdate">The meta widget payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaReportsController.GetMetaReports``1(PVIMS.API.Models.Parameters.IdResourceParameters)">
            <summary>
            Get meta tables from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="metaResourceParameters">Standard parameters for representing resource</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaReportsController.GetMetaReportAsync``1(System.Int64)">
            <summary>
            Get single meta report from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="id">Resource id to search by</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaReportsController.CreateLinksForMetaReport``1(``0)">
            <summary>
             Prepare HATEOAS links for a single resource
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaReportsController.PrepareMetaDefinition(PVIMS.API.Models.MetaReportForUpdateDto)">
            <summary>
             Prepare an XML definition containing details of the report
            </summary>
            <param name="metaReportForUpdate">The meta report payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaReportsController.PrepareMetaDefinitionForAttribute(PVIMS.API.Models.MetaReportForAttributeUpdateDto,PVIMS.Core.Entities.MetaReport)">
            <summary>
             Prepare an XML definition containing details of the report (including attributes)
            </summary>
            <param name="metaReportForAttributeUpdate">The meta report attribute payload</param>
            <param name="metaReport">The meta report being updated</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaReportsController.PrepareListQueryForPublication(PVIMS.API.Models.MetaReportForAttributeUpdateDto)">
            <summary>
             Prepare the sql query needed to produce the list report
            </summary>
            <param name="metaReportForAttributeUpdate">The meta report attribute payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaReportsController.PrepareSummaryQueryForPublication(PVIMS.API.Models.MetaReportForAttributeUpdateDto)">
            <summary>
             Prepare the sql query needed to produce the summary report
            </summary>
            <param name="metaReportForAttributeUpdate">The meta report attribute payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaReportsController.CustomReportMap(PVIMS.API.Models.MetaReportDetailDto)">
            <summary>
             Map additional dto detail elements not handled through automapper
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaReportsController.CustomReportMap(PVIMS.API.Models.MetaReportExpandedDto)">
            <summary>
             Map additional dto detail elements not handled through automapper
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaReportsController.CustomColumnMap(PVIMS.API.Models.MetaColumnExpandedDto)">
            <summary>
             Map additional dto detail elements not handled through automapper
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.MetaReportsController.CreateLinksForReports(PVIMS.API.Models.LinkedResourceBaseDto,PVIMS.API.Models.Parameters.IdResourceParameters,System.Boolean,System.Boolean)">
            <summary>
            Prepare HATEOAS links for a identifier based collection resource
            </summary>
            <param name="wrapper">The linked dto wrapper that will host each link</param>
            <param name="metaResourceParameters">Standard parameters for representing resource</param>
            <param name="hasNext">Are there additional pages</param>
            <param name="hasPrevious">Are there previous pages</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.OutcomesController.GetOutcomesByIdentifier(PVIMS.API.Models.Parameters.IdResourceParameters)">
            <summary>
            Get all outcomes using a valid media type 
            </summary>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of OutcomeIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.OutcomesController.GetOutcomeByIdentifier(System.Int64)">
            <summary>
            Get a single outcome using it's unique id and valid media type 
            </summary>
            <param name="id">The unique identifier for the outcome</param>
            <returns>An ActionResult of type OutcomeIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.OutcomesController.GetOutcomes``1(PVIMS.API.Models.Parameters.IdResourceParameters)">
            <summary>
            Get outcomes from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="baseResourceParameters">Standard parameters for representing resource</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.OutcomesController.GetOutcomeAsync``1(System.Int64)">
            <summary>
            Get single outcome from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="id">Resource id to search by</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.OutcomesController.CreateLinksForOutcome``1(``0)">
            <summary>
             Prepare HATEOAS links for a single resource
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientClinicalEventsController.GetPatientClinicalEventByIdentifier(System.Int64,System.Int64)">
            <summary>
            Get a single patient clinical event using it's unique id and valid media type 
            </summary>
            <param name="patientId">The unique identifier for the patient</param>
            <param name="id">The unique identifier for the patient clinical event</param>
            <returns>An ActionResult of type PatientClinicalEventIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientClinicalEventsController.GetPatientClinicalEventByDetail(System.Int64,System.Int64)">
            <summary>
            Get a single patient clinical event using it's unique code and valid media type 
            </summary>
            <param name="patientId">The unique identifier for the patient</param>
            <param name="id">The unique identifier for the patient clinical event</param>
            <returns>An ActionResult of type PatientClinicalEventDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientClinicalEventsController.GetPatientClinicalEventByExpanded(System.Int64,System.Int64)">
            <summary>
            Get a single patient clinical event using it's unique code and valid media type 
            </summary>
            <param name="patientId">The unique identifier for the patient</param>
            <param name="id">The unique identifier for the patient clinical event</param>
            <returns>An ActionResult of type PatientClinicalEventExpandedDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientClinicalEventsController.CreatePatientClinicalEvent(System.Int32,PVIMS.API.Models.PatientClinicalEventForUpdateDto)">
            <summary>
            Create a new patient clinical event record
            </summary>
            <param name="patientId">The unique id of the patient</param>
            <param name="clinicalEventForUpdate">The clinical event payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientClinicalEventsController.UpdatePatientClinicalEvent(System.Int64,System.Int64,PVIMS.API.Models.PatientClinicalEventForUpdateDto)">
            <summary>
            Update an existing patient clinical event
            </summary>
            <param name="patientId">The unique id of the patient</param>
            <param name="id">The unique id of the clinical event</param>
            <param name="clinicalEventForUpdate">The condition payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientClinicalEventsController.ArchivePatientClinicalEvent(System.Int64,System.Int64,PVIMS.API.Models.ArchiveDto)">
            <summary>
            Delete an existing patient clinical event
            </summary>
            <param name="patientId">The unique identifier of the patient</param>
            <param name="id">The unique id of the clinical event</param>
            <param name="conditionForDelete">The deletion payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientClinicalEventsController.GetPatientClinicalEventAsync``1(System.Int64,System.Int64)">
            <summary>
            Get single patient clinical event from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="patientId">Parent resource id to search by</param>
            <param name="id">Resource id to search by</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientClinicalEventsController.CreateLinksForPatientClinicalEvent``1(``0)">
            <summary>
             Prepare HATEOAS links for a single resource
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientClinicalEventsController.CustomPatientClinicalEventMap(PVIMS.API.Models.PatientClinicalEventDetailDto)">
            <summary>
             Map additional dto detail elements not handled through automapper
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientClinicalEventsController.CustomPatientClinicalEventMap(PVIMS.API.Models.PatientClinicalEventExpandedDto)">
            <summary>
             Map additional dto detail elements not handled through automapper
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientClinicalEventsController.GetSelectionValue(System.String,System.String)">
            <summary>
            Get the corresponding selection value
            </summary>
            <param name="attributeKey">The custom attribute key look up value</param>
            <param name="selectionKey">The selection key look up value</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientClinicalEventsController.ValidateClinicalEventForUpdateModel(PVIMS.Core.Entities.Patient,PVIMS.API.Models.PatientClinicalEventForUpdateDto,System.Int64)">
            <summary>
            Validate the input model for updating a clinical event
            </summary>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientClinicalEventsController.PrepareClinicalEventDetail(PVIMS.API.Models.PatientClinicalEventForUpdateDto)">
            <summary>
            Prepare the model for the clinical event
            </summary>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientConditionsController.GetPatientConditionByIdentifier(System.Int64,System.Int64)">
            <summary>
            Get a single patient condition using it's unique id and valid media type 
            </summary>
            <param name="patientId">The unique identifier for the patient</param>
            <param name="id">The unique identifier for the patient condition</param>
            <returns>An ActionResult of type PatientConditionIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientConditionsController.GetPatientConditionByDetail(System.Int64,System.Int64)">
            <summary>
            Get a single patient condition using it's unique code and valid media type 
            </summary>
            <param name="patientId">The unique identifier for the patient</param>
            <param name="id">The unique identifier for the patient condition</param>
            <returns>An ActionResult of type PatientConditionDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientConditionsController.CreatePatientCondition(System.Int32,PVIMS.API.Models.PatientConditionForUpdateDto)">
            <summary>
            Create a new patient condition record
            </summary>
            <param name="patientId">The unique id of the patient</param>
            <param name="conditionForUpdate">The condition payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientConditionsController.UpdatePatientCondition(System.Int64,System.Int64,PVIMS.API.Models.PatientConditionForUpdateDto)">
            <summary>
            Update an existing patient condition
            </summary>
            <param name="patientId">The unique id of the patient</param>
            <param name="id">The unique id of the condition</param>
            <param name="conditionForUpdate">The condition payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientConditionsController.ArchivePatientCondition(System.Int64,System.Int64,PVIMS.API.Models.ArchiveDto)">
            <summary>
            Delete an existing patient condition
            </summary>
            <param name="patientId">The unique identifier of the patient</param>
            <param name="id">The unique id of the condition</param>
            <param name="conditionForDelete">The deletion payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientConditionsController.GetPatientConditionAsync``1(System.Int64,System.Int64)">
            <summary>
            Get single patient condition from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="patientId">Parent resource id to search by</param>
            <param name="id">Resource id to search by</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientConditionsController.CustomPatientConditionMap(PVIMS.API.Models.PatientConditionDetailDto)">
            <summary>
             Map additional dto detail elements not handled through automapper
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientConditionsController.CreateLinksForPatientCondition``1(``0)">
            <summary>
             Prepare HATEOAS links for a single resource
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientConditionsController.ValidateConditionForUpdateModel(PVIMS.Core.Entities.Patient,PVIMS.API.Models.PatientConditionForUpdateDto,System.Int64)">
            <summary>
            Validate the input model for updating a condition
            </summary>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientConditionsController.PrepareConditionDetail(PVIMS.API.Models.PatientConditionForUpdateDto)">
            <summary>
            Prepare the model for the condition
            </summary>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientConditionsController.GetSelectionValue(System.String,System.String)">
            <summary>
            Get the corresponding selection value
            </summary>
            <param name="attributeKey">The custom attribute key look up value</param>
            <param name="selectionKey">The selection key look up value</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientLabTestsController.GetPatientLabTestByIdentifier(System.Int64,System.Int64)">
            <summary>
            Get a single patient lab test using it's unique id and valid media type 
            </summary>
            <param name="patientId">The unique identifier for the patient</param>
            <param name="id">The unique identifier for the patient lab test</param>
            <returns>An ActionResult of type PatientLabTestIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientLabTestsController.GetPatientLabTestByDetail(System.Int64,System.Int64)">
            <summary>
            Get a single patient lab test using it's unique code and valid media type 
            </summary>
            <param name="patientId">The unique identifier for the patient</param>
            <param name="id">The unique identifier for the patient labTest</param>
            <returns>An ActionResult of type PatientLabTestDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientLabTestsController.CreatePatientLabTest(System.Int32,PVIMS.API.Models.PatientLabTestForUpdateDto)">
            <summary>
            Create a new patient lab test record
            </summary>
            <param name="patientId">The unique id of the patient</param>
            <param name="labTestForUpdate">The lab test payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientLabTestsController.UpdatePatientLabTest(System.Int64,System.Int64,PVIMS.API.Models.PatientLabTestForUpdateDto)">
            <summary>
            Update an existing patient lab test
            </summary>
            <param name="patientId">The unique id of the patient</param>
            <param name="id">The unique id of the lab test</param>
            <param name="labTestForUpdate">The lab test payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientLabTestsController.ArchivePatientLabTest(System.Int64,System.Int64,PVIMS.API.Models.ArchiveDto)">
            <summary>
            Delete an existing patient lab test
            </summary>
            <param name="patientId">The unique identifier of the patient</param>
            <param name="id">The unique id of the lab test</param>
            <param name="labTestForDelete">The deletion payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientLabTestsController.GetPatientLabTestAsync``1(System.Int64,System.Int64)">
            <summary>
            Get single patient lab test from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="patientId">Parent resource id to search by</param>
            <param name="id">Resource id to search by</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientLabTestsController.CustomPatientLabTestMap(PVIMS.API.Models.PatientLabTestDetailDto)">
            <summary>
             Map additional dto detail elements not handled through automapper
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientLabTestsController.CreateLinksForPatientLabTest``1(``0)">
            <summary>
             Prepare HATEOAS links for a single resource
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientLabTestsController.ValidateLabTestForUpdateModel(PVIMS.Core.Entities.Patient,PVIMS.API.Models.PatientLabTestForUpdateDto)">
            <summary>
            Validate the input model for updating a lab test
            </summary>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientLabTestsController.PrepareLabTestDetail(PVIMS.API.Models.PatientLabTestForUpdateDto)">
            <summary>
            Prepare the model for the lab test
            </summary>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientLabTestsController.GetSelectionValue(System.String,System.String)">
            <summary>
            Get the corresponding selection value
            </summary>
            <param name="attributeKey">The custom attribute key look up value</param>
            <param name="selectionKey">The selection key look up value</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientMedicationsController.GetPatientMedicationByIdentifier(System.Int64,System.Int64)">
            <summary>
            Get a single patient medication using it's unique id and valid media type 
            </summary>
            <param name="patientId">The unique identifier for the patient</param>
            <param name="id">The unique identifier for the patient medication</param>
            <returns>An ActionResult of type PatientMedicationIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientMedicationsController.GetPatientMedicationByDetail(System.Int64,System.Int64)">
            <summary>
            Get a single patient medication using it's unique code and valid media type 
            </summary>
            <param name="patientId">The unique identifier for the patient</param>
            <param name="id">The unique identifier for the patient medication</param>
            <returns>An ActionResult of type PatientMedicationDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientMedicationsController.CreatePatientMedication(System.Int32,PVIMS.API.Models.PatientMedicationForUpdateDto)">
            <summary>
            Create a new patient medication record
            </summary>
            <param name="patientId">The unique id of the patient</param>
            <param name="medicationForUpdate">The medication payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientMedicationsController.UpdatePatientMedication(System.Int64,System.Int64,PVIMS.API.Models.PatientMedicationForUpdateDto)">
            <summary>
            Update an existing patient medication
            </summary>
            <param name="patientId">The unique id of the patient</param>
            <param name="id">The unique id of the medication</param>
            <param name="medicationForUpdate">The medication payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientMedicationsController.ArchivePatientMedication(System.Int64,System.Int64,PVIMS.API.Models.ArchiveDto)">
            <summary>
            Delete an existing patient medication
            </summary>
            <param name="patientId">The unique identifier of the patient</param>
            <param name="id">The unique id of the medication</param>
            <param name="medicationForDelete">The deletion payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientMedicationsController.GetPatientMedicationAsync``1(System.Int64,System.Int64)">
            <summary>
            Get single patient medication from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="patientId">Parent resource id to search by</param>
            <param name="id">Resource id to search by</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientMedicationsController.CustomPatientMedicationMap(PVIMS.API.Models.PatientMedicationDetailDto)">
            <summary>
             Map additional dto detail elements not handled through automapper
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientMedicationsController.CreateLinksForPatientMedication``1(``0)">
            <summary>
             Prepare HATEOAS links for a single resource
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientMedicationsController.ValidateMedicationForUpdateModel(PVIMS.Core.Entities.Patient,PVIMS.API.Models.PatientMedicationForUpdateDto,System.Int64)">
            <summary>
            Validate the input model for updating a medication
            </summary>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientMedicationsController.PrepareMedicationDetail(PVIMS.API.Models.PatientMedicationForUpdateDto)">
            <summary>
            Prepare the model for the medication
            </summary>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientMedicationsController.GetSelectionValue(System.String,System.String)">
            <summary>
            Get the corresponding selection value
            </summary>
            <param name="attributeKey">The custom attribute key look up value</param>
            <param name="selectionKey">The selection key look up value</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientMedicationsController.AddOrUpdateMedicationsToReportInstance(PVIMS.Core.Entities.PatientMedication)">
            <summary>
            Modify source report instance with medification changes
            </summary>
            <param name="patientMedication">The medication to be updated</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientsController.GetPatientsByIdentifier(PVIMS.API.Models.Parameters.PatientResourceParameters)">
            <summary>
            Get all Patients using a valid media type 
            </summary>
            <param name="patientResourceParameters">
            Specify paging and filtering information (including requested page number and page size)
            </param>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of PatientIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientsController.GetPatientsByDetail(PVIMS.API.Models.Parameters.PatientResourceParameters)">
            <summary>
            Get all Patients using a valid media type 
            </summary>
            <param name="patientResourceParameters">
            Specify paging and filtering information (including requested page number and page size)
            </param>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of PatientDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientsController.GetPatientByIdentifier(System.Int64)">
            <summary>
            Get a single Patient using it's unique id and valid media type 
            </summary>
            <param name="id">The unique identifier for the Patient</param>
            <returns>An ActionResult of type PatientIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientsController.GetPatientByDetail(System.Int64)">
            <summary>
            Get a single Patient using it's unique code and valid media type 
            </summary>
            <param name="id">The unique identifier for the Patient</param>
            <returns>An ActionResult of type ProgramDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientsController.GetPatientByExpanded(System.Int64)">
            <summary>
            Get a single Patient using it's unique code and valid media type 
            </summary>
            <param name="id">The unique identifier for the Patient</param>
            <returns>An ActionResult of type PatientExpandedDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientsController.GetAdverseEventReport(PVIMS.API.Models.Parameters.AdverseEventReportResourceParameters)">
            <summary>
            Adverse event report
            </summary>
            <param name="adverseEventReportResourceParameters">
            Specify paging and filtering information (including requested page number and page size)
            </param>
            <returns>An ActionResult of type AdverseEventReportDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientsController.GetAdverseEventQuarterlyReport(PVIMS.API.Models.Parameters.BaseReportResourceParameters)">
            <summary>
            Quarterly adverse event report
            </summary>
            <param name="baseReportResourceParameters">
            Specify paging and filtering information (including requested page number and page size)
            </param>
            <returns>An ActionResult of type AdverseEventFrequencyReportDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientsController.GetAdverseEventAnnualReport(PVIMS.API.Models.Parameters.BaseReportResourceParameters)">
            <summary>
            Annual adverse event report
            </summary>
            <param name="baseReportResourceParameters">
            Specify paging and filtering information (including requested page number and page size)
            </param>
            <returns>An ActionResult of type AdverseEventFrequencyReportDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientsController.GetPatientTreatmentReport(PVIMS.API.Models.Parameters.PatientTreatmentReportResourceParameters)">
            <summary>
            Patient on treatment report
            </summary>
            <param name="patientTreatmentReportResourceParameters">
            Specify paging and filtering information (including requested page number and page size)
            </param>
            <returns>An ActionResult of type PatientTreatmentReportDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientsController.GetPatientByMedicationReport(PVIMS.API.Models.Parameters.PatientMedicationReportResourceParameters)">
            <summary>
            Patient by drug report
            </summary>
            <param name="patientMedicationReportResourceParameters">
            Specify paging and filtering information (including requested page number and page size)
            </param>
            <returns>An ActionResult of type PatientMedicationReportDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientsController.GetPatientAttachmentByIdentifier(System.Int32,System.Int32)">
            <summary>
            Get a single patient attachment using it's unique id and valid media type 
            </summary>
            <param name="patientId">The unique identifier for the patient</param>
            <param name="id">The unique identifier for the attachment</param>
            <returns>An ActionResult of type PatientIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientsController.DownloadSingleAttachment(System.Int32,System.Int32)">
            <summary>
            Download a file attachment
            </summary>
            <param name="patientId">The unique identifier for the patient</param>
            <param name="id">The unique identifier for the attachment</param>
            <returns>An ActionResult</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientsController.DownloadAllAttachment(System.Int32)">
            <summary>
            Download all file attachments
            </summary>
            <param name="patientId">The unique identifier for the patient</param>
            <returns>An ActionResult of type AuditLogIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientsController.CreatePatient(PVIMS.API.Models.PatientForCreationDto)">
            <summary>
            Create a new patient record
            </summary>
            <param name="patientForCreation">The patient payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientsController.UpdatePatient(System.Int32,PVIMS.API.Models.PatientForUpdateDto)">
            <summary>
            Update an existing patient
            </summary>
            <param name="id">The unique id of the patient</param>
            <param name="patientForUpdate">The patient payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientsController.ArchivePatient(System.Int64,PVIMS.API.Models.ArchiveDto)">
            <summary>
            Archive an existing patient
            </summary>
            <param name="id">The unique identifier of the patient</param>
            <param name="patientForDelete">The deletion payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientsController.CreatePatientAttachment(System.Int32,PVIMS.API.Models.PatientAttachmentForCreationDto)">
            <summary>
            Create a new patient attachment
            </summary>
            <param name="patientId">The unique identifier for the patient</param>
            <param name="patientAttachmentForCreation">The attachment payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientsController.ArchivePatientAttachment(System.Int64,System.Int64,PVIMS.API.Models.ArchiveDto)">
            <summary>
            Archive an existing attachment
            </summary>
            <param name="patientId">The unique identifier of the patient</param>
            <param name="id">The unique id of the attachment</param>
            <param name="attachmentForDelete">The deletion payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientsController.GetPatientAsync``1(System.Int64)">
            <summary>
            Get single Patient from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="id">Resource id to search by</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientsController.GetAttachmentAsync``1(System.Int32,System.Int32)">
            <summary>
            Get single attachment from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="patientId">Resource parent id to search by</param>
            <param name="id">Resource id to search by</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientsController.GetPatients``1(PVIMS.API.Models.Parameters.PatientResourceParameters)">
            <summary>
            Get patients from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier, detail or expanded Dto</typeparam>
            <param name="patientResourceParameters">Standard parameters for representing resource</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientsController.CreateLinksForPatients(PVIMS.API.Models.LinkedResourceBaseDto,PVIMS.API.Models.Parameters.PatientResourceParameters,System.Boolean,System.Boolean)">
            <summary>
            Prepare HATEOAS links for a identifier based collection resource
            </summary>
            <param name="wrapper">The linked dto wrapper that will host each link</param>
            <param name="patientResourceParameters">Standard parameters for representing resource</param>
            <param name="hasNext">Are there additional pages</param>
            <param name="hasPrevious">Are there previous pages</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientsController.CreateLinksForPatientMedicationReport(PVIMS.API.Models.LinkedResourceBaseDto,PVIMS.API.Models.Parameters.PatientMedicationReportResourceParameters,System.Boolean,System.Boolean)">
            <summary>
            Prepare HATEOAS links for a identifier based collection resource
            </summary>
            <param name="wrapper">The linked dto wrapper that will host each link</param>
            <param name="patientMedicationReportResourceParameters">Standard parameters for representing resource</param>
            <param name="hasNext">Are there additional pages</param>
            <param name="hasPrevious">Are there previous pages</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientsController.CreateLinksForPatientTreatmentReport(PVIMS.API.Models.LinkedResourceBaseDto,PVIMS.API.Models.Parameters.PatientTreatmentReportResourceParameters,System.Boolean,System.Boolean)">
            <summary>
            Prepare HATEOAS links for a identifier based collection resource
            </summary>
            <param name="wrapper">The linked dto wrapper that will host each link</param>
            <param name="patientTreatmentReportResourceParameters">Standard parameters for representing resource</param>
            <param name="hasNext">Are there additional pages</param>
            <param name="hasPrevious">Are there previous pages</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientsController.CreateLinksForAdverseEventReport(PVIMS.API.Models.LinkedResourceBaseDto,PVIMS.API.Models.Parameters.AdverseEventReportResourceParameters,System.Boolean,System.Boolean)">
            <summary>
            Prepare HATEOAS links for a identifier based collection resource
            </summary>
            <param name="wrapper">The linked dto wrapper that will host each link</param>
            <param name="adverseEventReportResourceParameters">Standard parameters for representing resource</param>
            <param name="hasNext">Are there additional pages</param>
            <param name="hasPrevious">Are there previous pages</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientsController.CreateLinksForQuarterlyAdverseEventReport(PVIMS.API.Models.LinkedResourceBaseDto,PVIMS.API.Models.Parameters.BaseReportResourceParameters,System.Boolean,System.Boolean)">
            <summary>
            Prepare HATEOAS links for a identifier based collection resource
            </summary>
            <param name="wrapper">The linked dto wrapper that will host each link</param>
            <param name="baseReportResourceParameters">Standard parameters for representing resource</param>
            <param name="hasNext">Are there additional pages</param>
            <param name="hasPrevious">Are there previous pages</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientsController.CreateLinksForAnnualAdverseEventReport(PVIMS.API.Models.LinkedResourceBaseDto,PVIMS.API.Models.Parameters.BaseReportResourceParameters,System.Boolean,System.Boolean)">
            <summary>
            Prepare HATEOAS links for a identifier based collection resource
            </summary>
            <param name="wrapper">The linked dto wrapper that will host each link</param>
            <param name="baseReportResourceParameters">Standard parameters for representing resource</param>
            <param name="hasNext">Are there additional pages</param>
            <param name="hasPrevious">Are there previous pages</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientsController.CreateLinksForPatient``1(``0)">
            <summary>
             Prepare HATEOAS links for a single resource
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientsController.CreateLinksForAttachment``1(System.Int32,``0)">
            <summary>
             Prepare HATEOAS links for a single resource
            </summary>
            <param name="patientId">The unique identifier of the parent resource</param>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientsController.CustomPatientMap(PVIMS.API.Models.PatientDetailDto)">
            <summary>
             Map additional dto detail elements not handled through automapper
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientsController.CustomPatientMap(PVIMS.API.Models.PatientExpandedDto)">
            <summary>
             Map additional dto detail elements not handled through automapper
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientsController.CustomCohortGroupMap(PVIMS.API.Models.CohortGroupPatientDetailDto,PVIMS.Core.Entities.Patient)">
            <summary>
             Map additional dto detail elements not handled through automapper
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <param name="patient">The patient to be used to determine what enrolments to load</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientsController.CustomClinicalEventMap(PVIMS.API.Models.PatientClinicalEventDetailDto)">
            <summary>
             Map additional dto detail elements not handled through automapper
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientsController.CustomMedicationMap(PVIMS.API.Models.PatientMedicationDetailDto)">
            <summary>
             Map additional dto detail elements not handled through automapper
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientsController.CustomPatientMedicationReportMap(PVIMS.API.Models.PatientMedicationReportDto)">
            <summary>
             Map additional dto detail elements not handled through automapper
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientsController.CustomPatientTreatmentReportMap(PVIMS.API.Models.PatientTreatmentReportDto,PVIMS.API.Models.Parameters.PatientTreatmentReportResourceParameters)">
            <summary>
             Map additional dto detail elements not handled through automapper
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <param name="patientTreatmentReportResourceParameters">Standard parameters for representing resource</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientsController.GetCohortGroups(System.Int64)">
            <summary>
            Get a list of cohort groups
            </summary>
            <param name="id">Resource id to search by</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientsController.GetCohortGroupEnrolment(System.Int64,System.Int64)">
            <summary>
            Get a list of cohort groups
            </summary>
            <param name="cohortGroupId">Resource id to search by</param>
            <param name="patientId">The patient id to be used to determine what enrolments to load</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientsController.GetSelectionValue(System.String,System.String)">
            <summary>
            Get the corresponding selection value
            </summary>
            <param name="attributeKey">The custom attribute key look up value</param>
            <param name="selectionKey">The selection key look up value</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientsController.CreateLinksForEnrolment(PVIMS.API.Models.EnrolmentIdentifierDto)">
            <summary>
             Prepare HATEOAS links for a single resource for enrolments
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientsController.CreateLinksForCohortGroup(PVIMS.API.Models.CohortGroupPatientDetailDto)">
            <summary>
             Prepare HATEOAS links for a single resource for cohort groups
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientsController.GetAdverseEventResults``1(PVIMS.API.Models.Parameters.AdverseEventReportResourceParameters)">
            <summary>
            Get results from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier, detail or expanded Dto</typeparam>
            <param name="adverseEventReportResourceParameters">Standard parameters for representing resource</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientsController.GetQuarterlyAdverseEventResults``1(PVIMS.API.Models.Parameters.BaseReportResourceParameters)">
            <summary>
            Get results from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier, detail or expanded Dto</typeparam>
            <param name="baseReportResourceParameters">Standard parameters for representing resource</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientsController.GetAnnualAdverseEventResults``1(PVIMS.API.Models.Parameters.BaseReportResourceParameters)">
            <summary>
            Get results from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier, detail or expanded Dto</typeparam>
            <param name="baseReportResourceParameters">Standard parameters for representing resource</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientsController.GetPatientTreatmentResults``1(PVIMS.API.Models.Parameters.PatientTreatmentReportResourceParameters)">
            <summary>
            Get results from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier, detail or expanded Dto</typeparam>
            <param name="patientTreatmentReportResourceParameters">Standard parameters for representing resource</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientsController.GetPatientMedicationResults``1(PVIMS.API.Models.Parameters.PatientMedicationReportResourceParameters)">
            <summary>
            Get results from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier, detail or expanded Dto</typeparam>
            <param name="patientMedicationReportResourceParameters">Standard parameters for representing resource</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientsController.ValidatePatientForCreationModel(PVIMS.API.Models.PatientForCreationDto)">
            <summary>
            Validate the input model for adding a new patient
            </summary>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientsController.ValidatePatientForUpdateModel(PVIMS.API.Models.PatientForUpdateDto)">
            <summary>
            Validate the input model for updating an existing patient
            </summary>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientsController.PreparePatientDetail(PVIMS.API.Models.PatientForCreationDto)">
            <summary>
            Prepare the model for adding a new patient
            </summary>
        </member>
        <member name="M:PVIMS.API.Controllers.PatientsController.PreparePatientDetail(PVIMS.API.Models.PatientForUpdateDto)">
            <summary>
            Prepare the model for updating an existing patient
            </summary>
        </member>
        <member name="M:PVIMS.API.Controllers.PrioritiesController.GetPrioritiesByIdentifier(PVIMS.API.Models.Parameters.IdResourceParameters)">
            <summary>
            Get all priorities using a valid media type 
            </summary>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of PriorityIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PrioritiesController.GetPriorityByIdentifier(System.Int64)">
            <summary>
            Get a single priority using it's unique id and valid media type 
            </summary>
            <param name="id">The unique identifier for the encounterType</param>
            <returns>An ActionResult of type PriorityIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PrioritiesController.GetPriorites``1(PVIMS.API.Models.Parameters.IdResourceParameters)">
            <summary>
            Get priorities from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="priorityResourceParameters">Standard parameters for representing resource</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PrioritiesController.GetPriorityAsync``1(System.Int64)">
            <summary>
            Get single priority from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="id">Resource id to search by</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.PrioritiesController.CreateLinksForPriority``1(``0)">
            <summary>
             Prepare HATEOAS links for a single resource
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ReportInstancesController.GetReportInstanceByIdentifier(System.Guid,System.Int32)">
            <summary>
            Get a single report instance using it's unique id and valid media type 
            </summary>
            <param name="workFlowGuid">The unique identifier of the work flow that report instances are associated to</param>
            <param name="id">The unique id of the report instance</param>
            <returns>An ActionResult of type ReportInstanceIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ReportInstancesController.GetReportInstanceByDetail(System.Guid,System.Int32)">
            <summary>
            Get a single report instance using it's unique id and valid media type 
            </summary>
            <param name="workFlowGuid">The unique identifier of the work flow that report instances are associated to</param>
            <param name="id">The unique id of the report instance</param>
            <returns>An ActionResult of type ReportInstanceDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ReportInstancesController.DownloadPatientSummary(System.Guid,System.Int32)">
            <summary>
            Download a summary for the patient
            </summary>
            <param name="workFlowGuid">The unique identifier of the work flow that report instances are associated to</param>
            <param name="id">The unique id of the report instance</param>
            <returns>An ActionResult</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ReportInstancesController.GetReportInstancesByDetail(System.Guid,PVIMS.API.Models.Parameters.ReportInstanceResourceParameters)">
            <summary>
            Get all report instances using a valid media type 
            </summary>
            <param name="workFlowGuid">The unique identifier of the work flow that report instances are associated to</param>
            <param name="reportInstanceResourceParameters">
            Specify paging and filtering information (including requested page number and page size)
            </param>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of ReportInstanceDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ReportInstancesController.GetNewReportInstancesByDetail(System.Guid,PVIMS.API.Models.Parameters.ReportInstanceNewResourceParameters)">
            <summary>
            Get all new report instances using a valid media type 
            </summary>
            <param name="workFlowGuid">The unique identifier of the work flow that report instances are associated to</param>
            <param name="reportInstanceResourceParameters">
            Specify paging and filtering information (including requested page number and page size)
            </param>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of ReportInstanceDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ReportInstancesController.GetFeedbackReportInstancesByDetail(System.Guid,PVIMS.API.Models.Parameters.ReportInstanceNewResourceParameters)">
            <summary>
            Get all report instances for feedback using a valid media type 
            </summary>
            <param name="workFlowGuid">The unique identifier of the work flow that report instances are associated to</param>
            <param name="reportInstanceResourceParameters">
            Specify paging and filtering information (including requested page number and page size)
            </param>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of ReportInstanceDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ReportInstancesController.GetActivityExecutionStatusEvents(System.Guid,System.Int32)">
            <summary>
            Get all activity events for a given report instance
            </summary>
            <param name="workFlowGuid">The unique identifier of the work flow that report instances are associated to</param>
            <param name="reportinstanceId">The unique identifier of the work flow that report instances are associated to</param>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of ActivityExecutionStatusEventDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ReportInstancesController.DownloadActivitySingleAttachment(System.Guid,System.Int32,System.Int32,System.Int32)">
            <summary>
            Download a file attachment
            </summary>
            <param name="workFlowGuid">The unique identifier of the work flow that report instances are associated to</param>
            <param name="reportinstanceId">The unique identifier of the work flow that report instances are associated to</param>
            <param name="activityExecutionStatusEventId">The unique identifier of the activity</param>
            <param name="id">The unique identifier for the attachment</param>
            <returns>An ActionResult</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ReportInstancesController.GetCausalityReport(System.Guid,PVIMS.API.Models.Parameters.CausalityReportResourceParameters)">
            <summary>
            Causality report
            </summary>
            <param name="workFlowGuid">The unique identifier of the work flow that report instances are associated to</param>
            <param name="causalityReportResourceParameters">
            Specify paging and filtering information (including requested page number and page size)
            </param>
            <returns>An ActionResult of type CausalityReportDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ReportInstancesController.UpdateReportInstanceStatus(System.Guid,System.Int32,PVIMS.API.Models.ActivityChangeDto)">
            <summary>
            Set report instance status
            </summary>
            <param name="workFlowGuid">The unique identifier of the work flow that report instances are associated to</param>
            <param name="id">The unique identifier of the reporting instance</param>
            <param name="activityChange">The payload for setting the new status</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ReportInstancesController.UpdateReportInstanceTerminology(System.Guid,System.Int32,PVIMS.API.Models.ReportInstanceTerminologyForUpdateDto)">
            <summary>
            Set report instance terminology
            </summary>
            <param name="workFlowGuid">The unique identifier of the work flow that report instances are associated to</param>
            <param name="id">The unique identifier of the reporting instance</param>
            <param name="terminologyForUpdate">The payload for setting the new status</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ReportInstancesController.CreateE2BInstance(System.Guid,System.Int32)">
            <summary>
            Create an E2B instance for the report
            </summary>
            <param name="workFlowGuid">The unique identifier of the work flow that report instances are associated to</param>
            <param name="id">The unique identifier of the reporting instance</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ReportInstancesController.UpdateReportInstanceMedicationCausality(System.Guid,System.Int32,System.Int32,PVIMS.API.Models.ReportInstanceMedicationCausalityForUpdateDto)">
            <summary>
            Set naranjo or who causality for a report instance medication
            </summary>
            <param name="workFlowGuid">The unique identifier of the work flow that report instances are associated to</param>
            <param name="reportInstanceId">The unique identifier of the reporting instance</param>
            <param name="id">The unique identifier of the reporting instance medication</param>
            <param name="causalityForUpdate">The payload for setting the new causality</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ReportInstancesController.GetReportInstanceAsync``1(System.Guid,System.Int64)">
            <summary>
            Get single report instance from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="workFlowGuid">The unique identifier of the work flow that report instances are associated to</param>
            <param name="id">Resource id to search by</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ReportInstancesController.GetReportInstances``1(System.Guid,PVIMS.API.Models.Parameters.ReportInstanceResourceParameters)">
            <summary>
            Get report instances from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier, detail or expanded Dto</typeparam>
            <param name="workFlowGuid">The uniwue identifier of the work flow that report instances are associated to</param>
            <param name="reportInstanceResourceParameters">Standard parameters for representing resource</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ReportInstancesController.GetNewReportInstances``1(System.Guid,PVIMS.API.Models.Parameters.ReportInstanceNewResourceParameters)">
            <summary>
            Get new report instances
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ReportInstancesController.GetFeedbackReportInstances``1(System.Guid,PVIMS.API.Models.Parameters.ReportInstanceNewResourceParameters)">
            <summary>
            Get new report instances for clinical feedback
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ReportInstancesController.GetActivityExecutionStatusEvents``1(System.Guid,System.Int32)">
            <summary>
            Get report instances from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier, detail or expanded Dto</typeparam>
            <param name="workFlowGuid">The uniwue identifier of the work flow that report instances are associated to</param>
            <param name="reportinstanceId">The unique identifier of the work flow that report instances are associated to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ReportInstancesController.CreateLinksForReportInstances(System.Guid,PVIMS.API.Models.LinkedResourceBaseDto,PVIMS.API.Models.Parameters.ReportInstanceResourceParameters,System.Boolean,System.Boolean)">
            <summary>
            Prepare HATEOAS links for a identifier based collection resource
            </summary>
            <param name="workFlowGuid">The unique identifier of the work flow that report instances are associated to</param>
            <param name="wrapper">The linked dto wrapper that will host each link</param>
            <param name="reportInstanceResourceParameters">Standard parameters for representing resource</param>
            <param name="hasNext">Are there additional pages</param>
            <param name="hasPrevious">Are there previous pages</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ReportInstancesController.CreateLinksForNewReportInstances(System.Guid,PVIMS.API.Models.LinkedResourceBaseDto,PVIMS.API.Models.Parameters.ReportInstanceNewResourceParameters,System.Boolean,System.Boolean)">
            <summary>
            Prepare HATEOAS links for a identifier based collection resource
            </summary>
            <param name="workFlowGuid">The unique identifier of the work flow that report instances are associated to</param>
            <param name="wrapper">The linked dto wrapper that will host each link</param>
            <param name="reportInstanceResourceParameters">Standard parameters for representing resource</param>
            <param name="hasNext">Are there additional pages</param>
            <param name="hasPrevious">Are there previous pages</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ReportInstancesController.CreateLinksForReportInstance``1(System.Guid,``0)">
            <summary>
             Prepare HATEOAS links for a single resource
            </summary>
            <param name="workFlowGuid">The unique identifier of the work flow that report instances are associated to</param>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ReportInstancesController.CustomReportInstanceMap(PVIMS.API.Models.ReportInstanceDetailDto)">
            <summary>
             Map additional dto detail elements not handled through automapper
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ReportInstancesController.CustomActivityExecutionStatusEventMap(PVIMS.API.Models.ActivityExecutionStatusEventDto)">
            <summary>
             Map additional dto detail elements not handled through automapper
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ReportInstancesController.GetCausalityResults``1(PVIMS.API.Models.Parameters.CausalityReportResourceParameters)">
            <summary>
            Get results from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier, detail or expanded Dto</typeparam>
            <param name="causalityReportResourceParameters">Standard parameters for representing resource</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ReportInstancesController.CreateE2BForActive(PVIMS.Core.Entities.ReportInstance)">
            <summary>
            Create E2B dataset instance for an active report
            </summary>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ReportInstancesController.CreateE2BForSpontaneous(PVIMS.Core.Entities.ReportInstance)">
            <summary>
            Create E2B dataset instance for a spontaneous report
            </summary>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ReportInstancesController.SetInstanceValuesForActiveRelease2(PVIMS.Core.Entities.DatasetInstance,PVIMS.Core.Entities.PatientClinicalEvent)">
            <summary>
            E2B data mapping for active datasets
            </summary>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ReportInstancesController.SetInstanceValuesForSpontaneousRelease2(PVIMS.Core.Entities.DatasetInstance,PVIMS.Core.Entities.DatasetInstance,PVIMS.Core.Entities.User)">
            <summary>
            E2B data mapping for spontaneous datasets using R2
            </summary>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ReportInstancesController.SetInstanceValuesForSpontaneousRelease3(PVIMS.Core.Entities.DatasetInstance,PVIMS.Core.Entities.DatasetInstance,PVIMS.Core.Entities.User,System.Int32)">
            <summary>
            E2B data mapping for spontaneous datasets using R3
            </summary>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ReportInstancesController.ConvertValueToDecimal(System.String)">
            <summary>
            Generic function to convert a string based value to a decimal
            </summary>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ReportInstancesController.MapDoseUnitForActive(System.String)">
            <summary>
            E2B data mapping for active datasets
            </summary>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ReportInstancesController.MapDrugActionForActive(System.String)">
            <summary>
            E2B data mapping for active datasets
            </summary>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ReportInstancesController.CustomReportInstanceMedicationMap(PVIMS.Core.Entities.ReportInstance,PVIMS.API.Models.ReportInstanceMedicationDetailDto)">
            <summary>
             Map additional dto detail elements not handled through automapper
            </summary>
            <param name="reportInstance">The report instance that the medication is associated to</param>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.ReportInstancesController.CreateLinksForCausalityReport(PVIMS.API.Models.LinkedResourceBaseDto,System.Guid,PVIMS.API.Models.Parameters.CausalityReportResourceParameters,System.Boolean,System.Boolean)">
            <summary>
            Prepare HATEOAS links for a identifier based collection resource
            </summary>
            <param name="wrapper">The linked dto wrapper that will host each link</param>
            <param name="workFlowGuid">The unique identifier of the work flow that report instances are associated to</param>
            <param name="causalityReportResourceParameters">Standard parameters for representing resource</param>
            <param name="hasNext">Are there additional pages</param>
            <param name="hasPrevious">Are there previous pages</param>
            <returns></returns>
        </member>
        <member name="T:PVIMS.API.Controllers.RiskFactorsController">
            <summary>
            A representation of all risk factors.
            </summary>
        </member>
        <member name="M:PVIMS.API.Controllers.RiskFactorsController.GetRiskFactorsByDetail(PVIMS.API.Models.Parameters.IdResourceParameters)">
            <summary>
            Get all risk factors using a valid media type 
            </summary>
            <param name="riskFactorResourceParameters">
            Specify paging and filtering information (including requested page number and page size)
            </param>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of RiskFactorDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.RiskFactorsController.GetRiskFactorByIdentifier(System.Int64)">
            <summary>
            Get a single risk factor using it's unique ID and valid media type 
            </summary>
            <param name="id">The unique identifier for the risk factor</param>
            <returns>An ActionResult of type RiskFactorIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.RiskFactorsController.GetRiskFactorByDetail(System.Int64)">
            <summary>
            Get a single risk factor using it's unique ID and valid media type 
            </summary>
            <param name="id">The unique identifier for the risk factor</param>
            <returns>An ActionResult of type RiskFactorDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.RiskFactorsController.GetRiskFactors``1(PVIMS.API.Models.Parameters.IdResourceParameters)">
            <summary>
            Get risk factors from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="riskFactorResourceParameters">Standard parameters for representing resource</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.RiskFactorsController.GetRiskFactorAsync``1(System.Int64)">
            <summary>
            Get single risk factor from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="id">Resource guid to search by</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.RiskFactorsController.CreateLinksForRiskFactor``1(``0)">
            <summary>
             Prepare HATEOAS links for a single resource
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.RolesController.GetRolesByIdentifier(PVIMS.API.Models.Parameters.IdResourceParameters)">
            <summary>
            Get all roles using a valid media type 
            </summary>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of RoleIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.RolesController.GetRoleByIdentifier(System.Int64)">
            <summary>
            Get a single role using it's unique id and valid media type 
            </summary>
            <param name="id">The unique identifier for the lab result</param>
            <returns>An ActionResult of type RoleIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.RolesController.GetRoles``1(PVIMS.API.Models.Parameters.IdResourceParameters)">
            <summary>
            Get roles from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="baseResourceParameters">Standard parameters for representing resource</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.RolesController.GetRoleAsync``1(System.Int64)">
            <summary>
            Get single role from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="id">Resource id to search by</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.RolesController.CreateLinksForRole``1(``0)">
            <summary>
             Prepare HATEOAS links for a single resource
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.TreatmentOutcomesController.GetTreatmentOutcomesByIdentifier(PVIMS.API.Models.Parameters.IdResourceParameters)">
            <summary>
            Get all treatmentOutcomes using a valid media type 
            </summary>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of TreatmentOutcomeIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.TreatmentOutcomesController.GetTreatmentOutcomeByIdentifier(System.Int64)">
            <summary>
            Get a single treatmentOutcome using it's unique id and valid media type 
            </summary>
            <param name="id">The unique identifier for the treatmentOutcome</param>
            <returns>An ActionResult of type TreatmentOutcomeIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.TreatmentOutcomesController.GetTreatmentOutcomes``1(PVIMS.API.Models.Parameters.IdResourceParameters)">
            <summary>
            Get treatmentOutcomes from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="baseResourceParameters">Standard parameters for representing resource</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.TreatmentOutcomesController.GetTreatmentOutcomeAsync``1(System.Int64)">
            <summary>
            Get single treatmentOutcome from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="id">Resource id to search by</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.TreatmentOutcomesController.CreateLinksForTreatmentOutcome``1(``0)">
            <summary>
             Prepare HATEOAS links for a single resource
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.UsersController.GetUsersByIdentifier(PVIMS.API.Models.Parameters.UserResourceParameters)">
            <summary>
            Get all users using a valid media type 
            </summary>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of UserIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.UsersController.GetUserByIdentifier(System.Int64)">
            <summary>
            Get a single user using it's unique id and valid media type 
            </summary>
            <param name="id">The unique identifier for the user</param>
            <returns>An ActionResult of type UserIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.UsersController.GetUserRolesByIdentifier(System.Int32,PVIMS.API.Models.Parameters.IdResourceParameters)">
            <summary>
            Get a single user using it's unique id and valid media type 
            </summary>
            <param name="id">The unique identifier for the user</param>
            <param name="userRoleResourceParameter">The unique identifier for the user</param>
            <returns>An ActionResult of type UserIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.UsersController.GetUserByDetail(System.Int64)">
            <summary>
            Get a single user using it's unique id and valid media type 
            </summary>
            <param name="id">The unique identifier for the user</param>
            <returns>An ActionResult of type UserDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.UsersController.CreateUser(PVIMS.API.Models.UserForCreationDto)">
            <summary>
            Create a new user
            </summary>
            <param name="userForCreation">The user payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.UsersController.UpdateUser(System.Int64,PVIMS.API.Models.UserForUpdateDto)">
            <summary>
            Update an existing user
            </summary>
            <param name="id">The unique id of the user</param>
            <param name="userForUpdate">The user payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.UsersController.ResetPassword(System.Int64,PVIMS.API.Models.UserForPasswordUpdateDto)">
            <summary>
            Reset the password for a user
            </summary>
            <param name="id">The unique id of the user</param>
            <param name="userForPasswordUpdate">The password payload</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.UsersController.AcceptEula(System.Int64)">
            <summary>
            Confirm that the user has accepted the EULA
            </summary>
            <param name="id">The unique id of the user</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.UsersController.DeleteUser(System.Int64)">
            <summary>
            Delete an existing user
            </summary>
            <param name="id">The unique id of the user</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.UsersController.GetUsers``1(PVIMS.API.Models.Parameters.UserResourceParameters)">
            <summary>
            Get users from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="userResourceParameters">Standard parameters for representing resource</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.UsersController.GetUserRoles(System.Int32)">
            <summary>
            Get user roles from repository and auto map to Dto
            </summary>
            <param name="id">The unique id of the user being interrogated</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.UsersController.GetUserAsync``1(System.Int64)">
            <summary>
            Get single user from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="id">Resource id to search by</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.UsersController.CreateLinksForUsers(PVIMS.API.Models.LinkedResourceBaseDto,PVIMS.API.Models.Parameters.UserResourceParameters,System.Boolean,System.Boolean)">
            <summary>
            Prepare HATEOAS links for a identifier based collection resource
            </summary>
            <param name="wrapper">The linked dto wrapper that will host each link</param>
            <param name="userResourceParameters">Standard parameters for representing resource</param>
            <param name="hasNext">Are there additional pages</param>
            <param name="hasPrevious">Are there previous pages</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.UsersController.CreateLinksForUser``1(``0)">
            <summary>
             Prepare HATEOAS links for a single resource
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.UsersController.CustomUserMap(PVIMS.API.Models.UserDetailDto)">
            <summary>
             Map additional dto detail elements not handled through automapper
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.UsersController.UpdateUserRoles(PVIMS.API.Models.UserForUpdateDto,PVIMS.Core.Entities.User)">
            <summary>
             Handle the updating of roles for an existing usser
            </summary>
            <param name="userForUpdate">The payload containing the list of roles</param>
            <param name="userFromRepo">The user entity that is being updated</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.UsersController.UpdateUserFacilities(PVIMS.API.Models.UserForUpdateDto,PVIMS.Core.Entities.User)">
            <summary>
             Handle the updating of facilities for an existing usser
            </summary>
            <param name="userForUpdate">The payload containing the list of facilities</param>
            <param name="userFromRepo">The user entity that is being updated</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.WorkFlowsController.GetWorkFlowByIdentifier(System.Guid)">
            <summary>
            Get a single workFlow using it's unique id and valid media type 
            </summary>
            <param name="id">The unique identifier for the workFlow</param>
            <returns>An ActionResult of type WorkFlowIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.WorkFlowsController.GetWorkFlowByDetail(System.Guid)">
            <summary>
            Get a single workFlow using it's unique id and valid media type 
            </summary>
            <param name="id">The unique identifier for the workFlow</param>
            <returns>An ActionResult of type WorkFlowDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.WorkFlowsController.DownloadDataset(System.Guid,PVIMS.API.Models.Parameters.AnalyserDatasetResourceParameters)">
            <summary>
            Download a dataset for corresponding work flow
            </summary>
            <param name="id">The unique id of the work flow you would like to download the dataset for</param>
            <param name="analyserDatasetResourceParameters">
            Specify paging and filtering information (including requested page number and page size)
            </param>
            <returns>An ActionResult</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.WorkFlowsController.GetWorkFlowAsync``1(System.Guid)">
            <summary>
            Get single workFlow from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="id">Resource id to search by</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.WorkFlowsController.CustomWorkFlowMap(PVIMS.API.Models.WorkFlowDetailDto)">
            <summary>
             Map additional dto detail elements not handled through automapper
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.WorkFlowsController.CreateLinksForWorkFlow``1(``0)">
            <summary>
             Prepare HATEOAS links for a single resource
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.WorkFlowsController.GetReportInstancesCount(System.Guid,System.String)">
            <summary>
            Get a total number of report instances as per the designated activity
            </summary>
            <param name="workFlowGuid">The uniwue identifier of the work flow that report instances are associated to</param>
            <param name="qualifiedName">The activity to get the report instance count for</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.WorkFlowsController.GetNewReportInstancesCount(System.Guid)">
            <summary>
            Get a total number of new report instances
            </summary>
            <param name="workFlowGuid">The uniwue identifier of the work flow that report instances are associated to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.WorkFlowsController.GetNewFeedbackCount(System.Guid)">
            <summary>
            Get a total number of new report instances with feedback for clinician
            </summary>
            <param name="workFlowGuid">The uniwue identifier of the work flow that report instances are associated to</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.WorkPlansController.GetWorkPlansByIdentifier(PVIMS.API.Models.Parameters.IdResourceParameters)">
            <summary>
            Get all work plans using a valid media type 
            </summary>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of WorkPlanIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.WorkPlansController.GetWorkPlansByDetail(PVIMS.API.Models.Parameters.IdResourceParameters)">
            <summary>
            Get all work plans using a valid media type 
            </summary>
            <returns>An ActionResult of type LinkedCollectionResourceWrapperDto of WorkPlanDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.WorkPlansController.GetWorkPlanByIdentifier(System.Int64)">
            <summary>
            Get a single workPlan using it's unique id and valid media type 
            </summary>
            <param name="id">The unique identifier for the workPlan</param>
            <returns>An ActionResult of type WorkPlanIdentifierDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.WorkPlansController.GetWorkPlanByDetail(System.Int64)">
            <summary>
            Get a single workPlan using it's unique id and valid media type 
            </summary>
            <param name="id">The unique identifier for the workPlan</param>
            <returns>An ActionResult of type WorkPlanDetailDto</returns>
        </member>
        <member name="M:PVIMS.API.Controllers.WorkPlansController.GetWorkPlanAsync``1(System.Int64)">
            <summary>
            Get single workPlan from repository and auto map to Dto
            </summary>
            <typeparam name="T">Identifier or detail Dto</typeparam>
            <param name="id">Resource id to search by</param>
            <returns></returns>
        </member>
        <member name="M:PVIMS.API.Controllers.WorkPlansController.CreateLinksForWorkPlan``1(``0)">
            <summary>
             Prepare HATEOAS links for a single resource
            </summary>
            <param name="dto">The dto that the link has been added to</param>
            <returns></returns>
        </member>
        <member name="P:PVIMS.API.Models.LoginRequestDto.UserName">
            <summary>
            Login username
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.LoginRequestDto.Password">
            <summary>
            Login password
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.LoginResponseDto.AccessToken">
            <summary>
            Access token response model
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.LoginResponseDto.RefreshToken">
            <summary>
            Login refresh token
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.LoginResponseDto.EulaAcceptanceRequired">
            <summary>
            Indicate if the user is required to accept the end user license agreement
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.LoginResponseDto.AllowDatasetDownload">
            <summary>
            Indicate if the user has ability to download a spontaneous or active dataset
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.AnalyserPatientDto">
            <summary>
            A dto representing the list of patients contributing to the reporting period
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AnalyserPatientDto.PatientName">
            <summary>
            The full name of the patient
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AnalyserPatientDto.Medication">
            <summary>
            The medication that the patient was on
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AnalyserPatientDto.StartDate">
            <summary>
            The start date of the contribution
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AnalyserPatientDto.FinishDate">
            <summary>
            The finish date of the contribution
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AnalyserPatientDto.DaysContributed">
            <summary>
            The number of days contributed by the patient to the analysis period
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AnalyserPatientDto.ExperiencedReaction">
            <summary>
            Did the patient experience this adverse drug reaction
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AnalyserPatientDto.RiskFactor">
            <summary>
            Any risk factors included as part of the criteria
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AnalyserPatientDto.RiskFactorOption">
            <summary>
            Risk factor stratification
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AnalyserPatientDto.FactorMet">
            <summary>
            Does the patient meet this risk factor criteria
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.AnalyserResultDto">
            <summary>
            A dto representing the list of signals per medication over a reporting period
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AnalyserResultDto.Medication">
            <summary>
            The analysis result medication
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AnalyserResultDto.MedicationId">
            <summary>
            The unique identifier of the medication
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AnalyserResultDto.ExposedIncidenceRate">
            <summary>
            The exposed incidence rate
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AnalyserResultDto.NonExposedIncidenceRate">
            <summary>
            The non-exposed incidence rate
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AnalyserResultDto.UnadjustedRelativeRisk">
            <summary>
            The unadjusted relative risk rate
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AnalyserResultDto.AdjustedRelativeRisk">
            <summary>
            The adjusted relative risk rate
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AnalyserResultDto.ConfidenceIntervalLow">
            <summary>
            Confidence interval lower limit
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AnalyserResultDto.ConfidenceIntervalHigh">
            <summary>
            Confidence interval upper limit
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.AnalyserTermDetailDto">
            <summary>
            A dto representing meddra terms available for analysis over an analysis period - WITH RESULTS
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AnalyserTermDetailDto.Results">
            <summary>
            A list of analysis results per medication for the associated term
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AnalyserTermDetailDto.RelativeRiskSeries">
            <summary>
            Unadjusted relative risk results ready for chart representation
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AnalyserTermDetailDto.ExposedCaseSeries">
            <summary>
            Exposed case results ready for chart representation
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.AnalyserTermIdentifierDto">
            <summary>
            A dto representing the meddra terms available for analysis over an analysis period
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AnalyserTermIdentifierDto.TerminologyMeddraId">
            <summary>
            The unique identifer for the term
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AnalyserTermIdentifierDto.MeddraTerm">
            <summary>
            The name of the term
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.AppointmentDetailDto">
            <summary>
            An appointment representation DTO - FULL DETAILS
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AppointmentDetailDto.Reason">
            <summary>
            The reason for the appointment
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AppointmentDetailDto.DidNotArrive">
            <summary>
            Has the appointment been marked as DNA
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AppointmentDetailDto.Cancelled">
            <summary>
            Has the appointment been marked as cancelled
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AppointmentDetailDto.CancellationReason">
            <summary>
            The reason for the cancellation
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AppointmentDetailDto.CreatedDetail">
            <summary>
            Details of the household creation
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AppointmentDetailDto.UpdatedDetail">
            <summary>
            Details of the last update to the household
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AppointmentForCreationDto.AppointmentDate">
            <summary>
            The date of the appointment
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AppointmentForCreationDto.Reason">
            <summary>
            The reason for the appointment
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AppointmentForUpdateDto.AppointmentDate">
            <summary>
            The date of the appointment
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AppointmentForUpdateDto.Reason">
            <summary>
            The reason for the appointment
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AppointmentForUpdateDto.Cancelled">
            <summary>
            Has the appointment been cancelled
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AppointmentForUpdateDto.CancellationReason">
            <summary>
            The reason for the cancellation if it has been cancelled
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.AppointmentIdentifierDto">
            <summary>
            An appointment representation DTO - IDENTIFIER ONLY
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AppointmentIdentifierDto.Id">
            <summary>
            The unique Id of the appointment
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AppointmentIdentifierDto.PatientId">
            <summary>
            The unique id of the patient
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AppointmentIdentifierDto.AppointmentDate">
            <summary>
            The date of the appointment
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.AppointmentSearchDto">
            <summary>
            An appointment representation DTO - ENCOUNTER SEARCH
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AppointmentSearchDto.Reason">
            <summary>
            The reason for the appointment
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AppointmentSearchDto.AppointmentStatus">
            <summary>
            The current status of the appointment
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AppointmentSearchDto.FirstName">
            <summary>
            The first name of the patient
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AppointmentSearchDto.LastName">
            <summary>
            The last name of the patient
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AppointmentSearchDto.CurrentFacility">
            <summary>
            The current facility of the patient
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AppointmentSearchDto.EncounterId">
            <summary>
            The unique id of the encounter if an encounter has been created
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.OutstandingVisitReportDto">
            <summary>
            A dto representing the output for an outstanding visit report
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.OutstandingVisitReportDto.PatientId">
            <summary>
            The unique identifier for the patient
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.OutstandingVisitReportDto.FirstName">
            <summary>
            The first name of the patient
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.OutstandingVisitReportDto.LastName">
            <summary>
            The last name of the patient
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.OutstandingVisitReportDto.Facility">
            <summary>
            The facility that made the appointment
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.OutstandingVisitReportDto.AppointmentDate">
            <summary>
            The date of the appointment
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ArchiveDto.Reason">
            <summary>
            The reason for archiving the resource
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.AttachmentDetailDto">
            <summary>
            An attachment representation DTO - FULL DETAILS
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AttachmentDetailDto.Description">
            <summary>
            A description of the attachment
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AttachmentDetailDto.AttachmentType">
            <summary>
            The type of the attachment
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AttachmentDetailDto.CreatedDetail">
            <summary>
            Details of the household creation
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AttachmentDetailDto.UpdatedDetail">
            <summary>
            Details of the last update to the household
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.AttachmentIdentifierDto">
            <summary>
            An attachment representation DTO - IDENTIFIER ONLY
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AttachmentIdentifierDto.Id">
            <summary>
            The unique Id of the attachment
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AttachmentIdentifierDto.FileName">
            <summary>
            The file name of the attachment
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.AttributeValueDto">
            <summary>
            A attribute value representation containing the custom attribute values that have been assigned to a household or member
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AttributeValueDto.Category">
            <summary>
            The category that the attribute key has been associated to
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AttributeValueDto.Key">
            <summary>
            The attribute key for the custom attribute
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AttributeValueDto.Value">
            <summary>
            The value of the attribute
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AttributeValueDto.SelectionValue">
            <summary>
            The value of the attribute
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.AuditLogDetailDto">
            <summary>
            An audit log representation DTO - FULL DETAILS
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AuditLogDetailDto.ActionDate">
            <summary>
            The date of the transaction
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AuditLogDetailDto.Details">
            <summary>
            The details of the transaction
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AuditLogDetailDto.UserFullName">
            <summary>
            The user who created the transaction
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AuditLogDetailDto.HasLog">
            <summary>
            is there a log file requiring download
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.AuditLogIdentifierDto">
            <summary>
            An audit log representation DTO - IDENTIFIER ONLY
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AuditLogIdentifierDto.Id">
            <summary>
            The unique Id of the audit log
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AuditLogIdentifierDto.AuditType">
            <summary>
            The type of audit transaction
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.CareEventForUpdateDto.CareEventName">
            <summary>
            The name of the care event
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.CareEventIdentifierDto">
            <summary>
            A care event representation DTO - IDENTIFIER ONLY
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.CareEventIdentifierDto.Id">
            <summary>
            The unique Id of the care event
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.CareEventIdentifierDto.CareEventName">
            <summary>
            The name of the care evebt
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.CohortGroupDetailDto">
            <summary>
            A cohort group representation DTO - FULL DETAILS
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.CohortGroupDetailDto.FinishDate">
            <summary>
            The finish date of the cohort
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.CohortGroupDetailDto.ConditionName">
            <summary>
            The condition that the cohort group has been created for
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.CohortGroupDetailDto.EnrolmentCount">
            <summary>
            The number of enrolments in this cohort
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.CohortGroupForUpdateDto.CohortName">
            <summary>
            The name of the cohort group
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.CohortGroupForUpdateDto.CohortCode">
            <summary>
            The code of the cohort group
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.CohortGroupForUpdateDto.StartDate">
            <summary>
            The start date of the cohort group
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.CohortGroupForUpdateDto.FinishDate">
            <summary>
            The end date of the cohort group
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.CohortGroupForUpdateDto.ConditionName">
            <summary>
            The primary condition
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.CohortGroupIdentifierDto">
            <summary>
            A cohort group representation DTO - IDENTIFIER ONLY
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.CohortGroupIdentifierDto.Id">
            <summary>
            The unique Id of the cohort group
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.CohortGroupIdentifierDto.CohortName">
            <summary>
            The name of the cohort
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.CohortGroupIdentifierDto.CohortCode">
            <summary>
            The code of the cohort
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.CohortGroupIdentifierDto.StartDate">
            <summary>
            The start date of the cohort
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.CohortGroupPatientDetailDto">
            <summary>
            A cohort group enrolment representation for a patient DTO
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.CohortGroupPatientDetailDto.Condition">
            <summary>
            The condition that links the patient to the condition group
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.CohortGroupPatientDetailDto.ConditionStartDate">
            <summary>
            The start date for the patient's condition in this cohort
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.CohortGroupPatientDetailDto.CohortGroupEnrolment">
            <summary>
            The corresponding enrolment record for this patient into this cohort
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DeenrolmentForUpdateDto.DeenroledDate">
            <summary>
            The date of the de-enrolment
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.EnrolmentDetailDto">
            <summary>
            A cohort group enrolment DTO
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.EnrolmentDetailDto.FullName">
            <summary>
            The full name of the patient
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.EnrolmentDetailDto.FacilityName">
            <summary>
            The current facility the patient is associated to
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.EnrolmentDetailDto.DateOfBirth">
            <summary>
            The date of birth of the patient
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.EnrolmentDetailDto.Age">
            <summary>
            The age of the patient
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.EnrolmentDetailDto.LatestEncounterDate">
            <summary>
            The latest encounter date of the patient
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.EnrolmentDetailDto.CurrentWeight">
            <summary>
            The current weight of the patient
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.EnrolmentDetailDto.NonSeriousEventCount">
            <summary>
            The number of non-serious events the patient has
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.EnrolmentDetailDto.SeriousEventCount">
            <summary>
            The number of serious events the patient has
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.EnrolmentForCreationDto.CohortGroupId">
            <summary>
            The unique id of the cohort group
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.EnrolmentForCreationDto.EnrolmentDate">
            <summary>
            The date of the enrolment
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.EnrolmentIdentifierDto">
            <summary>
            A cohort group enrolment DTO
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.EnrolmentIdentifierDto.Id">
            <summary>
            The unique Id of the cohort group enrolment
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.EnrolmentIdentifierDto.PatientId">
            <summary>
            The unique id of the patient
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.EnrolmentIdentifierDto.CohortGroupId">
            <summary>
            The unique id of the cohort group
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.EnrolmentIdentifierDto.EnroledDate">
            <summary>
            The date the patient was enrolled
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.EnrolmentIdentifierDto.DeenroledDate">
            <summary>
            The date the patient was de-enrolled
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.ConceptDetailDto">
            <summary>
            A concept representation DTO - FULL DETAILS
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ConceptDetailDto.FormName">
            <summary>
            The form of the concept
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ConceptForUpdateDto.ConceptName">
            <summary>
            The name of the concept
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ConceptForUpdateDto.MedicationForm">
            <summary>
            The form of the concept
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ConceptForUpdateDto.Active">
            <summary>
            Is this concept currently active
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.ConceptIdentifierDto">
            <summary>
            A concept representation DTO - IDENTIFIER ONLY
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ConceptIdentifierDto.Id">
            <summary>
            The unique Id of the concept
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ConceptIdentifierDto.ConceptName">
            <summary>
            The name of the concept
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ConceptIdentifierDto.DisplayName">
            <summary>
            Concept name and form
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ConceptIdentifierDto.Active">
            <summary>
            Is this concept currently active
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.MedicationFormIdentifierDto">
            <summary>
            A medication form representation DTO - IDENTIFIER ONLY
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MedicationFormIdentifierDto.Id">
            <summary>
            The unique Id of the medication form
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MedicationFormIdentifierDto.FormName">
            <summary>
            The name of the medication form
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.ProductDetailDto">
            <summary>
            A product representation DTO - FULL DETAILS
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ProductDetailDto.ConceptName">
            <summary>
            The concept the product has implemented
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ProductDetailDto.FormName">
            <summary>
            The form of the concept
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ProductDetailDto.Manufacturer">
            <summary>
            The manufacturer
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ProductForUpdateDto.ConceptName">
            <summary>
            The name of the concept
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ProductForUpdateDto.MedicationForm">
            <summary>
            The form of the concept
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ProductForUpdateDto.ProductName">
            <summary>
            The name of the product
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ProductForUpdateDto.Manufacturer">
            <summary>
            The name of the manufacturer
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ProductForUpdateDto.Description">
            <summary>
            A general description of the product
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ProductForUpdateDto.Active">
            <summary>
            Is this product currently active
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.ProductIdentifierDto">
            <summary>
            A product representation DTO - IDENTIFIER ONLY
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ProductIdentifierDto.Id">
            <summary>
            The unique Id of the product
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ProductIdentifierDto.ProductName">
            <summary>
            The name of the product
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ProductIdentifierDto.DisplayName">
            <summary>
            Product name and concept combined
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ProductIdentifierDto.Active">
            <summary>
            Is this product currently active
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ConditionDetailDto.Chronic">
            <summary>
            Is this a chronic condition
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ConditionDetailDto.ConditionLabTests">
            <summary>
            A list of lab tests associated to the condition group
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ConditionDetailDto.ConditionMedDras">
            <summary>
            A list of MedDRA terms associated to the condition group
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ConditionDetailDto.ConditionMedications">
            <summary>
            A list of medications associated to the condition group
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ConditionDetailDto.CohortGroups">
            <summary>
            A list of cohort groups associated to the condition group
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ConditionForUpdateDto.ConditionName">
            <summary>
            The name of the condition group
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ConditionForUpdateDto.Chronic">
            <summary>
            Is the condition group for a chronic condition
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ConditionForUpdateDto.Active">
            <summary>
            Is the condition group active
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ConditionForUpdateDto.ConditionLabTests">
            <summary>
            List of lab tests unique identifiers
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ConditionForUpdateDto.ConditionMedDras">
            <summary>
            List of meddra unique identifiers
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ConditionForUpdateDto.ConditionMedications">
            <summary>
            List of product identifiers
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.ConditionIdentifierDto">
            <summary>
            A condition representation DTO - IDENTIFIER ONLY
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ConditionIdentifierDto.Id">
            <summary>
            The unique Id of the condition
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ConditionIdentifierDto.ConditionName">
            <summary>
            The name of the condition
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ConditionIdentifierDto.Active">
            <summary>
            Is this condition currently active
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.ConditionLabTestDto">
            <summary>
            A representation of the list of lab tests associated to a condition group
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ConditionLabTestDto.Id">
            <summary>
            The unique id of the condition lab test
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ConditionLabTestDto.LabTestId">
            <summary>
            The unique id of the lab test
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ConditionLabTestDto.LabTestName">
            <summary>
            The name of the lab test
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.ConditionMeddraDto">
            <summary>
            A representation of the list of MedDRA terms associated to a condition group
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ConditionMeddraDto.Id">
            <summary>
            The unique id of the condition meddra term
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ConditionMeddraDto.TerminologyMedDraId">
            <summary>
            The unique id of the meddra term
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ConditionMeddraDto.MedDraTerm">
            <summary>
            The name of the meddra term
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.ConditionMedicationDto">
            <summary>
            A representation of the list of medications associated to a condition group
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ConditionMedicationDto.Id">
            <summary>
            The unique id of the condition medication
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ConditionMedicationDto.ProductId">
            <summary>
            The unique id of the product id
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ConditionMedicationDto.MedicationName">
            <summary>
            The name of the medication
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.ConfigDetailDto">
            <summary>
            A configuration representation DTO - FULL DETAILS
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ConfigDetailDto.CreatedDetail">
            <summary>
            Details of the household creation
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ConfigDetailDto.UpdatedDetail">
            <summary>
            Details of the last update to the household
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ConfigForUpdateDto.ConfigValue">
            <summary>
            The value of the configuration
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.ConfigIdentifierDto">
            <summary>
            A configuration representation DTO - IDENTIFIER ONLY
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ConfigIdentifierDto.Id">
            <summary>
            The unique Id of the configuration
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ConfigIdentifierDto.ConfigType">
            <summary>
            The type of configuration
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ConfigIdentifierDto.ConfigValue">
            <summary>
            The value of the configuration
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.ContactDetailDto">
            <summary>
            A contact detail representation DTO - FULL DETAILS
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ContactDetailDto.OrganisationName">
            <summary>
            The name of the organisation
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ContactDetailDto.StreetAddress">
            <summary>
            The street address of the organisation
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ContactDetailDto.City">
            <summary>
            The city the organisation is located in
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ContactDetailDto.State">
            <summary>
            The state the organisation is located in
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ContactDetailDto.PostCode">
            <summary>
            The post code the organisation is located in
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ContactDetailDto.ContactNumber">
            <summary>
            The contact number of the organisation
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ContactDetailDto.ContactEmail">
            <summary>
            The email address of the organisation
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ContactDetailDto.CountryCode">
            <summary>
            The country code the organisation is located in
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ContactForUpdateDto.ContactFirstName">
            <summary>
            The first name of the contact at the organisation
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ContactForUpdateDto.ContactLastName">
            <summary>
            The last name of the contact at the organisation
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ContactForUpdateDto.OrganisationName">
            <summary>
            The name of the organisation
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ContactForUpdateDto.StreetAddress">
            <summary>
            The street address of the organisation
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ContactForUpdateDto.City">
            <summary>
            The city the organisation is located in
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ContactForUpdateDto.State">
            <summary>
            The state the organisation is located in
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ContactForUpdateDto.PostCode">
            <summary>
            The post code the organisation is located in
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ContactForUpdateDto.ContactNumber">
            <summary>
            The contact number of the organisation
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ContactForUpdateDto.ContactEmail">
            <summary>
            The email address of the organisation
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ContactForUpdateDto.CountryCode">
            <summary>
            The country code the organisation is located in
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.ContactIdentifierDto">
            <summary>
            A contact detail representation DTO - IDENTIFIER ONLY
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ContactIdentifierDto.Id">
            <summary>
            The unique Id of the contact detail
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ContactIdentifierDto.ContactType">
            <summary>
            The type of contact detail
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ContactIdentifierDto.ContactFirstName">
            <summary>
            The first name of the contact at the organisation
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ContactIdentifierDto.ContactLastName">
            <summary>
            The last name of the contact at the organisation
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.CustomAttributeDetailDto">
            <summary>
            A custom attribute representation DTO - FULL DETAILS
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.CustomAttributeDetailDto.Category">
            <summary>
            The category that the custom attribute belongs to
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.CustomAttributeDetailDto.CustomAttributeType">
            <summary>
            The type of attribute  
            Valid options are string, selection, DateTime, Numeric
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.CustomAttributeDetailDto.Required">
            <summary>
            Is this attribute mandatory
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.CustomAttributeDetailDto.Archived">
            <summary>
            Is this attribute archived
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.CustomAttributeDetailDto.StringMaxLength">
            <summary>
            Maximum string length for string based attributes
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.CustomAttributeDetailDto.NumericMinValue">
            <summary>
            Minimum value in a min max range for numeric based attributes
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.CustomAttributeDetailDto.NumericMaxValue">
            <summary>
            Maximum value in a min max range for numeric based attributes
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.CustomAttributeDetailDto.IsSearchable">
            <summary>
            Is this attribute searchable
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.CustomAttributeDetailDto.SelectionDataItems">
            <summary>
            A list of selection values associated to the attribute (if applicable)
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.CustomAttributeIdentifierDto">
            <summary>
            A custom attribute representation DTO - IDENTIFIER ONLY
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.CustomAttributeIdentifierDto.Id">
            <summary>
            The unique Id of the custom attribute
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.CustomAttributeIdentifierDto.ExtendableTypeName">
            <summary>
            The extendable type name of the custom attribute (attribute owner)
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.CustomAttributeIdentifierDto.AttributeKey">
            <summary>
            The unique name of the custom attribute
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.SelectionDataItemDto">
            <summary>
            A selection data item representation containing a possible set of values associated to a selection  
            custom attribute type
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.SelectionDataItemDto.SelectionKey">
            <summary>
            The key for the selection value
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.SelectionDataItemDto.Value">
            <summary>
            The selection value associated to the key
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetInstanceDto.DatasetId">
            <summary>
            Dataset id
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetInstanceDto.DatasetInstanceId">
            <summary>
            Dataset instance id
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.DatasetCategoryDetailDto">
            <summary>
            A dataset category representation DTO - FULL DETAILS
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetCategoryDetailDto.CategoryOrder">
            <summary>
            The order of the category in relation to the dataset
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetCategoryDetailDto.System">
            <summary>
            Is this a system defined category
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetCategoryDetailDto.Acute">
            <summary>
            Is this a category used for acute data collection
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetCategoryDetailDto.Chronic">
            <summary>
            Is this a category used for chronic data collection
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetCategoryDetailDto.ElementCount">
            <summary>
            Number of elements within this category
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetCategoryDetailDto.FriendlyName">
            <summary>
            The friendly name of the dataset category
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetCategoryDetailDto.Help">
            <summary>
            Additional help for the dataset category
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.DatasetCategoryElementDetailDto">
            <summary>
            A dataset category element representation DTO - FULL DETAILS
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetCategoryElementDetailDto.FieldOrder">
            <summary>
            The order of the field in relation to the category
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetCategoryElementDetailDto.System">
            <summary>
            Is this a system defined element
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetCategoryElementDetailDto.Acute">
            <summary>
            Is this element used for acute data collection
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetCategoryElementDetailDto.Chronic">
            <summary>
            Is this element used for chronic data collection
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetCategoryElementDetailDto.FriendlyName">
            <summary>
            The friendly name of the dataset category element
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetCategoryElementDetailDto.Help">
            <summary>
            Additional help for the dataset category element
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetCategoryElementForUpdateDto.DatasetElementId">
            <summary>
            The unique identifier of the element being linked
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetCategoryElementForUpdateDto.FriendlyName">
            <summary>
            The friendly name of the dataset category
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetCategoryElementForUpdateDto.Help">
            <summary>
            Additional help for the dataset category
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetCategoryElementForUpdateDto.Acute">
            <summary>
            Is this a category used for acute data collection
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetCategoryElementForUpdateDto.Chronic">
            <summary>
            Is this a category used for chronic data collection
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.DatasetCategoryElementIdentifierDto">
            <summary>
            A dataset category element representation DTO - IDENTIFIER ONLY
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetCategoryElementIdentifierDto.Id">
            <summary>
            The unique Id of the dataset category element
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetCategoryElementIdentifierDto.DatasetElementId">
            <summary>
            The dataset element unique identifier
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetCategoryElementIdentifierDto.ElementName">
            <summary>
            The name of the dataset element
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetCategoryForUpdateDto.DatasetCategoryName">
            <summary>
            The name of the dataset category
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetCategoryForUpdateDto.FriendlyName">
            <summary>
            The friendly name of the dataset category
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetCategoryForUpdateDto.Help">
            <summary>
            Additional help for the dataset category
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetCategoryForUpdateDto.Acute">
            <summary>
            Is this a category used for acute data collection
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetCategoryForUpdateDto.Chronic">
            <summary>
            Is this a category used for chronic data collection
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.DatasetCategoryIdentifierDto">
            <summary>
            A dataset category representation DTO - IDENTIFIER ONLY
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetCategoryIdentifierDto.Id">
            <summary>
            The unique Id of the dataset category
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetCategoryIdentifierDto.DatasetCategoryName">
            <summary>
            The name of the dataset category
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.DatasetCategoryViewDto">
            <summary>
            List of dataset categories associated to a dataset instance
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetCategoryViewDto.DatasetCategoryId">
            <summary>
            The unique id of the dataset category
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetCategoryViewDto.DatasetCategoryName">
            <summary>
            The name of the dataset category
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetCategoryViewDto.DatasetCategoryDisplayName">
            <summary>
            The friendly name of the dataset category
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetCategoryViewDto.DatasetCategoryHelp">
            <summary>
            Additional help for the dataset category
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetCategoryViewDto.DatasetCategoryDisplayed">
            <summary>
            Should the category be displayed
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetCategoryViewDto.DatasetElements">
            <summary>
            List of dataset elements and value associated to this category
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.DatasetDetailDto">
            <summary>
            A dataset representation DTO - FULL DETAILS
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetDetailDto.Active">
            <summary>
            Is this dataset active
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetDetailDto.System">
            <summary>
            Is this a system defined dataset
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetDetailDto.Help">
            <summary>
            A detailed definition of the dataset
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetDetailDto.CreatedDetail">
            <summary>
            Details of the household creation
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetDetailDto.UpdatedDetail">
            <summary>
            Details of the last update to the household
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetDetailDto.ContextType">
            <summary>
            The contextual entity that the dataset is associated to
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.DatasetElementDetailDto">
            <summary>
            A dataset element representation DTO - FULL DETAILS
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetElementDetailDto.OID">
            <summary>
            E2B OID
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetElementDetailDto.DefaultValue">
            <summary>
            The default value for the element
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetElementDetailDto.System">
            <summary>
            Is this a system defined element
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetElementDetailDto.Mandatory">
            <summary>
            Is this element mandatory
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetElementDetailDto.MaxLength">
            <summary>
            For string based elements, what is the maximum length of this element
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetElementDetailDto.RegEx">
            <summary>
            For string based elements, apply the following regular expression to this element
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetElementDetailDto.Decimals">
            <summary>
            For numeric based elements, how many decimals should be allowed
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetElementDetailDto.MaxSize">
            <summary>
            For numeric based elements, the upper range for the element
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetElementDetailDto.MinSize">
            <summary>
            For numeric based elements, the lower range for the element
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetElementDetailDto.Calculation">
            <summary>
            Generate a calculated value for this element
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetElementDetailDto.Anonymise">
            <summary>
            Should this element be anonymised in any form of data extraction
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.DatasetElementExpandedDto">
            <summary>
            A dataset element representation DTO - FULL DETAILS
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetElementExpandedDto.SingleDatasetRule">
            <summary>
            E2B OID
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetElementForUpdateDto.ElementName">
            <summary>
            The name of the dataset element
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetElementForUpdateDto.OID">
            <summary>
            The E2B OID for the element
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetElementForUpdateDto.DefaultValue">
            <summary>
            The default value for the element
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetElementForUpdateDto.Mandatory">
            <summary>
            The type of field the element is implementing
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetElementForUpdateDto.Anonymise">
            <summary>
            The type of field the element is implementing
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetElementForUpdateDto.System">
            <summary>
            Is this a system defined variable
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetElementForUpdateDto.SingleDatasetRule">
            <summary>
            Single dataset rule
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetElementForUpdateDto.FieldTypeName">
            <summary>
            The type of field the element is implementing
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetElementForUpdateDto.MaxLength">
            <summary>
            For string based elements, what is the maximum length of this element
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetElementForUpdateDto.Decimals">
            <summary>
            For numeric based elements, how many decimals should be allowed
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetElementForUpdateDto.MaxSize">
            <summary>
            For numeric based elements, the upper range for the element
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetElementForUpdateDto.MinSize">
            <summary>
            For numeric based elements, the lower range for the element
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.DatasetElementIdentifierDto">
            <summary>
            A dataset element representation DTO - IDENTIFIER ONLY
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetElementIdentifierDto.Id">
            <summary>
            The unique Id of the dataset element
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetElementIdentifierDto.DatasetElementGuid">
            <summary>
            The globally unique identifier for the dataset element
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetElementIdentifierDto.ElementName">
            <summary>
            The name of the dataset element
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetElementIdentifierDto.FieldTypeName">
            <summary>
            The type of field
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.DatasetElementSubViewDto">
            <summary>
            List of dataset elements associated to a dataset category
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetElementSubViewDto.DatasetElementSubId">
            <summary>
            The unique id of the dataset sub element
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetElementSubViewDto.DatasetElementSubName">
            <summary>
            The name of the dataset sub element
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetElementSubViewDto.DatasetElementSubDisplayName">
            <summary>
            The name of the dataset sub element as it should be displayed
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetElementSubViewDto.DatasetElementSubHelp">
            <summary>
            Additional help text that is associated to the element sub
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetElementSubViewDto.DatasetElementSubType">
            <summary>
            The type of sub element
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetElementSubViewDto.DatasetElementSubSystem">
            <summary>
            Is this a system sub element
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetElementSubViewDto.Required">
            <summary>
            Is this sub element mandatory
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetElementSubViewDto.StringMaxLength">
            <summary>
            Maximum string length for string based attributes
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetElementSubViewDto.NumericMinValue">
            <summary>
            Minimum value in a min max range for numeric based elements
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetElementSubViewDto.NumericMaxValue">
            <summary>
            Maximum value in a min max range for numeric based elements
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetElementSubViewDto.SelectionDataItems">
            <summary>
            A list of selection values associated to the attribute (if applicable)
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.DatasetElementViewDto">
            <summary>
            List of dataset elements associated to a dataset category
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetElementViewDto.DatasetElementId">
            <summary>
            The unique id of the dataset element
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetElementViewDto.DatasetElementName">
            <summary>
            The name of the dataset element
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetElementViewDto.DatasetElementDisplayName">
            <summary>
            The name of the dataset element as it should be displayed
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetElementViewDto.DatasetElementHelp">
            <summary>
            Additional help text that is associated to the element
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetElementViewDto.DatasetElementType">
            <summary>
            The type of element
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetElementViewDto.DatasetElementValue">
            <summary>
            Current value of the element
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetElementViewDto.DatasetElementDisplayed">
            <summary>
            Should the element be displayed
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetElementViewDto.DatasetElementChronic">
            <summary>
            Is this a chronic element
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetElementViewDto.DatasetElementSystem">
            <summary>
            Is this a system element
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetElementViewDto.Required">
            <summary>
            Is this element mandatory
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetElementViewDto.StringMaxLength">
            <summary>
            Maximum string length for string based attributes
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetElementViewDto.NumericMinValue">
            <summary>
            Minimum value in a min max range for numeric based elements
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetElementViewDto.NumericMaxValue">
            <summary>
            Maximum value in a min max range for numeric based elements
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetElementViewDto.DatasetElementSubs">
            <summary>
            List of dataset sub elements
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetElementViewDto.SelectionDataItems">
            <summary>
            A list of selection values associated to the attribute (if applicable)
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.DatasetForSpontaneousDto">
            <summary>
            A spontaneous dataset representation DTO
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetForSpontaneousDto.DatasetCategories">
            <summary>
            Dataset categories linked through it's instance
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetForUpdateDto.DatasetName">
            <summary>
            The name of the dataset
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetForUpdateDto.Help">
            <summary>
            A detailed definition of the dataset
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.DatasetIdentifierDto">
            <summary>
            A dataset representation DTO - IDENTIFIER ONLY
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetIdentifierDto.Id">
            <summary>
            The unique Id of the dataset
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetIdentifierDto.DatasetName">
            <summary>
            The name of the dataset
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.DatasetInstanceDetailDto">
            <summary>
            A dataset instance representation DTO - FULL DETAILS
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetInstanceDetailDto.CreatedDetail">
            <summary>
            Details of the encounter creation
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetInstanceDetailDto.UpdatedDetail">
            <summary>
            Details of the last update to the encounter
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetInstanceDetailDto.DatasetCategories">
            <summary>
            Dataset categories linked through it's instance
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.DatasetInstanceIdentifierDto">
            <summary>
            A dataset instance representation DTO - IDENTIFIER ONLY
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetInstanceIdentifierDto.Id">
            <summary>
            The unique Id of the dataset instance
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.DatasetInstanceIdentifierDto.DatasetInstanceGuid">
            <summary>
            The uniqe identifier for the dataset instance
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.GroupValueDto">
            <summary>
            List of dataset categories associated to a dataset instance
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.GroupValueDto.GroupValue">
            <summary>
            The value of the dataset element being grouped
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.GroupValueDto.Count">
            <summary>
            The number of records grouped
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.EncounterDetailDto">
            <summary>
            An encounter representation DTO - FULL DETAILS
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.EncounterDetailDto.Notes">
            <summary>
            Any additional notes for the encounter
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.EncounterDetailDto.EncounterType">
            <summary>
            The type of the encounter
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.EncounterDetailDto.CreatedDetail">
            <summary>
            Details of the encounter creation
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.EncounterDetailDto.UpdatedDetail">
            <summary>
            Details of the last update to the encounter
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.EncounterDetailDto.Patient">
            <summary>
            The patient that the encounter has been associated to
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.EncounterDetailDto.DatasetCategories">
            <summary>
            Dataset categories linked to the encounter through it's instance
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.EncounterExpandedDto">
            <summary>
            An encounter representation DTO - EXPANDED DETAILS
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.EncounterExpandedDto.PatientConditions">
            <summary>
            List of conditions associated to the patient
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.EncounterExpandedDto.PatientClinicalEvents">
            <summary>
            List of clinical events associated to the patient
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.EncounterExpandedDto.PatientMedications">
            <summary>
            List of medications associated to the patient
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.EncounterExpandedDto.PatientLabTests">
            <summary>
            List of lab tests associated to the patient
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.EncounterExpandedDto.ConditionGroups">
            <summary>
            List of condition groups the patient belongs to
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.EncounterExpandedDto.WeightSeries">
            <summary>
            Patient weight history
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.EncounterForCreationDto.EncounterTypeId">
            <summary>
            The type of encounter
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.EncounterForCreationDto.PriorityId">
            <summary>
            The priority of the encounter
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.EncounterForCreationDto.EncounterDate">
            <summary>
            The date of the encounter
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.EncounterForCreationDto.Notes">
            <summary>
            General notes assigned to the encounter
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.EncounterForUpdateDto.Notes">
            <summary>
            Generic patient notes
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.EncounterForUpdateDto.Elements">
            <summary>
            Encounter elements and associated values
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.EncounterIdentifierDto">
            <summary>
            Am encounter representation DTO - IDENTIFIER ONLY
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.EncounterIdentifierDto.Id">
            <summary>
            The unique Id of the encounter
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.EncounterIdentifierDto.PatientId">
            <summary>
            The unique id od the patient
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.EncounterIdentifierDto.EncounterGuid">
            <summary>
            The globally unique identifier for the encounter
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.EncounterIdentifierDto.EncounterDate">
            <summary>
            The date of the encounter
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.EncounterTypeDetailDto">
            <summary>
            An encounter type representation DTO - FULL DETAILS
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.EncounterTypeDetailDto.WorkPlanName">
            <summary>
            The name of the work plan
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.EncounterTypeDetailDto.Help">
            <summary>
            A detailed definition of the encounter type
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.EncounterTypeForUpdateDto.EncounterTypeName">
            <summary>
            The name of the encounter type
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.EncounterTypeForUpdateDto.Help">
            <summary>
            A detailed definition of the encounter type
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.EncounterTypeForUpdateDto.WorkPlanName">
            <summary>
            The name of the work plan
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.EncounterTypeIdentifierDto">
            <summary>
            An encounter type representation DTO - IDENTIFIER ONLY
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.EncounterTypeIdentifierDto.Id">
            <summary>
            The unique Id of the encounter type
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.EncounterTypeIdentifierDto.EncounterTypeName">
            <summary>
            The name of the dataset
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.PriorityIdentifierDto">
            <summary>
            A priority representation DTO - IDENTIFIER ONLY
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PriorityIdentifierDto.Id">
            <summary>
            The unique Id of the priority
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PriorityIdentifierDto.PriorityName">
            <summary>
            The name of the priority
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.FacilityDetailDto">
            <summary>
            A facility representation DTO - FULL DETAILS
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.FacilityDetailDto.FacilityCode">
            <summary>
            The unique code of the facility
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.FacilityDetailDto.FacilityType">
            <summary>
            The type of facility
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.FacilityDetailDto.ContactNumber">
            <summary>
            The contact number for the facility
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.FacilityDetailDto.MobileNumber">
            <summary>
            The mobile number for the facility
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.FacilityDetailDto.FaxNumber">
            <summary>
            The fax number for the facility
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.FacilityForUpdateDto.FacilityName">
            <summary>
            The name of the facility
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.FacilityForUpdateDto.FacilityCode">
            <summary>
            The code of the facility
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.FacilityForUpdateDto.FacilityType">
            <summary>
            The type of the facility
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.FacilityForUpdateDto.ContactNumber">
            <summary>
            The telephone number
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.FacilityForUpdateDto.MobileNumber">
            <summary>
            The mobile number
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.FacilityForUpdateDto.FaxNumber">
            <summary>
            The fax number for the facility
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.FacilityIdentifierDto">
            <summary>
            A facility representation DTO - IDENTIFIER ONLY
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.FacilityIdentifierDto.Id">
            <summary>
            The unique Id of the facility
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.FacilityIdentifierDto.FacilityName">
            <summary>
            The name of the facility
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.FacilityTypeIdentifierDto">
            <summary>
            A facility type representation DTO - IDENTIFIER ONLY
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.FacilityTypeIdentifierDto.Id">
            <summary>
            The unique Id of the facility type
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.FacilityTypeIdentifierDto.TypeName">
            <summary>
            The typer of the facility
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.HolidayForUpdateDto.HolidayDate">
            <summary>
            The date of the holiday
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.HolidayForUpdateDto.Description">
            <summary>
            The description of the holiday
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.HolidayIdentifierDto">
            <summary>
            A holiday representation DTO - IDENTIFIER ONLY
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.HolidayIdentifierDto.Id">
            <summary>
            The unique Id of the holiday
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.HolidayIdentifierDto.HolidayDate">
            <summary>
            The date of the holiday
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.HolidayIdentifierDto.Description">
            <summary>
            The description of the holiday
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.LabResultForUpdateDto.LabResultName">
            <summary>
            The name of the lab result
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.LabResultForUpdateDto.Active">
            <summary>
            Is the lab result active
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.LabResultIdentifierDto">
            <summary>
            A lab result representation DTO - IDENTIFIER ONLY
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.LabResultIdentifierDto.Id">
            <summary>
            The unique Id of the lab test
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.LabResultIdentifierDto.LabResultName">
            <summary>
            The name of the lab result
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.LabResultIdentifierDto.Active">
            <summary>
            Is this lab result currently active
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.LabTestForUpdateDto.LabTestName">
            <summary>
            The name of the lab test
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.LabTestForUpdateDto.Active">
            <summary>
            Is the lab test active
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.LabTestIdentifierDto">
            <summary>
            A lab test representation DTO - IDENTIFIER ONLY
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.LabTestIdentifierDto.Id">
            <summary>
            The unique Id of the lab test
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.LabTestIdentifierDto.LabTestName">
            <summary>
            The name of the lab test
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.LabTestIdentifierDto.Active">
            <summary>
            Is this lab test currently active
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.LinkDto.Href">
            <summary>
            The URI that will need to be referenced to invoke the RESTful API
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.LinkDto.Rel">
            <summary>
            The relative name that uniquely identifies the action to the consumer
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.LinkDto.Method">
            <summary>
            The HTTP verb that will be invoked through this action
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.MetaForm.CategoryDto">
            <summary>
            A meta form category representation containing a list of categories available in a form
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaForm.CategoryDto.CategoryName">
            <summary>
            The name of the category
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaForm.CategoryDto.DisplayType">
            <summary>
            The display type of the category
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaForm.CategoryDto.Elements">
            <summary>
            A list of elements that have been associated to this category
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.MetaForm.ContextDefinitionDto">
            <summary>
            The definition of the element
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaForm.ContextDefinitionDto.ElementType">
            <summary>
            The type of element  
            Valid options are string, selection, dateTime, numeric, table
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaForm.ContextDefinitionDto.Required">
            <summary>
            Is this element mandatory
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaForm.ContextDefinitionDto.SelectionContext">
            <summary>
            Selection context for selection element type
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.MetaForm.ElementDto">
            <summary>
            A meta form element representation containing a list of elements available in a form category
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaForm.ElementDto.ContextType">
            <summary>
            Type the element is associated to
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaForm.ElementDto.ElementName">
            <summary>
            The display name for the element
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaForm.ElementDto.ContextDefinition">
            <summary>
            COntextual definition of the element
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.MetaForm.SelectionContextDto">
            <summary>
            The definition of the element
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaForm.SelectionContextDto.SelectionDataItems">
            <summary>
            A list of selection values associated to the attribute (if applicable)
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaForm.SelectionContextDto.UseService">
            <summary>
            Use a service to collect the data
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaForm.SelectionContextDto.ServiceDefinition">
            <summary>
            The service to be used to populate selection values
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.FormForCreationDto.FormIdentifier">
            <summary>
            The unique identifier of the form
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.FormForCreationDto.PatientIdentifier">
            <summary>
            The unique identifier of the patient
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.FormForCreationDto.FormType">
            <summary>
            The type of form that is being submitted
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.FormForCreationDto.Attachment">
            <summary>
            Binary form of the first form attachment
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.FormForCreationDto.Attachment_2">
            <summary>
            Binary form of the second form attachment
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.FormForCreationDto.FormValues">
            <summary>
            Details of the form that have been submitted
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.MetaFormDetailDto">
            <summary>
            A meta form representation DTO - FULL DETAILS
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaFormDetailDto.System">
            <summary>
            Is this a system form
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaFormDetailDto.Version">
            <summary>
            Current version number of the form
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaFormDetailDto.Categories">
            <summary>
            A list of selection values associated to the attribute (if applicable)
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.MetaFormIdentifierDto">
            <summary>
            A meta form representation DTO - IDENTIFIER ONLY
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaFormIdentifierDto.Id">
            <summary>
            The unique Id of the meta form
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaFormIdentifierDto.FormName">
            <summary>
            The name of the meta form
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaFormIdentifierDto.ActionName">
            <summary>
            The action (shortened) name of the meta form
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaFormIdentifierDto.MetaFormGuid">
            <summary>
            The globally unique identifier for the meta form
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.SpontaneousFormForCreationDto.FormValues">
            <summary>
            Details of the form that have been submitted
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.MetaPageDetailDto">
            <summary>
            A meta page representation DTO - FULL DETAILS
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaPageDetailDto.PageDefinition">
            <summary>
            The definition of the page
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaPageDetailDto.MetaDefinition">
            <summary>
            The meta definition of the page
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaPageDetailDto.Breadcrumb">
            <summary>
            The page breadcrumb
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaPageDetailDto.System">
            <summary>
            Is this a system page
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaPageDetailDto.Visible">
            <summary>
            Is this page visible
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.MetaPageExpandedDto">
            <summary>
            A meta page representation DTO - FULL DETAILS
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaPageExpandedDto.UnpublishedWidgets">
            <summary>
            A list of widgets associated to the page that are not published
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaPageExpandedDto.Widgets">
            <summary>
            A list of widgets associated to the page
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaPageForUpdateDto.PageName">
            <summary>
            The name of the meta page
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaPageForUpdateDto.PageDefinition">
            <summary>
            What the purpose of the page is
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaPageForUpdateDto.MetaDefinition">
            <summary>
            Page configuration details. Currently not in use
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaPageForUpdateDto.Breadcrumb">
            <summary>
            Page breadcrumb. Currently not in use
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaPageForUpdateDto.Visible">
            <summary>
            Is this page visible to the menu
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.MetaPageIdentifierDto">
            <summary>
            A meta page representation DTO - IDENTIFIER ONLY
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaPageIdentifierDto.Id">
            <summary>
            The unique Id of the meta page
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaPageIdentifierDto.MetaPageGuid">
            <summary>
            The globally unique identifier for the meta page
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaPageIdentifierDto.PageName">
            <summary>
            The name of the meta page
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.MetaWidgetDetailDto">
            <summary>
            A meta widget representation DTO - FULL DETAILS
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaWidgetDetailDto.WidgetDefinition">
            <summary>
            The definition of the widget
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaWidgetDetailDto.Content">
            <summary>
            Widget content
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaWidgetDetailDto.WidgetType">
            <summary>
            The type of widget
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaWidgetDetailDto.WidgetLocation">
            <summary>
            The location of the widget
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaWidgetDetailDto.WidgetStatus">
            <summary>
            The status of the widget
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaWidgetDetailDto.Icon">
            <summary>
            Widget icon
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaWidgetDetailDto.ContentItems">
            <summary>
            A list of widgets associated to the page
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaWidgetForCreationDto.WidgetName">
            <summary>
            The name of the meta widget
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaWidgetForCreationDto.WidgetType">
            <summary>
            The type of widget that is being created
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaWidgetForCreationDto.WidgetDefinition">
            <summary>
            What the purpose of the widget is
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaWidgetForCreationDto.Icon">
            <summary>
            The icon that is associated to the widget
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaWidgetForMoveDto.DestinationMetaPageId">
            <summary>
            The unique identifier of the destination meta page
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaWidgetForUpdateDto.WidgetName">
            <summary>
            The name of the meta widget
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaWidgetForUpdateDto.WidgetDefinition">
            <summary>
            What the purpose of the widget is
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaWidgetForUpdateDto.Icon">
            <summary>
            The icon that is associated to the widget
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaWidgetForUpdateDto.WidgetLocation">
            <summary>
            The location of the widget
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaWidgetForUpdateDto.WidgetStatus">
            <summary>
            The status of the widget
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaWidgetForUpdateDto.GeneralContent">
            <summary>
            Text associated to the general widget type
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaWidgetForUpdateDto.SubItems">
            <summary>
            Sub item content for the sub item widget type
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaWidgetForUpdateDto.ListItems">
            <summary>
            Sub item content for the sub item widget type
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.MetaWidgetIdentifierDto">
            <summary>
            A meta widget representation DTO - IDENTIFIER ONLY
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaWidgetIdentifierDto.Id">
            <summary>
            The unique Id of the meta widget
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaWidgetIdentifierDto.MetaWidgetGuid">
            <summary>
            The globally unique identifier for the meta widget
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaWidgetIdentifierDto.WidgetName">
            <summary>
            The name of the meta widget
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.WidgetistItemDto">
            <summary>
            A representation of a widget list item content
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.WidgetistItemDto.Title">
            <summary>
            The title of the widget
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.WidgetistItemDto.SubTitle">
            <summary>
            The sub-title of the widget
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.WidgetistItemDto.ContentPage">
            <summary>
            The page the widget should point to
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.WidgetistItemDto.Content">
            <summary>
            Widget content
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.WidgetistItemDto.Modified">
            <summary>
            Widget modified date
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.WidgetListItemForUpdateDto">
            <summary>
            A representation of a widget list item content
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.WidgetListItemForUpdateDto.Title">
            <summary>
            The title of the widget
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.WidgetListItemForUpdateDto.Content">
            <summary>
            Widget content
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.WidgetSubItemForUpdateDto">
            <summary>
            A representation of a widget sub item content
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.WidgetSubItemForUpdateDto.Title">
            <summary>
            The title of the widget
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.WidgetSubItemForUpdateDto.SubTitle">
            <summary>
            The sub-title of the widget
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.WidgetSubItemForUpdateDto.ContentPage">
            <summary>
            The page the widget should point to
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.MetaAttributeDto">
            <summary>
            A meta attribute representation DTO
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaAttributeDto.Index">
            <summary>
            The order of the attribute
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaAttributeDto.AttributeName">
            <summary>
            The unique attribute name
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaAttributeDto.Aggregate">
            <summary>
            Stratification aggregator applied to this column
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaAttributeDto.DisplayName">
            <summary>
            The attribute display name
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.MetaColumnDetailDto">
            <summary>
            A meta column representation DTO - FULL DETAILS
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaColumnDetailDto.TableName">
            <summary>
            The name of the column
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaColumnDetailDto.ColumnName">
            <summary>
            The name of the column
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaColumnDetailDto.IsIdentity">
            <summary>
            Is this an identity column
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaColumnDetailDto.IsNullable">
            <summary>
            Is this column nullable
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaColumnDetailDto.ColumnType">
            <summary>
            The type of the column
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaColumnDetailDto.Range">
            <summary>
            Column range of values
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.MetaColumnExpandedDto">
            <summary>
            A meta column representation DTO - EXPANDED
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaColumnExpandedDto.Operators">
            <summary>
            The operators that are applicable to the attribute type
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.MetaColumnIdentifierDto">
            <summary>
            A meta column representation DTO - IDENTIFIER ONLY
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaColumnIdentifierDto.Id">
            <summary>
            The unique Id of the meta column
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaColumnIdentifierDto.MetaColumnGuid">
            <summary>
            The globally unique identifier for the meta column
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.MetaDependencyDetailDto">
            <summary>
            A meta dependency representation DTO - FULL DETAILS
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaDependencyDetailDto.ParentColumnName">
            <summary>
            The name of the parent column
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaDependencyDetailDto.ReferenceColumnName">
            <summary>
            The name of the reference column
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaDependencyDetailDto.ParentTableName">
            <summary>
            The name of the parent table
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaDependencyDetailDto.ReferenceTableName">
            <summary>
            The name of the reference table
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.MetaDependencyIdentifierDto">
            <summary>
            A meta dependency representation DTO - IDENTIFIER ONLY
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaDependencyIdentifierDto.Id">
            <summary>
            The unique Id of the meta dependency
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaDependencyIdentifierDto.MetaDependencyGuid">
            <summary>
            The globally unique identifier for the meta dependency
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.MetaFilterDto">
            <summary>
            A meta filter representation DTO
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaFilterDto.Index">
            <summary>
            The order of the filter
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaFilterDto.AttributeName">
            <summary>
            The unique attribute name
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaFilterDto.ColumnType">
            <summary>
            The type of column being used for the filter
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaFilterDto.Operator">
            <summary>
            The operator used in the query
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaFilterDto.Relation">
            <summary>
            The relation of the filters
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.MetaOperatorDto">
            <summary>
            A meta operator representation DTO
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaOperatorDto.OperatorName">
            <summary>
            The name of the operator
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaOperatorDto.OperatorValue">
            <summary>
            The operator value
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.MetaReportDetailDto">
            <summary>
            A meta report representation DTO - FULL DETAILS
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaReportDetailDto.ReportDefinition">
            <summary>
            The definition of the report
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaReportDetailDto.MetaDefinition">
            <summary>
            The meta definition of the report
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaReportDetailDto.Breadcrumb">
            <summary>
            The page breadcrumb
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaReportDetailDto.System">
            <summary>
            Is this a system report
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaReportDetailDto.ReportStatus">
            <summary>
            Report status: Published or unpublished
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaReportDetailDto.ReportType">
            <summary>
            The type of report: List or summary
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaReportDetailDto.CoreEntity">
            <summary>
            The core entity for the report
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.MetaReportExpandedDto">
            <summary>
            A meta report representation DTO - EXPANDED
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaReportExpandedDto.CoreMetaTable">
            <summary>
            The associated core entity for the report
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaReportExpandedDto.Attributes">
            <summary>
            The attributes associated to the report
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaReportExpandedDto.Filters">
            <summary>
            The filters associated to the report
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaReportForAttributeUpdateDto.ReportType">
            <summary>
            Is the report a list or summary based report
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaReportForAttributeUpdateDto.CoreEntity">
            <summary>
            The core entity of the report
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaReportForAttributeUpdateDto.Attributes">
            <summary>
            The attributes associated to the report
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaReportForAttributeUpdateDto.Filters">
            <summary>
            The filters associated to the report
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaReportForUpdateDto.ReportName">
            <summary>
            The name of the meta report
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaReportForUpdateDto.ReportDefinition">
            <summary>
            What the purpose of the report is
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaReportForUpdateDto.MetaDefinition">
            <summary>
            Report configuration details. Currently not in use
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaReportForUpdateDto.Breadcrumb">
            <summary>
            Report breadcrumb. Currently not in use
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaReportForUpdateDto.ReportStatus">
            <summary>
            Is the report in a published or unpublished state
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaReportForUpdateDto.ReportType">
            <summary>
            Is the report a list or summary based report
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaReportForUpdateDto.CoreEntity">
            <summary>
            The core entity of the report
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.MetaReportIdentifierDto">
            <summary>
            A meta report representation DTO - IDENTIFIER ONLY
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaReportIdentifierDto.Id">
            <summary>
            The unique Id of the meta report
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaReportIdentifierDto.MetaReportGuid">
            <summary>
            The globally unique identifier for the meta report
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaReportIdentifierDto.ReportName">
            <summary>
            The name of the meta report
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.MetaSummaryDto">
            <summary>
            A meta summary representation DTO
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaSummaryDto.LatestRefreshDate">
            <summary>
            The last time meta data has been refreshed
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaSummaryDto.PatientCount">
            <summary>
            Total number of patient records included in meta refresh
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.MetaTableDetailDto">
            <summary>
            A meta table representation DTO - FULL DETAILS
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaTableDetailDto.TableName">
            <summary>
            The name of the table
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaTableDetailDto.FriendlyName">
            <summary>
            A friendly name for the table
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaTableDetailDto.FriendlyDescription">
            <summary>
            A friendly description for the table
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaTableDetailDto.TableType">
            <summary>
            The type of table
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.MetaTableExpandedDto">
            <summary>
            A meta table representation DTO - EXPANDED
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaTableExpandedDto.Columns">
            <summary>
            The columns associated to this meta table
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.MetaTableIdentifierDto">
            <summary>
            A meta table representation DTO - IDENTIFIER ONLY
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaTableIdentifierDto.Id">
            <summary>
            The unique Id of the meta table
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MetaTableIdentifierDto.MetaTableGuid">
            <summary>
            The globally unique identifier for the meta table
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.NotificationDto.Identifier">
            <summary>
            Identifier of notification
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.NotificationDto.Icon">
            <summary>
            Notification icon
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.NotificationDto.Time">
            <summary>
            When the notification was created
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.NotificationDto.Message">
            <summary>
            Details of the notification
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.NotificationDto.Route">
            <summary>
            For routing purposed
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.NotificationDto.Color">
            <summary>
            Color scheme to use
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.AnalyserTermSetResourceParameters.ConditionId">
            <summary>
            Filter analysis by selected condition
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.AnalyserTermSetResourceParameters.CohortGroupId">
            <summary>
            Filter analysis by selected cohort group
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.AnalyserTermSetResourceParameters.SearchFrom">
            <summary>
            Filter by range
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.AnalyserTermSetResourceParameters.SearchTo">
            <summary>
            Filter by range
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.AnalyserTermSetResourceParameters.RiskFactorOptionNames">
            <summary>
            Include risk factor options into analysis
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.AnalyserDatasetResourceParameters.CohortGroupId">
            <summary>
            Filter analysis dataset by selected cohort group
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.AppointmentResourceParameters.OrderBy">
            <summary>
            Specify the order you would like appointments returned in  
            Default order attribute is Id  
            Other valid options are AppointmentDate
            Attribute must appear in payload to be sortable
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.AppointmentResourceParameters.FacilityName">
            <summary>
            Filter appointments by facility name
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.AppointmentResourceParameters.PatientId">
            <summary>
            Filter appointments by patient id
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.AppointmentResourceParameters.FirstName">
            <summary>
            Filter appointments by patient first name
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.AppointmentResourceParameters.LastName">
            <summary>
            Filter appointments by patient last name
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.AppointmentResourceParameters.CriteriaId">
            <summary>
            Filter appointments by criteria
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.AppointmentResourceParameters.SearchFrom">
            <summary>
            Filter appointments by range
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.AppointmentResourceParameters.SearchTo">
            <summary>
            Filter appointments by range
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.AppointmentResourceParameters.CustomAttributeId">
            <summary>
            Filter appointments by custom attribute
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.AppointmentResourceParameters.CustomAttributeValue">
            <summary>
            Filter appointments by custom attribute value
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.AuditLogResourceParameters.OrderBy">
            <summary>
            Specify the order you would like audit log transactions returned in  
            Default order attribute is ActionDate  
            Attribute must appear in payload to be sortable
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.AuditLogResourceParameters.AuditType">
            <summary>
            The type of audit transaction to query
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.AuditLogResourceParameters.SearchFrom">
            <summary>
            Filter audit logs by range
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.AuditLogResourceParameters.SearchTo">
            <summary>
            Filter audit logs by range
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.AuditLogResourceParameters.FacilityId">
            <summary>
            Filter audit logs by facility
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.BaseResourceParameters.PageNumber">
            <summary>
            The page number that you would like returned. Review the X-Pagination header in the response to view total number  
            of pages
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.BaseResourceParameters.PageSize">
            <summary>
            The page size that you would like returned. Review the X-Pagination header in the response to view total number  
            of pages based on the requested page size. A default page size of 10 is used if no page size is requested  
            and the maximum page size is 20. Any request above 20 will be ignored and 20 will be used.
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.CohortGroupEnrolmentResourceParameters.OrderBy">
            <summary>
            Specify the order you would like cohort group enrolments returned in  
            Default order attribute is EnroledDate  
            Attribute must appear in payload to be sortable
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.CohortGroupResourceParameters.OrderBy">
            <summary>
            Specify the order you would like cohort groups returned in  
            Default order attribute is Id  
            Other valid options are CohortName, CohortCode, StartDate
            Attribute must appear in payload to be sortable
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.ConceptResourceParameters.OrderBy">
            <summary>
            Specify the order you would like concepts returned in  
            Default order attribute is Id  
            Attribute must appear in payload to be sortable
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.ConceptResourceParameters.SearchTerm">
            <summary>
            Provide the ability to filter products using a partial or full search term
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.ConceptResourceParameters.Active">
            <summary>
            Provide the ability to filter by the resources status
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.ConditionResourceParameters.OrderBy">
            <summary>
            Specify the order you would like conditions returned in  
            Default order attribute is Id  
            Other valid options are Description
            Attribute must appear in payload to be sortable
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.ConditionResourceParameters.Active">
            <summary>
            Provide the ability to filter by the resources status
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.ConfigResourceParameters.OrderBy">
            <summary>
            Specify the order you would like lab results returned in  
            Default order attribute is Id  
            Attribute must appear in payload to be sortable
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.ContactResourceParameters.OrderBy">
            <summary>
            Specify the order you would like contacts returned in  
            Default order attribute is Id  
            Attribute must appear in payload to be sortable
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.CustomAttributeResourceParameters.OrderBy">
            <summary>
            Specify the order you would like custom attributes returned in  
            Default order attribute is AttributeKey  
            Other valid options are Id, CustomAttributeConfigurationGuid, ExtendableTypeName  
            Attribute must appear in payload to be sortable  
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.CustomAttributeResourceParameters.ExtendableTypeName">
            <summary>
            Filter by extendable type name  
            Valid options are 0 = All, 1 = Household, 2 = HouseholdMember
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.CustomAttributeResourceParameters.CustomAttributeType">
            <summary>
            Filter by attribute type  
            Valid options are 0 = All, 1 = None, 2 = Numeric, 3 = String, 4 = Selection, 5 - DateTime, 6 - FirstClassProperty
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.CustomAttributeResourceParameters.IsSearchable">
            <summary>
            Filter by searchable values only
            Valid options are true, false
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.DatasetElementResourceParameters.OrderBy">
            <summary>
            Specify the order you would like dataset elements returned in  
            Default order attribute is Id  
            Attribute must appear in payload to be sortable
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.DatasetElementResourceParameters.DatasetName">
            <summary>
            Provide the ability to filter dataset elements by the dataset they are allocated too
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.DatasetElementResourceParameters.ElementName">
            <summary>
            Provide the ability to filter dataset elements using a partial or full search term
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.EncounterResourceParameters.OrderBy">
            <summary>
            Specify the order you would like encounters returned in  
            Default order attribute is Id  
            Other valid options are EncounterDate
            Attribute must appear in payload to be sortable
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.EncounterResourceParameters.FacilityName">
            <summary>
            Filter patients by facility name
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.EncounterResourceParameters.PatientId">
            <summary>
            Filter encounters by patient id
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.EncounterResourceParameters.FirstName">
            <summary>
            Filter encounters by patient first name
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.EncounterResourceParameters.LastName">
            <summary>
            Filter encounters by patient last name
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.EncounterResourceParameters.CriteriaId">
            <summary>
            Filter encounters by criteria
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.EncounterResourceParameters.SearchFrom">
            <summary>
            Filter encounters by range
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.EncounterResourceParameters.SearchTo">
            <summary>
            Filter encounters by range
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.EncounterResourceParameters.CustomAttributeId">
            <summary>
            Filter encounters by custom attribute
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.EncounterResourceParameters.CustomAttributeValue">
            <summary>
            Filter encounters by custom attribute value
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.FacilityResourceParameters.OrderBy">
            <summary>
            Specify the order you would like facilities returned in  
            Default order attribute is Id  
            Other valid options are FacilityName
            Attribute must appear in payload to be sortable
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.FacilityTypeResourceParameters.OrderBy">
            <summary>
            Specify the order you would like facility types returned in  
            Default order attribute is description  
            Attribute must appear in payload to be sortable
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.HolidayResourceParameters.OrderBy">
            <summary>
            Specify the order you would like holidays  returned in  
            Default order attribute is Id  
            Attribute must appear in payload to be sortable
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.IdResourceParameters.OrderBy">
            <summary>
            Default order attribute is Id  
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.LabResultResourceParameters.OrderBy">
            <summary>
            Specify the order you would like lab results returned in  
            Default order attribute is Description  
            Attribute must appear in payload to be sortable
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.LabResultResourceParameters.SearchTerm">
            <summary>
            Provide the ability to filter lab results using a partial or full search term
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.LabResultResourceParameters.Active">
            <summary>
            Provide the ability to filter by the resources status
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.LabTestResourceParameters.OrderBy">
            <summary>
            Specify the order you would like lab tests returned in  
            Default order attribute is Description  
            Attribute must appear in payload to be sortable
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.LabTestResourceParameters.SearchTerm">
            <summary>
            Provide the ability to filter lab tests using a partial or full search term
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.LabTestResourceParameters.Active">
            <summary>
            Provide the ability to filter by the resources status
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.LabTestUnitResourceParameters.OrderBy">
            <summary>
            Specify the order you would like lab test units returned in  
            Default order attribute is Description  
            Attribute must appear in payload to be sortable
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.LabTestUnitResourceParameters.SearchTerm">
            <summary>
            Provide the ability to filter lab test units using a partial or full search term
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.MeddraTermResourceParameters.OrderBy">
            <summary>
            Specify the order you would like meddra terms returned in  
            Default order attribute is Id  
            Attribute must appear in payload to be sortable
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.MeddraTermResourceParameters.TermType">
            <summary>
            Filter meddra terms by term type
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.MeddraTermResourceParameters.ParentSearchTerm">
            <summary>
            Filter meddra terms using parent search term
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.MeddraTermResourceParameters.SearchTerm">
            <summary>
            Filter meddra terms using search term
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.MeddraTermResourceParameters.SearchCode">
            <summary>
            Filter meddra terms using meddra code
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.MedicationFormResourceParameters.OrderBy">
            <summary>
            Specify the order you would like medication forms returned in  
            Default order attribute is description  
            Attribute must appear in payload to be sortable
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.MedicationResourceParameters.OrderBy">
            <summary>
            Specify the order you would like medications returned in  
            Default order attribute is Id  
            Attribute must appear in payload to be sortable
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.MetaFormResourceParameters.OrderBy">
            <summary>
            Specify the order you would like meta forms returned in  
            Default order attribute is Id  
            Attribute must appear in payload to be sortable
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.MetaResourceParameters.OrderBy">
            <summary>
            Specify the order you would like meta resources returned in  
            Default order attribute is Id  
            Attribute must appear in payload to be sortable
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.PatientResourceParameters.OrderBy">
            <summary>
            Specify the order you would like patients returned in  
            Default order attribute is Id  
            Other valid options are FirstName, Surname, Age
            Attribute must appear in payload to be sortable
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.PatientResourceParameters.FacilityName">
            <summary>
            Filter patients by facility name
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.PatientResourceParameters.PatientId">
            <summary>
            Filter patients by patient id
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.PatientResourceParameters.FirstName">
            <summary>
            Filter patients by patient first name
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.PatientResourceParameters.LastName">
            <summary>
            Filter patients by patient last name
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.PatientResourceParameters.DateOfBirth">
            <summary>
            Filter patients by patient date of birth
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.PatientResourceParameters.CustomAttributeId">
            <summary>
            Filter patients by custom attribute
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.PatientResourceParameters.CustomAttributeValue">
            <summary>
            Filter patients by custom attribute value
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.ProductResourceParameters.OrderBy">
            <summary>
            Specify the order you would like products returned in  
            Default order attribute is Id  
            Attribute must appear in payload to be sortable
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.ProductResourceParameters.SearchTerm">
            <summary>
            Provide the ability to filter products using a partial or full search term
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.ProductResourceParameters.Active">
            <summary>
            Provide the ability to filter by the resources status
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.ReportInstanceNewResourceParameters.OrderBy">
            <summary>
            Specify the order you would like report instances returned in  
            Default order attribute is Id  
            Attribute must appear in payload to be sortable
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.ReportInstanceNewResourceParameters.SearchTerm">
            <summary>
            Filter reports by generic search term
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.ReportInstanceResourceParameters.OrderBy">
            <summary>
            Specify the order you would like report instances returned in  
            Default order attribute is Id  
            Attribute must appear in payload to be sortable
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.ReportInstanceResourceParameters.QualifiedName">
            <summary>
            Filter reports by activity qualified name
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.ReportInstanceResourceParameters.SearchFrom">
            <summary>
            Filter encounters by range
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.ReportInstanceResourceParameters.SearchTo">
            <summary>
            Filter encounters by range
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.ReportInstanceResourceParameters.SearchTerm">
            <summary>
            Filter reports by generic search term
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.ReportInstanceResourceParameters.ActiveReportsOnly">
            <summary>
            Provide the ability to filter by active reports only
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.AdverseEventReportResourceParameters.AdverseEventCriteria">
            <summary>
            Filter reports by criteria
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.AdverseEventReportResourceParameters.AdverseEventStratifyCriteria">
            <summary>
            Filter reports by criteria
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.BaseReportResourceParameters.SearchFrom">
            <summary>
            Filter by range
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.BaseReportResourceParameters.SearchTo">
            <summary>
            Filter by range
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.CausalityReportResourceParameters.FacilityId">
            <summary>
            Filter reports by facility id
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.CausalityReportResourceParameters.CausalityCriteria">
            <summary>
            Filter reports by criteria
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.OutstandingVisitResourceParameters.FacilityId">
            <summary>
            Filter appointments by facility id
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.PatientMedicationReportResourceParameters.SearchTerm">
            <summary>
            Provide the ability to filter by medication name using a partial or full search term
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.PatientTreatmentReportResourceParameters.PatientOnStudyCriteria">
            <summary>
            Filter reports by criteria
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.UserResourceParameters.OrderBy">
            <summary>
            Specify the order you would like lab tests returned in  
            Default order attribute is LastName
            Attribute must appear in payload to be sortable
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.Parameters.UserResourceParameters.SearchTerm">
            <summary>
            Provide the ability to filter users using a partial or full search term
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.AdverseEventFrequencyReportDto">
            <summary>
            A dto representing the output for an adverse event report
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AdverseEventFrequencyReportDto.PeriodDisplay">
            <summary>
            The reporting period
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AdverseEventFrequencyReportDto.SystemOrganClass">
            <summary>
            Meddra term
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AdverseEventFrequencyReportDto.FacilityName">
            <summary>
            Name of thr facility
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AdverseEventFrequencyReportDto.Grade1Count">
            <summary>
            The total number of patients for grade 1
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AdverseEventFrequencyReportDto.Grade2Count">
            <summary>
            The total number of patients for grade 2
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AdverseEventFrequencyReportDto.Grade3Count">
            <summary>
            The total number of patients for grade 3
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AdverseEventFrequencyReportDto.Grade4Count">
            <summary>
            The total number of patients for grade 4
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AdverseEventFrequencyReportDto.Grade5Count">
            <summary>
            The total number of patients for grade 5
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AdverseEventFrequencyReportDto.GradeUnknownCount">
            <summary>
            The total number of patients for grade unknown
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.AdverseEventReportDto">
            <summary>
            A dto representing the output for an adverse event report
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AdverseEventReportDto.AdverseEvent">
            <summary>
            The adverse event being reported on
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AdverseEventReportDto.Criteria">
            <summary>
            Stratification criteris
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AdverseEventReportDto.Serious">
            <summary>
            Stratification by is serious
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.AdverseEventReportDto.PatientCount">
            <summary>
            The total number of patients meeting the criteria
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.PatientClinicalEventDetailDto">
            <summary>
            A patient clinical event representation DTO - FULL DETAILS
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientClinicalEventDetailDto.SourceDescription">
            <summary>
            The source description of the clinical event
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientClinicalEventDetailDto.SourceTerminologyMedDraId">
            <summary>
            The unqiue identifier of the source meddra term
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientClinicalEventDetailDto.MedDraTerm">
            <summary>
            The source meddra term of the clinical event
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientClinicalEventDetailDto.OnsetDate">
            <summary>
            The onset date of the event
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientClinicalEventDetailDto.ResolutionDate">
            <summary>
            The resolution date of the event
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientClinicalEventDetailDto.ClinicalEventAttributes">
            <summary>
            A list of custom attributes associated to the patient
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientClinicalEventDetailDto.ReportDate">
            <summary>
            Custom attribute - date of the report
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientClinicalEventDetailDto.IsSerious">
            <summary>
            Is the report serious
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.PatientClinicalEventExpandedDto">
            <summary>
            A patient clinical event representation DTO - EXPANDED DETAILS
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientClinicalEventExpandedDto.SetMedDraTerm">
            <summary>
            The MedDra term as set by the PV specialist
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientClinicalEventExpandedDto.Medications">
            <summary>
            Medications which have causality set
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientClinicalEventExpandedDto.Activity">
            <summary>
            All activity for this reporting instance
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientClinicalEventForUpdateDto.SourceDescription">
            <summary>
            The description of the source event
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientClinicalEventForUpdateDto.SourceTerminologyMedDraId">
            <summary>
            The unique identifier of the meddra term
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientClinicalEventForUpdateDto.OnsetDate">
            <summary>
            The onset date of the clinical event
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientClinicalEventForUpdateDto.ResolutionDate">
            <summary>
            The resolution date of the clinical event
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientClinicalEventForUpdateDto.Attributes">
            <summary>
            Clinical event custom attributes
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.PatientClinicalEventIdentifierDto">
            <summary>
            A patient clinical event representation DTO - IDENTIFIER ONLY
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientClinicalEventIdentifierDto.Id">
            <summary>
            The unique Id of the patient ondition
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientClinicalEventIdentifierDto.PatientClinicalEventGuid">
            <summary>
            The globally unique identifier for the patient clinical event
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.PatientTreatmentReportDto">
            <summary>
            A dto representing the output for a patient on treatment report
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientTreatmentReportDto.FacilityId">
            <summary>
            The unique identifier for the facility
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientTreatmentReportDto.FacilityName">
            <summary>
            The name of the facility
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientTreatmentReportDto.PatientCount">
            <summary>
            The total number of patients
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientTreatmentReportDto.PatientWithNonSeriousEventCount">
            <summary>
            The total number of patients with a non serious event
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientTreatmentReportDto.PatientWithSeriousEventCount">
            <summary>
            The total number of patients with a serious event
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientTreatmentReportDto.PatientWithEventCount">
            <summary>
            The total number of patients with an event
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientTreatmentReportDto.EventPercentage">
            <summary>
            Percentage of patients with an event
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientTreatmentReportDto.Patients">
            <summary>
            List of patients for selected facility
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.OutcomeIdentifierDto">
            <summary>
            An outcome representation DTO - IDENTIFIER ONLY
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.OutcomeIdentifierDto.Id">
            <summary>
            The unique Id of the outcome
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.OutcomeIdentifierDto.OutcomeName">
            <summary>
            The name of the outcome
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.PatientConditionDetailDto">
            <summary>
            A patient condition representation DTO - FULL DETAILS
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientConditionDetailDto.SourceDescription">
            <summary>
            The source description of the condition
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientConditionDetailDto.SourceTerminologyMedDraId">
            <summary>
            The unqiue identifier of the source meddra term
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientConditionDetailDto.MedDraTerm">
            <summary>
            The source meddra term of the condition
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientConditionDetailDto.StartDate">
            <summary>
            The start date of the condition
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientConditionDetailDto.OutcomeDate">
            <summary>
            The outcome date of the condition
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientConditionDetailDto.Outcome">
            <summary>
            The outcome of the condition
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientConditionDetailDto.TreatmentOutcome">
            <summary>
            The treatment outcome of the condition
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientConditionDetailDto.ConditionAttributes">
            <summary>
            A list of custom attributes associated to the patient condition
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientConditionForUpdateDto.SourceDescription">
            <summary>
            The description of the source condition
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientConditionForUpdateDto.SourceTerminologyMedDraId">
            <summary>
            The unique identifier of the meddra term
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientConditionForUpdateDto.StartDate">
            <summary>
            The start date of the condition
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientConditionForUpdateDto.OutcomeDate">
            <summary>
            The date of the condition outcome
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientConditionForUpdateDto.Outcome">
            <summary>
            The look up value for the condition outcome
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientConditionForUpdateDto.TreatmentOutcome">
            <summary>
            The look up value for the treatment outcome
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientConditionForUpdateDto.Comments">
            <summary>
            Comments associated to the condition
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientConditionForUpdateDto.Attributes">
            <summary>
            Condition custom attributes
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.PatientConditionGroupDto">
            <summary>
            A representation of a list of condition groups a patient belongs to
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientConditionGroupDto.ConditionGroup">
            <summary>
            The condition group that the patient belongs to
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientConditionGroupDto.Status">
            <summary>
            The current status of the condition
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientConditionGroupDto.Detail">
            <summary>
            Addition details to be displayed in patient view
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientConditionGroupDto.StartDate">
            <summary>
            Condition start date
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientConditionGroupDto.PatientConditionId">
            <summary>
            The unique ID of the patient condition
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.PatientConditionIdentifierDto">
            <summary>
            A patient condition representation DTO - IDENTIFIER ONLY
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientConditionIdentifierDto.Id">
            <summary>
            The unique Id of the patient condition
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientConditionIdentifierDto.PatientConditionGuid">
            <summary>
            The globally unique identifier for the patient condition
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.TreatmentOutcomeIdentifierDto">
            <summary>
            A treatment outcome representation DTO - IDENTIFIER ONLY
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.TreatmentOutcomeIdentifierDto.Id">
            <summary>
            The unique Id of the treatment outcome
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.TreatmentOutcomeIdentifierDto.TreatmentOutcomeName">
            <summary>
            The name of the treatment outcome
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.LabTestUnitForUpdateDto.LabTestUnitName">
            <summary>
            The name of the lab test unit
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.LabTestUnitIdentifierDto">
            <summary>
            A lab test unit representation DTO - IDENTIFIER ONLY
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.LabTestUnitIdentifierDto.Id">
            <summary>
            The unique Id of the lab test unit
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.LabTestUnitIdentifierDto.LabTestUnitName">
            <summary>
            The name of the lab test unit
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.PatientLabTestDetailDto">
            <summary>
            A patient lab test representation DTO - FULL DETAILS
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientLabTestDetailDto.LabTest">
            <summary>
            The name of the lab test
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientLabTestDetailDto.TestDate">
            <summary>
            The date of the test
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientLabTestDetailDto.TestResultCoded">
            <summary>
            Test result - coded
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientLabTestDetailDto.TestResultValue">
            <summary>
            Test result - value
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientLabTestDetailDto.TestUnit">
            <summary>
            The unit of the test
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientLabTestDetailDto.ReferenceLower">
            <summary>
            The lower range of the test result
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientLabTestDetailDto.ReferenceUpper">
            <summary>
            The upper range of the test result
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientLabTestDetailDto.LabTestAttributes">
            <summary>
            A list of custom attributes associated to the patient condition
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientLabTestForUpdateDto.LabTest">
            <summary>
            The look up value for the lab test
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientLabTestForUpdateDto.TestDate">
            <summary>
            The date the test was conducted
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientLabTestForUpdateDto.TestResultCoded">
            <summary>
            Test result - coded
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientLabTestForUpdateDto.TestResultValue">
            <summary>
            Test result - value
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientLabTestForUpdateDto.TestUnit">
            <summary>
            The look up value for the test unit
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientLabTestForUpdateDto.ReferenceLower">
            <summary>
            The lower range of the test result
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientLabTestForUpdateDto.ReferenceUpper">
            <summary>
            The upper range of the test result
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientLabTestForUpdateDto.Attributes">
            <summary>
            Lab test custom attributes
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.PatientLabTestIdentifierDto">
            <summary>
            A patient lab test representation DTO - IDENTIFIER ONLY
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientLabTestIdentifierDto.Id">
            <summary>
            The unique Id of the patient lab test
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientLabTestIdentifierDto.PatientLabTestGuid">
            <summary>
            The globally unique identifier for the patient lab test
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.PatientListDto">
            <summary>
            A list representation containing details of a patient
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientListDto.PatientId">
            <summary>
            Unique identifier for the patient
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientListDto.FullName">
            <summary>
            full name of the patient
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientListDto.FacilityName">
            <summary>
            The name of the facility that the patient belongs to
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.PatientMedicationDetailDto">
            <summary>
            A patient medication representation DTO - FULL DETAILS
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientMedicationDetailDto.SourceDescription">
            <summary>
            The source description of the medication
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientMedicationDetailDto.ConceptId">
            <summary>
            The unqiue identifier of the medication concept
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientMedicationDetailDto.ProductId">
            <summary>
            The unqiue identifier of the medication product
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientMedicationDetailDto.Medication">
            <summary>
            The display name for the medication (based on concept and product)
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientMedicationDetailDto.Dose">
            <summary>
            The dose of the medication
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientMedicationDetailDto.DoseUnit">
            <summary>
            The dose unit of the medication
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientMedicationDetailDto.DoseFrequency">
            <summary>
            The dosing frequency of the medication
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientMedicationDetailDto.StartDate">
            <summary>
            The start date of the medication
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientMedicationDetailDto.EndDate">
            <summary>
            The end date of the medication
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientMedicationDetailDto.IndicationType">
            <summary>
            The indication type of the medication
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientMedicationDetailDto.MedicationAttributes">
            <summary>
            A list of custom attributes associated to the patient medication
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientMedicationForUpdateDto.SourceDescription">
            <summary>
            The description of the source medication
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientMedicationForUpdateDto.ConceptId">
            <summary>
            The unique identifier of the medication concept
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientMedicationForUpdateDto.ProductId">
            <summary>
            The unique identifier of the medication product
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientMedicationForUpdateDto.StartDate">
            <summary>
            The start date of the medication
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientMedicationForUpdateDto.EndDate">
            <summary>
            The end date of the medication
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientMedicationForUpdateDto.Dose">
            <summary>
            The dose of the medication
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientMedicationForUpdateDto.DoseFrequency">
            <summary>
            The dose frequency of the medication
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientMedicationForUpdateDto.DoseUnit">
            <summary>
            The unit of the dose
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientMedicationForUpdateDto.Attributes">
            <summary>
            Condition custom attributes
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.PatientMedicationIdentifierDto">
            <summary>
            A patient medication representation DTO - IDENTIFIER ONLY
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientMedicationIdentifierDto.Id">
            <summary>
            The unique Id of the patient medication
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientMedicationIdentifierDto.PatientMedicationGuid">
            <summary>
            The globally unique identifier for the patient medication
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.PatientMedicationReportDto">
            <summary>
            A dto representing the output for a patient on medication report
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientMedicationReportDto.ConceptId">
            <summary>
            The unique Id of the concept
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientMedicationReportDto.ConceptName">
            <summary>
            The name of the concept
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientMedicationReportDto.PatientCount">
            <summary>
            The total number of patients on this medication
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientMedicationReportDto.Patients">
            <summary>
            List of patients on the current medication
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientAttachmentForCreationDto.Description">
            <summary>
            A description of the file
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientAttachmentForCreationDto.Attachment">
            <summary>
            The posted attachment
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.PatientDetailDto">
            <summary>
            A patient representation DTO - FULL DETAILS
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientDetailDto.FirstName">
            <summary>
            The first name of the patient
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientDetailDto.MiddleName">
            <summary>
            The middle name of the patient
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientDetailDto.LastName">
            <summary>
            The last name of the patient
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientDetailDto.DateOfBirth">
            <summary>
            The date of birth of the patient
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientDetailDto.Age">
            <summary>
            The age of the patient
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientDetailDto.AgeGroup">
            <summary>
            The age group of the patient
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientDetailDto.CreatedDetail">
            <summary>
            Details of the household creation
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientDetailDto.UpdatedDetail">
            <summary>
            Details of the last update to the household
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientDetailDto.LatestEncounterDate">
            <summary>
            The latest encounter date of the patient
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientDetailDto.CurrentStatus">
            <summary>
            The current status of the patient
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientDetailDto.MedicalRecordNumber">
            <summary>
            The medical record number of the patient
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientDetailDto.Notes">
            <summary>
            Free format notes for the patient
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientDetailDto.PatientAttributes">
            <summary>
            A list of custom attributes associated to the patient
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.PatientExpandedDto">
            <summary>
            A patient representation DTO - EXPANDED DETAILS
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientExpandedDto.Appointments">
            <summary>
            A list of appointments associated to the patient
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientExpandedDto.Attachments">
            <summary>
            A list of attachments associated to the patient
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientExpandedDto.PatientStatusHistories">
            <summary>
            A list of status changes associated to the patient
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientExpandedDto.Encounters">
            <summary>
            A list of status changes associated to the patient
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientExpandedDto.CohortGroups">
            <summary>
            List of conhort groups with associated enrolment if relevant
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientExpandedDto.PatientConditions">
            <summary>
            List of conditions associated to the patient
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientExpandedDto.PatientClinicalEvents">
            <summary>
            List of clinical events associated to the patient
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientExpandedDto.PatientMedications">
            <summary>
            List of medications associated to the patient
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientExpandedDto.PatientLabTests">
            <summary>
            List of lab tests associated to the patient
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientExpandedDto.ConditionGroups">
            <summary>
            List of condition groups the patient belongs to
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientExpandedDto.Activity">
            <summary>
            Activity per clinical event
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientForCreationDto.FirstName">
            <summary>
            The first name of the patient
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientForCreationDto.LastName">
            <summary>
            The first name of the patient
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientForCreationDto.MiddleName">
            <summary>
            The first name of the patient
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientForCreationDto.DateOfBirth">
            <summary>
            The date of birth of the patient
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientForCreationDto.FacilityName">
            <summary>
            The facility that the patient is being registered against
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientForCreationDto.ConditionGroupId">
            <summary>
            The primary condition group for the patient
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientForCreationDto.MeddraTermId">
            <summary>
            The meddra term that has been associated to the primary group that the patient belongs to
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientForCreationDto.CohortGroupId">
            <summary>
            The cohort group the patient should be assigned to
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientForCreationDto.EnroledDate">
            <summary>
            The date the patient should be enroled into this cohort
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientForCreationDto.StartDate">
            <summary>
            The start date of the primary condition
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientForCreationDto.OutcomeDate">
            <summary>
            The end date of the primary condition
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientForCreationDto.Comments">
            <summary>
            Any comments associated to th
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientForCreationDto.Attributes">
            <summary>
            The facility that the patient is being registered against
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientForCreationDto.EncounterTypeId">
            <summary>
            The type of encounter on patient registration
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientForCreationDto.PriorityId">
            <summary>
            The priority of the encounter
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientForCreationDto.EncounterDate">
            <summary>
            The date of the encounter
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientForUpdateDto.FirstName">
            <summary>
            The first name of the patient
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientForUpdateDto.LastName">
            <summary>
            The first name of the patient
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientForUpdateDto.MiddleName">
            <summary>
            The first name of the patient
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientForUpdateDto.DateOfBirth">
            <summary>
            The date of birth of the patient
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientForUpdateDto.Notes">
            <summary>
            Generic patient notes
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientForUpdateDto.FacilityName">
            <summary>
            The facility that the patient is being registered against
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientForUpdateDto.Attributes">
            <summary>
            Patient custom attributes and associated values
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.PatientIdentifierDto">
            <summary>
            A patient representation DTO - IDENTIFIER ONLY
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientIdentifierDto.Id">
            <summary>
            The unique Id of the patient
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientIdentifierDto.PatientGuid">
            <summary>
            The globally unique identifier for the patient
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientIdentifierDto.FacilityName">
            <summary>
            The current facility of the patient
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.PatientStatusDto">
            <summary>
            A representation of a patient's status
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientStatusDto.EffectiveDate">
            <summary>
            The effective date of the status
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientStatusDto.Comments">
            <summary>
            Any additional comments to the status
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientStatusDto.PatientStatus">
            <summary>
            The status of the patient
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientStatusDto.CreatedDetail">
            <summary>
            Details of the household creation
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.PatientStatusDto.UpdatedDetail">
            <summary>
            Details of the last update to the household
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.ActivityChangeDto">
            <summary>
            A representation of a change in activity status
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ActivityChangeDto.Comments">
            <summary>
            Comments associated to the change in status
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ActivityChangeDto.CurrentExecutionStatus">
            <summary>
            The current status of the activity
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ActivityChangeDto.NewExecutionStatus">
            <summary>
            The new status of the activity
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ActivityChangeDto.ContextCode">
            <summary>
            Code for submitting E2B
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ActivityChangeDto.ContextDate">
            <summary>
            Date of E2B submission
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.ActivityExecutionStatusEventDto">
            <summary>
            A activity history value representation containing audit details of all activities
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ActivityExecutionStatusEventDto.Id">
            <summary>
            The unique identifier of the status event
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ActivityExecutionStatusEventDto.PatientClinicalEventId">
            <summary>
            The unique identifier of the adverse event the activity has been performed against
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ActivityExecutionStatusEventDto.AdverseEvent">
            <summary>
            The adverse event the activity has been performed against
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ActivityExecutionStatusEventDto.Activity">
            <summary>
            The activity the action has been performed against
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ActivityExecutionStatusEventDto.ExecutionEvent">
            <summary>
            The event that has been executed
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ActivityExecutionStatusEventDto.ExecutedBy">
            <summary>
            Who has executed the event
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ActivityExecutionStatusEventDto.ExecutedDate">
            <summary>
            The date and time the event was executed
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ActivityExecutionStatusEventDto.Comments">
            <summary>
            Any additional comments
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ActivityExecutionStatusEventDto.ReceiptDate">
            <summary>
            The date the E2B extract receipt was confirmed
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ActivityExecutionStatusEventDto.ReceiptCode">
            <summary>
            A code for the E2B extract receipt
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ActivityExecutionStatusEventDto.PatientSummaryFileId">
            <summary>
            The unique identifier of the patient summary attachment
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ActivityExecutionStatusEventDto.PatientExtractFileId">
            <summary>
            The unique identifier of the patient extract attachment
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ActivityExecutionStatusEventDto.E2bXmlFileId">
            <summary>
            The unique identifier of the xml file attachment
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.CausalityReportDto">
            <summary>
            A dto representing the output for a causality report
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.CausalityReportDto.FirstName">
            <summary>
            The first name of the patient with the causality status
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.CausalityReportDto.LastName">
            <summary>
            The last name of the patient with the causality status
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.CausalityReportDto.FacilityName">
            <summary>
            The name of the facility
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.CausalityReportDto.AdverseEvent">
            <summary>
            The name of the adverse event
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.CausalityReportDto.Serious">
            <summary>
            Is the adverse event serious
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.CausalityReportDto.OnsetDate">
            <summary>
            The adverse event date of onset
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.CausalityReportDto.NaranjoCausality">
            <summary>
            Naranjo causality indicator
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.CausalityReportDto.WhoCausality">
            <summary>
            Who causality indicator
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.CausalityReportDto.MedicationIdentifier">
            <summary>
            The medication the causality has been set for
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.IncidenceRateDto">
            <summary>
            A dto representing the incidence rate for a medication (exposed or non-exposed)
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.IncidenceRateDto.Cases">
            <summary>
            The number of cases for the population set
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.IncidenceRateDto.NonCases">
            <summary>
            The number of non cases for the population set
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.IncidenceRateDto.Population">
            <summary>
            The total population for the population set
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.IncidenceRateDto.IncidenceRate">
            <summary>
            The incidence rate for the population set
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.ReportInstanceDetailDto">
            <summary>
            A report instance representation DTO - FULL DETAILS
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ReportInstanceDetailDto.SourceIdentifier">
            <summary>
            Details of the source clinical event as described by the patient or reporter
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ReportInstanceDetailDto.TerminologyMedDra">
            <summary>
            Terminology that has been set by the pv specialist
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ReportInstanceDetailDto.PatientIdentifier">
            <summary>
            Patient identification details
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ReportInstanceDetailDto.PatientId">
            <summary>
            Patient unique identifier (for active reports)
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ReportInstanceDetailDto.PatientClinicalEventId">
            <summary>
            Patient clinical event unique identifier (for active reports)
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ReportInstanceDetailDto.ActivityExecutionStatusEventId">
            <summary>
            The unique identifier of the activity execution status (for E2B attachment)
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ReportInstanceDetailDto.AttachmentId">
            <summary>
            E2B xml file unique identifier
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ReportInstanceDetailDto.CreatedDetail">
            <summary>
            Details of the household creation
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ReportInstanceDetailDto.UpdatedDetail">
            <summary>
            Details of the last update to the household
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ReportInstanceDetailDto.QualifiedName">
            <summary>
            The qualified name of the activity
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ReportInstanceDetailDto.CurrentStatus">
            <summary>
            The current status of the activity
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ReportInstanceDetailDto.E2BInstance">
            <summary>
            The e2b dataset that has been generated for this report
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ReportInstanceDetailDto.SpontaneousInstance">
            <summary>
            The dataset that has been generated for a spontaneous report
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ReportInstanceDetailDto.Medications">
            <summary>
            Medications associated to the reporting instance
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.ReportInstanceIdentifierDto">
            <summary>
            A report instance representation DTO - IDENTIFIER ONLY
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ReportInstanceIdentifierDto.Id">
            <summary>
            The unique Id of the report instance
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ReportInstanceIdentifierDto.ReportInstanceGuid">
            <summary>
            The globally unique identifier for the report instance
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ReportInstanceIdentifierDto.ContextGuid">
            <summary>
            The globally unique identifier for the source context
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ReportInstanceIdentifierDto.Identifier">
            <summary>
            The report identifier
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ReportInstanceMedicationCausalityForUpdateDto.CausalityConfigType">
            <summary>
            The causality scale to be used
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ReportInstanceMedicationCausalityForUpdateDto.Causality">
            <summary>
            The causality status
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.ReportInstanceMedicationDetailDto">
            <summary>
            A report instance medication representation DTO - FULL DETAILS
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ReportInstanceMedicationDetailDto.MedicationIdentifier">
            <summary>
            Medication identification details
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ReportInstanceMedicationDetailDto.NaranjoCausality">
            <summary>
            Naranjo causality assessment for medication
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ReportInstanceMedicationDetailDto.WhoCausality">
            <summary>
            WHO causality assessment for medication
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ReportInstanceMedicationDetailDto.StartDate">
            <summary>
            The start date of the medication
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ReportInstanceMedicationDetailDto.EndDate">
            <summary>
            The end date of the medication
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.ReportInstanceMedicationIdentifierDto">
            <summary>
            A report instance medication representation DTO - IDENTIFIER ONLY
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ReportInstanceMedicationIdentifierDto.Id">
            <summary>
            The unique Id of the medication
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ReportInstanceMedicationIdentifierDto.ReportInstanceId">
            <summary>
            The unique id of the report instance
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ReportInstanceMedicationIdentifierDto.ReportInstanceMedicationGuid">
            <summary>
            The globally unique identifier for the medication
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ReportInstanceTerminologyForUpdateDto.TerminologyMedDraId">
            <summary>
            The unique identifier of the meddra term
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.RiskFactorDetailDto">
            <summary>
            A risk factor representation DTO - FULL DETAILS
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.RiskFactorDetailDto.Criteria">
            <summary>
            The criteria for determining if the risk factor is met
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.RiskFactorDetailDto.Display">
            <summary>
            The name of the risk factor as it is displayed to the user
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.RiskFactorDetailDto.System">
            <summary>
            Is this a system defined element
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.RiskFactorDetailDto.Options">
            <summary>
            A list of selection values associated to the attribute (if applicable)
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.RiskFactorIdentifierDto">
            <summary>
            A risk factor representation DTO - IDENTIFIER ONLY
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.RiskFactorIdentifierDto.Id">
            <summary>
            The unique Id of the risk factor
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.RiskFactorIdentifierDto.FactorName">
            <summary>
            The name of the risk factor
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.RiskFactorIdentifierDto.Active">
            <summary>
            Is this risk factor currently active
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.RiskFactorOptionDto">
            <summary>
            The stratification options associated to a risk factor
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.RiskFactorOptionDto.OptionName">
            <summary>
            The name of the risk factor option
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.RiskFactorOptionDto.Criteria">
            <summary>
            The criteria for determining if the risk factor option is met
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.RiskFactorOptionDto.Display">
            <summary>
            The name of the risk factor option as it is displayed to the user
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.TerminologyMedDraDto">
            <summary>
            A dto representing a MedDRA terminology value
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.TerminologyMedDraDto.MedDraTerm">
            <summary>
            The meddra term
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.TerminologyMedDraDto.MedDraCode">
            <summary>
            The meddra code
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.TerminologyMedDraDto.MedDraTermType">
            <summary>
            The type of meddra term
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MeddraFileForImportDto.Source">
            <summary>
            The source file for import
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.MeddraTermDetailDto">
            <summary>
            A meddra term representation DTO - FULL DETAILS
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MeddraTermDetailDto.ParentMedDraTerm">
            <summary>
            The parent MedDra term
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MeddraTermDetailDto.MedDraTermType">
            <summary>
            The level of the MedDra term
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MeddraTermDetailDto.MedDraVersion">
            <summary>
            The version number of this MedDra term
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MeddraTermDetailDto.Children">
            <summary>
            A list of custom attributes associated to the patient
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.MeddraTermIdentifierDto">
            <summary>
            A meddra term representation DTO - IDENTIFIER ONLY
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MeddraTermIdentifierDto.Id">
            <summary>
            The unique Id of the meddra term
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MeddraTermIdentifierDto.MedDraTerm">
            <summary>
            The name of the term
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.MeddraTermIdentifierDto.MedDraCode">
            <summary>
            The code of the term
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.RoleIdentifierDto">
            <summary>
            A role representation DTO - IDENTIFIER ONLY
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.RoleIdentifierDto.Id">
            <summary>
            The unique Id of the role
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.RoleIdentifierDto.Name">
            <summary>
            The name of the role
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.RoleIdentifierDto.Key">
            <summary>
            The key identifying the role
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.UserDetailDto">
            <summary>
            A user representation DTO - FULL DETAILS
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.UserDetailDto.Email">
            <summary>
            The email address of the user
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.UserDetailDto.AllowDatasetDownload">
            <summary>
            Is this user allowed to download ther analytical dataset
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.UserDetailDto.Active">
            <summary>
            Is this user currently active
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.UserDetailDto.Roles">
            <summary>
            The roles the user has been allocated
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.UserDetailDto.Facilities">
            <summary>
            The facilities the user has been allocated
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.UserForCreationDto.Email">
            <summary>
            The email address of the user
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.UserForCreationDto.UserName">
            <summary>
            The username of the user
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.UserForCreationDto.FirstName">
            <summary>
            The first name of the user
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.UserForCreationDto.LastName">
            <summary>
            The last name of the user
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.UserForCreationDto.Roles">
            <summary>
            Roles the user has been allocated to
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.UserForCreationDto.Facilities">
            <summary>
            Facilities the user has been allocated to
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.UserForUpdateDto.Email">
            <summary>
            The email address of the user
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.UserForUpdateDto.UserName">
            <summary>
            The username of the user
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.UserForUpdateDto.FirstName">
            <summary>
            The first name of the user
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.UserForUpdateDto.LastName">
            <summary>
            The last name of the user
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.UserForUpdateDto.AllowDatasetDownload">
            <summary>
            Is the user able to download the analytical dataset
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.UserForUpdateDto.Active">
            <summary>
            Is the user account currently active
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.UserForUpdateDto.Roles">
            <summary>
            Roles the user has been allocated to
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.UserForUpdateDto.Facilities">
            <summary>
            Facilities the user has been allocated to
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.UserIdentifierDto">
            <summary>
            A user representation DTO - IDENTIFIER ONLY
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.UserIdentifierDto.Id">
            <summary>
            The unique Id of the user
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.UserIdentifierDto.UserName">
            <summary>
            The username of the user
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.UserIdentifierDto.FirstName">
            <summary>
            The first name of the user
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.UserIdentifierDto.LastName">
            <summary>
            The last name of the user
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.UserRoleDto">
            <summary>
            A user role representation DTO
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.UserRoleDto.Id">
            <summary>
            The unique Id of the user role
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.UserRoleDto.Key">
            <summary>
            The role key
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.ActivitySummaryDto">
            <summary>
            A representation of all activity summary 
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ActivitySummaryDto.QualifiedName">
            <summary>
            Qualified name of the activity
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.ActivitySummaryDto.ReportInstanceCount">
            <summary>
            The number of reports currently in this state
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.WorkFlowDetailDto">
            <summary>
            A work flow representation DTO - FULL DETAILS
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.WorkFlowDetailDto.NewReportInstanceCount">
            <summary>
            The number of new reports for this work flow
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.WorkFlowDetailDto.NewFeedbackInstanceCount">
            <summary>
            The number of new feedback items for this work flow
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.WorkFlowDetailDto.ActivityItems">
            <summary>
            Activity summary for this work flow item
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.WorkFlowIdentifierDto">
            <summary>
            A work flow representation DTO - IDENTIFIER ONLY
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.WorkFlowIdentifierDto.Id">
            <summary>
            The unique Id of the work flow
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.WorkFlowIdentifierDto.WorkFlowGuid">
            <summary>
            The globally unique identifier for the work flow
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.WorkFlowIdentifierDto.WorkFlowName">
            <summary>
            The name of the work flow
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.WorkPlanDetailDto">
            <summary>
            A work plan representation DTO - FULL DETAILS
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.WorkPlanDetailDto.DatasetName">
            <summary>
            The name of the dataset
            </summary>
        </member>
        <member name="T:PVIMS.API.Models.WorkPlanIdentifierDto">
            <summary>
            A work plan representation DTO - IDENTIFIER ONLY
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.WorkPlanIdentifierDto.Id">
            <summary>
            The unique Id of the work plan
            </summary>
        </member>
        <member name="P:PVIMS.API.Models.WorkPlanIdentifierDto.WorkPlanName">
            <summary>
            The name of the work plan
            </summary>
        </member>
    </members>
</doc>
